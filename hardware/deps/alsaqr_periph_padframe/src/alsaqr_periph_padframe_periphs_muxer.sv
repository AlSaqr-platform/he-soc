// File auto-generated by Padrick 0.1.0.post0.dev39+g0a36a20
module alsaqr_periph_padframe_periphs_muxer
  import pkg_internal_alsaqr_periph_padframe_periphs::*;
  import pkg_alsaqr_periph_padframe::*;
  import alsaqr_periph_padframe_periphs_config_reg_pkg::*;
#(
  parameter type              req_t  = logic, // reg_interface request type
  parameter type             resp_t  = logic // reg_interface response type
) (
  input logic clk_i,
  input logic rst_ni,
  input pad_domain_periphs_ports_soc2pad_t port_signals_soc2pad_i,
  output pad_domain_periphs_ports_pad2soc_t port_signals_pad2soc_o,
  output mux_to_pads_t mux_to_pads_o,
  input pads_to_mux_t pads_to_mux_i,
  // Configuration interface using register_interface protocol
  input req_t config_req_i,
  output resp_t config_rsp_o
);
   // Connections between register file and pads
     alsaqr_periph_padframe_periphs_config_reg2hw_t s_reg2hw;

  // Register File Instantiation
  alsaqr_periph_padframe_periphs_config_reg_top #(
    .reg_req_t(req_t),
    .reg_rsp_t(resp_t)
    ) i_regfile (
    .clk_i,
    .rst_ni,
    .reg2hw(s_reg2hw),
    .reg_req_i(config_req_i),
    .reg_rsp_o(config_rsp_o),
    .devmode_i(1'b1)
  );


   // SoC -> Pad Multiplex Logic
   // Pad pad_io_a_00
   always_comb begin
     unique case (s_reg2hw.pad_io_a_00_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_00.chip2pad = s_reg2hw.pad_io_a_00_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_00.oen = s_reg2hw.pad_io_a_00_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_00.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_00.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_00.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_00.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_00.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_00.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = s_reg2hw.pad_io_a_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = s_reg2hw.pad_io_a_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_00.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_00.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_00.chip2pad = s_reg2hw.pad_io_a_00_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_00.oen = s_reg2hw.pad_io_a_00_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_a_01
   always_comb begin
     unique case (s_reg2hw.pad_io_a_01_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_01.chip2pad = s_reg2hw.pad_io_a_01_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_01.oen = s_reg2hw.pad_io_a_01_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_01.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_01.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_01.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_01.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_01.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_01.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = s_reg2hw.pad_io_a_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = s_reg2hw.pad_io_a_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_01.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_01.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_01.chip2pad = s_reg2hw.pad_io_a_01_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_01.oen = s_reg2hw.pad_io_a_01_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_a_02
   always_comb begin
     unique case (s_reg2hw.pad_io_a_02_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_02.chip2pad = s_reg2hw.pad_io_a_02_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_02.oen = s_reg2hw.pad_io_a_02_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_02.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_02.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_02.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_02.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_02.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_02.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = s_reg2hw.pad_io_a_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = s_reg2hw.pad_io_a_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_02.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_02.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_02.chip2pad = s_reg2hw.pad_io_a_02_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_02.oen = s_reg2hw.pad_io_a_02_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_a_03
   always_comb begin
     unique case (s_reg2hw.pad_io_a_03_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_03.chip2pad = s_reg2hw.pad_io_a_03_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_03.oen = s_reg2hw.pad_io_a_03_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_03.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_03.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_03.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_03.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_03.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_03.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = s_reg2hw.pad_io_a_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = s_reg2hw.pad_io_a_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_03.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_03.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_03.chip2pad = s_reg2hw.pad_io_a_03_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_03.oen = s_reg2hw.pad_io_a_03_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_a_04
   always_comb begin
     unique case (s_reg2hw.pad_io_a_04_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_04.chip2pad = s_reg2hw.pad_io_a_04_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_04.oen = s_reg2hw.pad_io_a_04_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_04.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_04.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_04.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_04.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_04.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_04.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = s_reg2hw.pad_io_a_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = s_reg2hw.pad_io_a_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_04.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_04.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_04.chip2pad = s_reg2hw.pad_io_a_04_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_04.oen = s_reg2hw.pad_io_a_04_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_a_05
   always_comb begin
     unique case (s_reg2hw.pad_io_a_05_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_05.chip2pad = s_reg2hw.pad_io_a_05_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_05.oen = s_reg2hw.pad_io_a_05_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_05.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_05.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_05.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_05.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_05.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_05.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = s_reg2hw.pad_io_a_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = s_reg2hw.pad_io_a_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_05.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_05.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_05.chip2pad = s_reg2hw.pad_io_a_05_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_05.oen = s_reg2hw.pad_io_a_05_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_a_06
   always_comb begin
     unique case (s_reg2hw.pad_io_a_06_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_06.chip2pad = s_reg2hw.pad_io_a_06_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_06.oen = s_reg2hw.pad_io_a_06_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_06.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_06.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_06.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_06.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_06.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_06.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = s_reg2hw.pad_io_a_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = s_reg2hw.pad_io_a_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_06.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_06.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_06.chip2pad = s_reg2hw.pad_io_a_06_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_06.oen = s_reg2hw.pad_io_a_06_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_a_07
   always_comb begin
     unique case (s_reg2hw.pad_io_a_07_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_07.chip2pad = s_reg2hw.pad_io_a_07_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_07.oen = s_reg2hw.pad_io_a_07_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_07.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_07.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_07.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_07.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_07.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_07.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = s_reg2hw.pad_io_a_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = s_reg2hw.pad_io_a_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_07.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_07.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_07.chip2pad = s_reg2hw.pad_io_a_07_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_07.oen = s_reg2hw.pad_io_a_07_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_a_08
   always_comb begin
     unique case (s_reg2hw.pad_io_a_08_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_08.chip2pad = s_reg2hw.pad_io_a_08_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_08.oen = s_reg2hw.pad_io_a_08_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_08.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_08.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_08.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_08.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_08.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_08.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = s_reg2hw.pad_io_a_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = s_reg2hw.pad_io_a_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_08.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_08.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_08.chip2pad = s_reg2hw.pad_io_a_08_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_08.oen = s_reg2hw.pad_io_a_08_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_a_09
   always_comb begin
     unique case (s_reg2hw.pad_io_a_09_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_09.chip2pad = s_reg2hw.pad_io_a_09_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_09.oen = s_reg2hw.pad_io_a_09_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_09.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_09.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_09.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_09.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_09.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_09.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = s_reg2hw.pad_io_a_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = s_reg2hw.pad_io_a_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_09.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_09.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_09.chip2pad = s_reg2hw.pad_io_a_09_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_09.oen = s_reg2hw.pad_io_a_09_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_a_10
   always_comb begin
     unique case (s_reg2hw.pad_io_a_10_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_10.chip2pad = s_reg2hw.pad_io_a_10_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_10.oen = s_reg2hw.pad_io_a_10_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_10.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_10.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_10.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_10.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_10.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_10.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = s_reg2hw.pad_io_a_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = s_reg2hw.pad_io_a_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_10.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_10.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_10.chip2pad = s_reg2hw.pad_io_a_10_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_10.oen = s_reg2hw.pad_io_a_10_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_a_11
   always_comb begin
     unique case (s_reg2hw.pad_io_a_11_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_11.chip2pad = s_reg2hw.pad_io_a_11_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_11.oen = s_reg2hw.pad_io_a_11_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_11.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_11.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_11.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_11.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_11.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_11.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = s_reg2hw.pad_io_a_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = s_reg2hw.pad_io_a_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_11.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_11.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_11.chip2pad = s_reg2hw.pad_io_a_11_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_11.oen = s_reg2hw.pad_io_a_11_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_a_12
   always_comb begin
     unique case (s_reg2hw.pad_io_a_12_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_12.chip2pad = s_reg2hw.pad_io_a_12_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_12.oen = s_reg2hw.pad_io_a_12_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_12.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_12.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_12.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_12.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_12.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_12.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = s_reg2hw.pad_io_a_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = s_reg2hw.pad_io_a_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_12.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_12.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_12.chip2pad = s_reg2hw.pad_io_a_12_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_12.oen = s_reg2hw.pad_io_a_12_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_a_13
   always_comb begin
     unique case (s_reg2hw.pad_io_a_13_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_13.chip2pad = s_reg2hw.pad_io_a_13_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_13.oen = s_reg2hw.pad_io_a_13_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_13.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_13.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_13.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_13.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_13.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_13.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = s_reg2hw.pad_io_a_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = s_reg2hw.pad_io_a_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_13.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_13.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_13.chip2pad = s_reg2hw.pad_io_a_13_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_13.oen = s_reg2hw.pad_io_a_13_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_a_14
   always_comb begin
     unique case (s_reg2hw.pad_io_a_14_mux_sel.q)
       PAD_MUX_GROUP_MX_A_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_a_14.chip2pad = s_reg2hw.pad_io_a_14_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_14.oen = s_reg2hw.pad_io_a_14_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = port_signals_soc2pad_i.i2c0.scl_i;
          mux_to_pads_o.pad_io_a_14.oen = ~port_signals_soc2pad_i.i2c0.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = port_signals_soc2pad_i.i2c0.sda_i;
          mux_to_pads_o.pad_io_a_14.oen = ~port_signals_soc2pad_i.i2c0.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = port_signals_soc2pad_i.i2c1.scl_i;
          mux_to_pads_o.pad_io_a_14.oen = ~port_signals_soc2pad_i.i2c1.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = port_signals_soc2pad_i.i2c1.sda_i;
          mux_to_pads_o.pad_io_a_14.oen = ~port_signals_soc2pad_i.i2c1.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = port_signals_soc2pad_i.i2c2.scl_i;
          mux_to_pads_o.pad_io_a_14.oen = ~port_signals_soc2pad_i.i2c2.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = port_signals_soc2pad_i.i2c2.sda_i;
          mux_to_pads_o.pad_io_a_14.oen = ~port_signals_soc2pad_i.i2c2.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = port_signals_soc2pad_i.spi0.csn0_i;
          mux_to_pads_o.pad_io_a_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = s_reg2hw.pad_io_a_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = port_signals_soc2pad_i.spi0.sd0_i;
          mux_to_pads_o.pad_io_a_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = port_signals_soc2pad_i.spi0.clk_i;
          mux_to_pads_o.pad_io_a_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = port_signals_soc2pad_i.spi1.csn0_i;
          mux_to_pads_o.pad_io_a_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = s_reg2hw.pad_io_a_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_a_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = port_signals_soc2pad_i.spi1.sd0_i;
          mux_to_pads_o.pad_io_a_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = port_signals_soc2pad_i.spi1.clk_i;
          mux_to_pads_o.pad_io_a_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1: begin
          mux_to_pads_o.pad_io_a_14.chip2pad = port_signals_soc2pad_i.spi1_cs1.csn1_i;
          mux_to_pads_o.pad_io_a_14.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_a_14.chip2pad = s_reg2hw.pad_io_a_14_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_a_14.oen = s_reg2hw.pad_io_a_14_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_00
   always_comb begin
     unique case (s_reg2hw.pad_io_b_00_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_00.chip2pad = s_reg2hw.pad_io_b_00_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_00.oen = s_reg2hw.pad_io_b_00_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = s_reg2hw.pad_io_b_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = s_reg2hw.pad_io_b_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = s_reg2hw.pad_io_b_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = s_reg2hw.pad_io_b_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = s_reg2hw.pad_io_b_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_00.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_00.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_00.chip2pad = s_reg2hw.pad_io_b_00_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_00.oen = s_reg2hw.pad_io_b_00_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_01
   always_comb begin
     unique case (s_reg2hw.pad_io_b_01_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_01.chip2pad = s_reg2hw.pad_io_b_01_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_01.oen = s_reg2hw.pad_io_b_01_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = s_reg2hw.pad_io_b_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = s_reg2hw.pad_io_b_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = s_reg2hw.pad_io_b_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = s_reg2hw.pad_io_b_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = s_reg2hw.pad_io_b_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_01.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_01.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_01.chip2pad = s_reg2hw.pad_io_b_01_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_01.oen = s_reg2hw.pad_io_b_01_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_02
   always_comb begin
     unique case (s_reg2hw.pad_io_b_02_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_02.chip2pad = s_reg2hw.pad_io_b_02_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_02.oen = s_reg2hw.pad_io_b_02_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = s_reg2hw.pad_io_b_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = s_reg2hw.pad_io_b_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = s_reg2hw.pad_io_b_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = s_reg2hw.pad_io_b_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = s_reg2hw.pad_io_b_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_02.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_02.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_02.chip2pad = s_reg2hw.pad_io_b_02_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_02.oen = s_reg2hw.pad_io_b_02_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_03
   always_comb begin
     unique case (s_reg2hw.pad_io_b_03_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_03.chip2pad = s_reg2hw.pad_io_b_03_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_03.oen = s_reg2hw.pad_io_b_03_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = s_reg2hw.pad_io_b_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = s_reg2hw.pad_io_b_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = s_reg2hw.pad_io_b_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = s_reg2hw.pad_io_b_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = s_reg2hw.pad_io_b_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_03.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_03.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_03.chip2pad = s_reg2hw.pad_io_b_03_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_03.oen = s_reg2hw.pad_io_b_03_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_04
   always_comb begin
     unique case (s_reg2hw.pad_io_b_04_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_04.chip2pad = s_reg2hw.pad_io_b_04_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_04.oen = s_reg2hw.pad_io_b_04_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = s_reg2hw.pad_io_b_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = s_reg2hw.pad_io_b_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = s_reg2hw.pad_io_b_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = s_reg2hw.pad_io_b_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = s_reg2hw.pad_io_b_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_04.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_04.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_04.chip2pad = s_reg2hw.pad_io_b_04_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_04.oen = s_reg2hw.pad_io_b_04_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_05
   always_comb begin
     unique case (s_reg2hw.pad_io_b_05_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_05.chip2pad = s_reg2hw.pad_io_b_05_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_05.oen = s_reg2hw.pad_io_b_05_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = s_reg2hw.pad_io_b_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = s_reg2hw.pad_io_b_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = s_reg2hw.pad_io_b_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = s_reg2hw.pad_io_b_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = s_reg2hw.pad_io_b_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_05.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_05.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_05.chip2pad = s_reg2hw.pad_io_b_05_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_05.oen = s_reg2hw.pad_io_b_05_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_06
   always_comb begin
     unique case (s_reg2hw.pad_io_b_06_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_06.chip2pad = s_reg2hw.pad_io_b_06_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_06.oen = s_reg2hw.pad_io_b_06_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = s_reg2hw.pad_io_b_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = s_reg2hw.pad_io_b_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = s_reg2hw.pad_io_b_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = s_reg2hw.pad_io_b_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = s_reg2hw.pad_io_b_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_06.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_06.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_06.chip2pad = s_reg2hw.pad_io_b_06_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_06.oen = s_reg2hw.pad_io_b_06_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_07
   always_comb begin
     unique case (s_reg2hw.pad_io_b_07_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_07.chip2pad = s_reg2hw.pad_io_b_07_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_07.oen = s_reg2hw.pad_io_b_07_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = s_reg2hw.pad_io_b_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = s_reg2hw.pad_io_b_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = s_reg2hw.pad_io_b_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = s_reg2hw.pad_io_b_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = s_reg2hw.pad_io_b_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_07.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_07.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_07.chip2pad = s_reg2hw.pad_io_b_07_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_07.oen = s_reg2hw.pad_io_b_07_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_08
   always_comb begin
     unique case (s_reg2hw.pad_io_b_08_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_08.chip2pad = s_reg2hw.pad_io_b_08_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_08.oen = s_reg2hw.pad_io_b_08_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = s_reg2hw.pad_io_b_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = s_reg2hw.pad_io_b_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = s_reg2hw.pad_io_b_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = s_reg2hw.pad_io_b_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = s_reg2hw.pad_io_b_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_08.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_08.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_08.chip2pad = s_reg2hw.pad_io_b_08_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_08.oen = s_reg2hw.pad_io_b_08_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_09
   always_comb begin
     unique case (s_reg2hw.pad_io_b_09_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_09.chip2pad = s_reg2hw.pad_io_b_09_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_09.oen = s_reg2hw.pad_io_b_09_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = s_reg2hw.pad_io_b_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = s_reg2hw.pad_io_b_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = s_reg2hw.pad_io_b_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = s_reg2hw.pad_io_b_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = s_reg2hw.pad_io_b_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_09.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_09.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_09.chip2pad = s_reg2hw.pad_io_b_09_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_09.oen = s_reg2hw.pad_io_b_09_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_10
   always_comb begin
     unique case (s_reg2hw.pad_io_b_10_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_10.chip2pad = s_reg2hw.pad_io_b_10_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_10.oen = s_reg2hw.pad_io_b_10_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = s_reg2hw.pad_io_b_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = s_reg2hw.pad_io_b_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = s_reg2hw.pad_io_b_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = s_reg2hw.pad_io_b_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = s_reg2hw.pad_io_b_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_10.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_10.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_10.chip2pad = s_reg2hw.pad_io_b_10_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_10.oen = s_reg2hw.pad_io_b_10_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_11
   always_comb begin
     unique case (s_reg2hw.pad_io_b_11_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_11.chip2pad = s_reg2hw.pad_io_b_11_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_11.oen = s_reg2hw.pad_io_b_11_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = s_reg2hw.pad_io_b_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = s_reg2hw.pad_io_b_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = s_reg2hw.pad_io_b_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = s_reg2hw.pad_io_b_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = s_reg2hw.pad_io_b_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_11.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_11.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_11.chip2pad = s_reg2hw.pad_io_b_11_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_11.oen = s_reg2hw.pad_io_b_11_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_12
   always_comb begin
     unique case (s_reg2hw.pad_io_b_12_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_12.chip2pad = s_reg2hw.pad_io_b_12_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_12.oen = s_reg2hw.pad_io_b_12_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = s_reg2hw.pad_io_b_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = s_reg2hw.pad_io_b_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = s_reg2hw.pad_io_b_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = s_reg2hw.pad_io_b_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = s_reg2hw.pad_io_b_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_12.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_12.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_12.chip2pad = s_reg2hw.pad_io_b_12_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_12.oen = s_reg2hw.pad_io_b_12_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_13
   always_comb begin
     unique case (s_reg2hw.pad_io_b_13_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_13.chip2pad = s_reg2hw.pad_io_b_13_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_13.oen = s_reg2hw.pad_io_b_13_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = s_reg2hw.pad_io_b_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = s_reg2hw.pad_io_b_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = s_reg2hw.pad_io_b_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = s_reg2hw.pad_io_b_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = s_reg2hw.pad_io_b_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_13.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_13.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_13.chip2pad = s_reg2hw.pad_io_b_13_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_13.oen = s_reg2hw.pad_io_b_13_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_14
   always_comb begin
     unique case (s_reg2hw.pad_io_b_14_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_14.chip2pad = s_reg2hw.pad_io_b_14_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_14.oen = s_reg2hw.pad_io_b_14_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = s_reg2hw.pad_io_b_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = s_reg2hw.pad_io_b_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = s_reg2hw.pad_io_b_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = s_reg2hw.pad_io_b_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = s_reg2hw.pad_io_b_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_14.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_14.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_14.chip2pad = s_reg2hw.pad_io_b_14_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_14.oen = s_reg2hw.pad_io_b_14_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_15
   always_comb begin
     unique case (s_reg2hw.pad_io_b_15_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_15.chip2pad = s_reg2hw.pad_io_b_15_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_15.oen = s_reg2hw.pad_io_b_15_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = s_reg2hw.pad_io_b_15_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_15.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = s_reg2hw.pad_io_b_15_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_15.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = s_reg2hw.pad_io_b_15_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_15.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = s_reg2hw.pad_io_b_15_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_15.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = s_reg2hw.pad_io_b_15_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_15.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_15.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_15.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_15.chip2pad = s_reg2hw.pad_io_b_15_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_15.oen = s_reg2hw.pad_io_b_15_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_16
   always_comb begin
     unique case (s_reg2hw.pad_io_b_16_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_16.chip2pad = s_reg2hw.pad_io_b_16_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_16.oen = s_reg2hw.pad_io_b_16_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = s_reg2hw.pad_io_b_16_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_16.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = s_reg2hw.pad_io_b_16_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_16.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = s_reg2hw.pad_io_b_16_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_16.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = s_reg2hw.pad_io_b_16_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_16.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = s_reg2hw.pad_io_b_16_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_16.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_16.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_16.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_16.chip2pad = s_reg2hw.pad_io_b_16_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_16.oen = s_reg2hw.pad_io_b_16_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_17
   always_comb begin
     unique case (s_reg2hw.pad_io_b_17_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_17.chip2pad = s_reg2hw.pad_io_b_17_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_17.oen = s_reg2hw.pad_io_b_17_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = s_reg2hw.pad_io_b_17_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_17.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = s_reg2hw.pad_io_b_17_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_17.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = s_reg2hw.pad_io_b_17_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_17.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = s_reg2hw.pad_io_b_17_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_17.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = s_reg2hw.pad_io_b_17_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_17.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_17.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_17.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_17.chip2pad = s_reg2hw.pad_io_b_17_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_17.oen = s_reg2hw.pad_io_b_17_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_18
   always_comb begin
     unique case (s_reg2hw.pad_io_b_18_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_18.chip2pad = s_reg2hw.pad_io_b_18_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_18.oen = s_reg2hw.pad_io_b_18_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = s_reg2hw.pad_io_b_18_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_18.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = s_reg2hw.pad_io_b_18_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_18.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = s_reg2hw.pad_io_b_18_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_18.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = s_reg2hw.pad_io_b_18_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_18.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = s_reg2hw.pad_io_b_18_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_18.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_18.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_18.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_18.chip2pad = s_reg2hw.pad_io_b_18_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_18.oen = s_reg2hw.pad_io_b_18_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_b_19
   always_comb begin
     unique case (s_reg2hw.pad_io_b_19_mux_sel.q)
       PAD_MUX_GROUP_MX_B_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_b_19.chip2pad = s_reg2hw.pad_io_b_19_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_19.oen = s_reg2hw.pad_io_b_19_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi2.csn0_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = s_reg2hw.pad_io_b_19_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_19.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi2.sd0_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi2.clk_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi3.csn0_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = s_reg2hw.pad_io_b_19_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_19.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi3.sd0_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi3.clk_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi4.csn0_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = s_reg2hw.pad_io_b_19_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_19.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi4.sd0_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi4.clk_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi5.csn0_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = s_reg2hw.pad_io_b_19_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_19.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi5.sd0_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi5.clk_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi6.csn0_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = s_reg2hw.pad_io_b_19_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_b_19.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi6.sd0_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK: begin
          mux_to_pads_o.pad_io_b_19.chip2pad = port_signals_soc2pad_i.spi6.clk_i;
          mux_to_pads_o.pad_io_b_19.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_b_19.chip2pad = s_reg2hw.pad_io_b_19_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_b_19.oen = s_reg2hw.pad_io_b_19_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_c_00
   always_comb begin
     unique case (s_reg2hw.pad_io_c_00_mux_sel.q)
       PAD_MUX_GROUP_MX_C_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_c_00.chip2pad = s_reg2hw.pad_io_c_00_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_00.oen = s_reg2hw.pad_io_c_00_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN: begin
          mux_to_pads_o.pad_io_c_00.chip2pad = port_signals_soc2pad_i.qspi.csn0_i;
          mux_to_pads_o.pad_io_c_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK: begin
          mux_to_pads_o.pad_io_c_00.chip2pad = port_signals_soc2pad_i.qspi.clk_i;
          mux_to_pads_o.pad_io_c_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0: begin
          mux_to_pads_o.pad_io_c_00.chip2pad = port_signals_soc2pad_i.qspi.sd0_i;
          mux_to_pads_o.pad_io_c_00.oen = port_signals_soc2pad_i.qspi.sd0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1: begin
          mux_to_pads_o.pad_io_c_00.chip2pad = port_signals_soc2pad_i.qspi.sd1_i;
          mux_to_pads_o.pad_io_c_00.oen = port_signals_soc2pad_i.qspi.sd1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2: begin
          mux_to_pads_o.pad_io_c_00.chip2pad = port_signals_soc2pad_i.qspi.sd2_i;
          mux_to_pads_o.pad_io_c_00.oen = port_signals_soc2pad_i.qspi.sd2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3: begin
          mux_to_pads_o.pad_io_c_00.chip2pad = port_signals_soc2pad_i.qspi.sd3_i;
          mux_to_pads_o.pad_io_c_00.oen = port_signals_soc2pad_i.qspi.sd3_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK: begin
          mux_to_pads_o.pad_io_c_00.chip2pad = port_signals_soc2pad_i.sdio0.clk_i;
          mux_to_pads_o.pad_io_c_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD: begin
          mux_to_pads_o.pad_io_c_00.chip2pad = port_signals_soc2pad_i.sdio0.cmd_i;
          mux_to_pads_o.pad_io_c_00.oen = port_signals_soc2pad_i.sdio0.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_c_00.chip2pad = port_signals_soc2pad_i.sdio0.data0_i;
          mux_to_pads_o.pad_io_c_00.oen = port_signals_soc2pad_i.sdio0.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_c_00.chip2pad = port_signals_soc2pad_i.sdio0.data1_i;
          mux_to_pads_o.pad_io_c_00.oen = port_signals_soc2pad_i.sdio0.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_c_00.chip2pad = port_signals_soc2pad_i.sdio0.data2_i;
          mux_to_pads_o.pad_io_c_00.oen = port_signals_soc2pad_i.sdio0.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_c_00.chip2pad = port_signals_soc2pad_i.sdio0.data3_i;
          mux_to_pads_o.pad_io_c_00.oen = port_signals_soc2pad_i.sdio0.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_c_00.chip2pad = s_reg2hw.pad_io_c_00_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_00.oen = s_reg2hw.pad_io_c_00_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_c_01
   always_comb begin
     unique case (s_reg2hw.pad_io_c_01_mux_sel.q)
       PAD_MUX_GROUP_MX_C_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_c_01.chip2pad = s_reg2hw.pad_io_c_01_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_01.oen = s_reg2hw.pad_io_c_01_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN: begin
          mux_to_pads_o.pad_io_c_01.chip2pad = port_signals_soc2pad_i.qspi.csn0_i;
          mux_to_pads_o.pad_io_c_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK: begin
          mux_to_pads_o.pad_io_c_01.chip2pad = port_signals_soc2pad_i.qspi.clk_i;
          mux_to_pads_o.pad_io_c_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0: begin
          mux_to_pads_o.pad_io_c_01.chip2pad = port_signals_soc2pad_i.qspi.sd0_i;
          mux_to_pads_o.pad_io_c_01.oen = port_signals_soc2pad_i.qspi.sd0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1: begin
          mux_to_pads_o.pad_io_c_01.chip2pad = port_signals_soc2pad_i.qspi.sd1_i;
          mux_to_pads_o.pad_io_c_01.oen = port_signals_soc2pad_i.qspi.sd1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2: begin
          mux_to_pads_o.pad_io_c_01.chip2pad = port_signals_soc2pad_i.qspi.sd2_i;
          mux_to_pads_o.pad_io_c_01.oen = port_signals_soc2pad_i.qspi.sd2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3: begin
          mux_to_pads_o.pad_io_c_01.chip2pad = port_signals_soc2pad_i.qspi.sd3_i;
          mux_to_pads_o.pad_io_c_01.oen = port_signals_soc2pad_i.qspi.sd3_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK: begin
          mux_to_pads_o.pad_io_c_01.chip2pad = port_signals_soc2pad_i.sdio0.clk_i;
          mux_to_pads_o.pad_io_c_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD: begin
          mux_to_pads_o.pad_io_c_01.chip2pad = port_signals_soc2pad_i.sdio0.cmd_i;
          mux_to_pads_o.pad_io_c_01.oen = port_signals_soc2pad_i.sdio0.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_c_01.chip2pad = port_signals_soc2pad_i.sdio0.data0_i;
          mux_to_pads_o.pad_io_c_01.oen = port_signals_soc2pad_i.sdio0.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_c_01.chip2pad = port_signals_soc2pad_i.sdio0.data1_i;
          mux_to_pads_o.pad_io_c_01.oen = port_signals_soc2pad_i.sdio0.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_c_01.chip2pad = port_signals_soc2pad_i.sdio0.data2_i;
          mux_to_pads_o.pad_io_c_01.oen = port_signals_soc2pad_i.sdio0.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_c_01.chip2pad = port_signals_soc2pad_i.sdio0.data3_i;
          mux_to_pads_o.pad_io_c_01.oen = port_signals_soc2pad_i.sdio0.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_c_01.chip2pad = s_reg2hw.pad_io_c_01_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_01.oen = s_reg2hw.pad_io_c_01_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_c_02
   always_comb begin
     unique case (s_reg2hw.pad_io_c_02_mux_sel.q)
       PAD_MUX_GROUP_MX_C_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_c_02.chip2pad = s_reg2hw.pad_io_c_02_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_02.oen = s_reg2hw.pad_io_c_02_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN: begin
          mux_to_pads_o.pad_io_c_02.chip2pad = port_signals_soc2pad_i.qspi.csn0_i;
          mux_to_pads_o.pad_io_c_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK: begin
          mux_to_pads_o.pad_io_c_02.chip2pad = port_signals_soc2pad_i.qspi.clk_i;
          mux_to_pads_o.pad_io_c_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0: begin
          mux_to_pads_o.pad_io_c_02.chip2pad = port_signals_soc2pad_i.qspi.sd0_i;
          mux_to_pads_o.pad_io_c_02.oen = port_signals_soc2pad_i.qspi.sd0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1: begin
          mux_to_pads_o.pad_io_c_02.chip2pad = port_signals_soc2pad_i.qspi.sd1_i;
          mux_to_pads_o.pad_io_c_02.oen = port_signals_soc2pad_i.qspi.sd1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2: begin
          mux_to_pads_o.pad_io_c_02.chip2pad = port_signals_soc2pad_i.qspi.sd2_i;
          mux_to_pads_o.pad_io_c_02.oen = port_signals_soc2pad_i.qspi.sd2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3: begin
          mux_to_pads_o.pad_io_c_02.chip2pad = port_signals_soc2pad_i.qspi.sd3_i;
          mux_to_pads_o.pad_io_c_02.oen = port_signals_soc2pad_i.qspi.sd3_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK: begin
          mux_to_pads_o.pad_io_c_02.chip2pad = port_signals_soc2pad_i.sdio0.clk_i;
          mux_to_pads_o.pad_io_c_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD: begin
          mux_to_pads_o.pad_io_c_02.chip2pad = port_signals_soc2pad_i.sdio0.cmd_i;
          mux_to_pads_o.pad_io_c_02.oen = port_signals_soc2pad_i.sdio0.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_c_02.chip2pad = port_signals_soc2pad_i.sdio0.data0_i;
          mux_to_pads_o.pad_io_c_02.oen = port_signals_soc2pad_i.sdio0.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_c_02.chip2pad = port_signals_soc2pad_i.sdio0.data1_i;
          mux_to_pads_o.pad_io_c_02.oen = port_signals_soc2pad_i.sdio0.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_c_02.chip2pad = port_signals_soc2pad_i.sdio0.data2_i;
          mux_to_pads_o.pad_io_c_02.oen = port_signals_soc2pad_i.sdio0.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_c_02.chip2pad = port_signals_soc2pad_i.sdio0.data3_i;
          mux_to_pads_o.pad_io_c_02.oen = port_signals_soc2pad_i.sdio0.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_c_02.chip2pad = s_reg2hw.pad_io_c_02_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_02.oen = s_reg2hw.pad_io_c_02_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_c_03
   always_comb begin
     unique case (s_reg2hw.pad_io_c_03_mux_sel.q)
       PAD_MUX_GROUP_MX_C_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_c_03.chip2pad = s_reg2hw.pad_io_c_03_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_03.oen = s_reg2hw.pad_io_c_03_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN: begin
          mux_to_pads_o.pad_io_c_03.chip2pad = port_signals_soc2pad_i.qspi.csn0_i;
          mux_to_pads_o.pad_io_c_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK: begin
          mux_to_pads_o.pad_io_c_03.chip2pad = port_signals_soc2pad_i.qspi.clk_i;
          mux_to_pads_o.pad_io_c_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0: begin
          mux_to_pads_o.pad_io_c_03.chip2pad = port_signals_soc2pad_i.qspi.sd0_i;
          mux_to_pads_o.pad_io_c_03.oen = port_signals_soc2pad_i.qspi.sd0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1: begin
          mux_to_pads_o.pad_io_c_03.chip2pad = port_signals_soc2pad_i.qspi.sd1_i;
          mux_to_pads_o.pad_io_c_03.oen = port_signals_soc2pad_i.qspi.sd1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2: begin
          mux_to_pads_o.pad_io_c_03.chip2pad = port_signals_soc2pad_i.qspi.sd2_i;
          mux_to_pads_o.pad_io_c_03.oen = port_signals_soc2pad_i.qspi.sd2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3: begin
          mux_to_pads_o.pad_io_c_03.chip2pad = port_signals_soc2pad_i.qspi.sd3_i;
          mux_to_pads_o.pad_io_c_03.oen = port_signals_soc2pad_i.qspi.sd3_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK: begin
          mux_to_pads_o.pad_io_c_03.chip2pad = port_signals_soc2pad_i.sdio0.clk_i;
          mux_to_pads_o.pad_io_c_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD: begin
          mux_to_pads_o.pad_io_c_03.chip2pad = port_signals_soc2pad_i.sdio0.cmd_i;
          mux_to_pads_o.pad_io_c_03.oen = port_signals_soc2pad_i.sdio0.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_c_03.chip2pad = port_signals_soc2pad_i.sdio0.data0_i;
          mux_to_pads_o.pad_io_c_03.oen = port_signals_soc2pad_i.sdio0.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_c_03.chip2pad = port_signals_soc2pad_i.sdio0.data1_i;
          mux_to_pads_o.pad_io_c_03.oen = port_signals_soc2pad_i.sdio0.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_c_03.chip2pad = port_signals_soc2pad_i.sdio0.data2_i;
          mux_to_pads_o.pad_io_c_03.oen = port_signals_soc2pad_i.sdio0.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_c_03.chip2pad = port_signals_soc2pad_i.sdio0.data3_i;
          mux_to_pads_o.pad_io_c_03.oen = port_signals_soc2pad_i.sdio0.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_c_03.chip2pad = s_reg2hw.pad_io_c_03_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_03.oen = s_reg2hw.pad_io_c_03_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_c_04
   always_comb begin
     unique case (s_reg2hw.pad_io_c_04_mux_sel.q)
       PAD_MUX_GROUP_MX_C_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_c_04.chip2pad = s_reg2hw.pad_io_c_04_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_04.oen = s_reg2hw.pad_io_c_04_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN: begin
          mux_to_pads_o.pad_io_c_04.chip2pad = port_signals_soc2pad_i.qspi.csn0_i;
          mux_to_pads_o.pad_io_c_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK: begin
          mux_to_pads_o.pad_io_c_04.chip2pad = port_signals_soc2pad_i.qspi.clk_i;
          mux_to_pads_o.pad_io_c_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0: begin
          mux_to_pads_o.pad_io_c_04.chip2pad = port_signals_soc2pad_i.qspi.sd0_i;
          mux_to_pads_o.pad_io_c_04.oen = port_signals_soc2pad_i.qspi.sd0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1: begin
          mux_to_pads_o.pad_io_c_04.chip2pad = port_signals_soc2pad_i.qspi.sd1_i;
          mux_to_pads_o.pad_io_c_04.oen = port_signals_soc2pad_i.qspi.sd1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2: begin
          mux_to_pads_o.pad_io_c_04.chip2pad = port_signals_soc2pad_i.qspi.sd2_i;
          mux_to_pads_o.pad_io_c_04.oen = port_signals_soc2pad_i.qspi.sd2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3: begin
          mux_to_pads_o.pad_io_c_04.chip2pad = port_signals_soc2pad_i.qspi.sd3_i;
          mux_to_pads_o.pad_io_c_04.oen = port_signals_soc2pad_i.qspi.sd3_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK: begin
          mux_to_pads_o.pad_io_c_04.chip2pad = port_signals_soc2pad_i.sdio0.clk_i;
          mux_to_pads_o.pad_io_c_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD: begin
          mux_to_pads_o.pad_io_c_04.chip2pad = port_signals_soc2pad_i.sdio0.cmd_i;
          mux_to_pads_o.pad_io_c_04.oen = port_signals_soc2pad_i.sdio0.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_c_04.chip2pad = port_signals_soc2pad_i.sdio0.data0_i;
          mux_to_pads_o.pad_io_c_04.oen = port_signals_soc2pad_i.sdio0.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_c_04.chip2pad = port_signals_soc2pad_i.sdio0.data1_i;
          mux_to_pads_o.pad_io_c_04.oen = port_signals_soc2pad_i.sdio0.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_c_04.chip2pad = port_signals_soc2pad_i.sdio0.data2_i;
          mux_to_pads_o.pad_io_c_04.oen = port_signals_soc2pad_i.sdio0.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_c_04.chip2pad = port_signals_soc2pad_i.sdio0.data3_i;
          mux_to_pads_o.pad_io_c_04.oen = port_signals_soc2pad_i.sdio0.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_c_04.chip2pad = s_reg2hw.pad_io_c_04_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_04.oen = s_reg2hw.pad_io_c_04_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_c_05
   always_comb begin
     unique case (s_reg2hw.pad_io_c_05_mux_sel.q)
       PAD_MUX_GROUP_MX_C_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_c_05.chip2pad = s_reg2hw.pad_io_c_05_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_05.oen = s_reg2hw.pad_io_c_05_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN: begin
          mux_to_pads_o.pad_io_c_05.chip2pad = port_signals_soc2pad_i.qspi.csn0_i;
          mux_to_pads_o.pad_io_c_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK: begin
          mux_to_pads_o.pad_io_c_05.chip2pad = port_signals_soc2pad_i.qspi.clk_i;
          mux_to_pads_o.pad_io_c_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0: begin
          mux_to_pads_o.pad_io_c_05.chip2pad = port_signals_soc2pad_i.qspi.sd0_i;
          mux_to_pads_o.pad_io_c_05.oen = port_signals_soc2pad_i.qspi.sd0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1: begin
          mux_to_pads_o.pad_io_c_05.chip2pad = port_signals_soc2pad_i.qspi.sd1_i;
          mux_to_pads_o.pad_io_c_05.oen = port_signals_soc2pad_i.qspi.sd1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2: begin
          mux_to_pads_o.pad_io_c_05.chip2pad = port_signals_soc2pad_i.qspi.sd2_i;
          mux_to_pads_o.pad_io_c_05.oen = port_signals_soc2pad_i.qspi.sd2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3: begin
          mux_to_pads_o.pad_io_c_05.chip2pad = port_signals_soc2pad_i.qspi.sd3_i;
          mux_to_pads_o.pad_io_c_05.oen = port_signals_soc2pad_i.qspi.sd3_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK: begin
          mux_to_pads_o.pad_io_c_05.chip2pad = port_signals_soc2pad_i.sdio0.clk_i;
          mux_to_pads_o.pad_io_c_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD: begin
          mux_to_pads_o.pad_io_c_05.chip2pad = port_signals_soc2pad_i.sdio0.cmd_i;
          mux_to_pads_o.pad_io_c_05.oen = port_signals_soc2pad_i.sdio0.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_c_05.chip2pad = port_signals_soc2pad_i.sdio0.data0_i;
          mux_to_pads_o.pad_io_c_05.oen = port_signals_soc2pad_i.sdio0.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_c_05.chip2pad = port_signals_soc2pad_i.sdio0.data1_i;
          mux_to_pads_o.pad_io_c_05.oen = port_signals_soc2pad_i.sdio0.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_c_05.chip2pad = port_signals_soc2pad_i.sdio0.data2_i;
          mux_to_pads_o.pad_io_c_05.oen = port_signals_soc2pad_i.sdio0.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_c_05.chip2pad = port_signals_soc2pad_i.sdio0.data3_i;
          mux_to_pads_o.pad_io_c_05.oen = port_signals_soc2pad_i.sdio0.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_c_05.chip2pad = s_reg2hw.pad_io_c_05_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_05.oen = s_reg2hw.pad_io_c_05_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_c_06
   always_comb begin
     unique case (s_reg2hw.pad_io_c_06_mux_sel.q)
       PAD_MUX_GROUP_MX_C_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_c_06.chip2pad = s_reg2hw.pad_io_c_06_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_06.oen = s_reg2hw.pad_io_c_06_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN: begin
          mux_to_pads_o.pad_io_c_06.chip2pad = port_signals_soc2pad_i.qspi.csn0_i;
          mux_to_pads_o.pad_io_c_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK: begin
          mux_to_pads_o.pad_io_c_06.chip2pad = port_signals_soc2pad_i.qspi.clk_i;
          mux_to_pads_o.pad_io_c_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0: begin
          mux_to_pads_o.pad_io_c_06.chip2pad = port_signals_soc2pad_i.qspi.sd0_i;
          mux_to_pads_o.pad_io_c_06.oen = port_signals_soc2pad_i.qspi.sd0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1: begin
          mux_to_pads_o.pad_io_c_06.chip2pad = port_signals_soc2pad_i.qspi.sd1_i;
          mux_to_pads_o.pad_io_c_06.oen = port_signals_soc2pad_i.qspi.sd1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2: begin
          mux_to_pads_o.pad_io_c_06.chip2pad = port_signals_soc2pad_i.qspi.sd2_i;
          mux_to_pads_o.pad_io_c_06.oen = port_signals_soc2pad_i.qspi.sd2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3: begin
          mux_to_pads_o.pad_io_c_06.chip2pad = port_signals_soc2pad_i.qspi.sd3_i;
          mux_to_pads_o.pad_io_c_06.oen = port_signals_soc2pad_i.qspi.sd3_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK: begin
          mux_to_pads_o.pad_io_c_06.chip2pad = port_signals_soc2pad_i.sdio0.clk_i;
          mux_to_pads_o.pad_io_c_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD: begin
          mux_to_pads_o.pad_io_c_06.chip2pad = port_signals_soc2pad_i.sdio0.cmd_i;
          mux_to_pads_o.pad_io_c_06.oen = port_signals_soc2pad_i.sdio0.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_c_06.chip2pad = port_signals_soc2pad_i.sdio0.data0_i;
          mux_to_pads_o.pad_io_c_06.oen = port_signals_soc2pad_i.sdio0.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_c_06.chip2pad = port_signals_soc2pad_i.sdio0.data1_i;
          mux_to_pads_o.pad_io_c_06.oen = port_signals_soc2pad_i.sdio0.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_c_06.chip2pad = port_signals_soc2pad_i.sdio0.data2_i;
          mux_to_pads_o.pad_io_c_06.oen = port_signals_soc2pad_i.sdio0.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_c_06.chip2pad = port_signals_soc2pad_i.sdio0.data3_i;
          mux_to_pads_o.pad_io_c_06.oen = port_signals_soc2pad_i.sdio0.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_c_06.chip2pad = s_reg2hw.pad_io_c_06_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_06.oen = s_reg2hw.pad_io_c_06_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_c_07
   always_comb begin
     unique case (s_reg2hw.pad_io_c_07_mux_sel.q)
       PAD_MUX_GROUP_MX_C_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_c_07.chip2pad = s_reg2hw.pad_io_c_07_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_07.oen = s_reg2hw.pad_io_c_07_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN: begin
          mux_to_pads_o.pad_io_c_07.chip2pad = port_signals_soc2pad_i.qspi.csn0_i;
          mux_to_pads_o.pad_io_c_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK: begin
          mux_to_pads_o.pad_io_c_07.chip2pad = port_signals_soc2pad_i.qspi.clk_i;
          mux_to_pads_o.pad_io_c_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0: begin
          mux_to_pads_o.pad_io_c_07.chip2pad = port_signals_soc2pad_i.qspi.sd0_i;
          mux_to_pads_o.pad_io_c_07.oen = port_signals_soc2pad_i.qspi.sd0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1: begin
          mux_to_pads_o.pad_io_c_07.chip2pad = port_signals_soc2pad_i.qspi.sd1_i;
          mux_to_pads_o.pad_io_c_07.oen = port_signals_soc2pad_i.qspi.sd1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2: begin
          mux_to_pads_o.pad_io_c_07.chip2pad = port_signals_soc2pad_i.qspi.sd2_i;
          mux_to_pads_o.pad_io_c_07.oen = port_signals_soc2pad_i.qspi.sd2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3: begin
          mux_to_pads_o.pad_io_c_07.chip2pad = port_signals_soc2pad_i.qspi.sd3_i;
          mux_to_pads_o.pad_io_c_07.oen = port_signals_soc2pad_i.qspi.sd3_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK: begin
          mux_to_pads_o.pad_io_c_07.chip2pad = port_signals_soc2pad_i.sdio0.clk_i;
          mux_to_pads_o.pad_io_c_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD: begin
          mux_to_pads_o.pad_io_c_07.chip2pad = port_signals_soc2pad_i.sdio0.cmd_i;
          mux_to_pads_o.pad_io_c_07.oen = port_signals_soc2pad_i.sdio0.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_c_07.chip2pad = port_signals_soc2pad_i.sdio0.data0_i;
          mux_to_pads_o.pad_io_c_07.oen = port_signals_soc2pad_i.sdio0.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_c_07.chip2pad = port_signals_soc2pad_i.sdio0.data1_i;
          mux_to_pads_o.pad_io_c_07.oen = port_signals_soc2pad_i.sdio0.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_c_07.chip2pad = port_signals_soc2pad_i.sdio0.data2_i;
          mux_to_pads_o.pad_io_c_07.oen = port_signals_soc2pad_i.sdio0.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_c_07.chip2pad = port_signals_soc2pad_i.sdio0.data3_i;
          mux_to_pads_o.pad_io_c_07.oen = port_signals_soc2pad_i.sdio0.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_c_07.chip2pad = s_reg2hw.pad_io_c_07_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_07.oen = s_reg2hw.pad_io_c_07_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_c_08
   always_comb begin
     unique case (s_reg2hw.pad_io_c_08_mux_sel.q)
       PAD_MUX_GROUP_MX_C_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_c_08.chip2pad = s_reg2hw.pad_io_c_08_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_08.oen = s_reg2hw.pad_io_c_08_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN: begin
          mux_to_pads_o.pad_io_c_08.chip2pad = port_signals_soc2pad_i.qspi.csn0_i;
          mux_to_pads_o.pad_io_c_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK: begin
          mux_to_pads_o.pad_io_c_08.chip2pad = port_signals_soc2pad_i.qspi.clk_i;
          mux_to_pads_o.pad_io_c_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0: begin
          mux_to_pads_o.pad_io_c_08.chip2pad = port_signals_soc2pad_i.qspi.sd0_i;
          mux_to_pads_o.pad_io_c_08.oen = port_signals_soc2pad_i.qspi.sd0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1: begin
          mux_to_pads_o.pad_io_c_08.chip2pad = port_signals_soc2pad_i.qspi.sd1_i;
          mux_to_pads_o.pad_io_c_08.oen = port_signals_soc2pad_i.qspi.sd1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2: begin
          mux_to_pads_o.pad_io_c_08.chip2pad = port_signals_soc2pad_i.qspi.sd2_i;
          mux_to_pads_o.pad_io_c_08.oen = port_signals_soc2pad_i.qspi.sd2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3: begin
          mux_to_pads_o.pad_io_c_08.chip2pad = port_signals_soc2pad_i.qspi.sd3_i;
          mux_to_pads_o.pad_io_c_08.oen = port_signals_soc2pad_i.qspi.sd3_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK: begin
          mux_to_pads_o.pad_io_c_08.chip2pad = port_signals_soc2pad_i.sdio0.clk_i;
          mux_to_pads_o.pad_io_c_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD: begin
          mux_to_pads_o.pad_io_c_08.chip2pad = port_signals_soc2pad_i.sdio0.cmd_i;
          mux_to_pads_o.pad_io_c_08.oen = port_signals_soc2pad_i.sdio0.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_c_08.chip2pad = port_signals_soc2pad_i.sdio0.data0_i;
          mux_to_pads_o.pad_io_c_08.oen = port_signals_soc2pad_i.sdio0.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_c_08.chip2pad = port_signals_soc2pad_i.sdio0.data1_i;
          mux_to_pads_o.pad_io_c_08.oen = port_signals_soc2pad_i.sdio0.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_c_08.chip2pad = port_signals_soc2pad_i.sdio0.data2_i;
          mux_to_pads_o.pad_io_c_08.oen = port_signals_soc2pad_i.sdio0.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_c_08.chip2pad = port_signals_soc2pad_i.sdio0.data3_i;
          mux_to_pads_o.pad_io_c_08.oen = port_signals_soc2pad_i.sdio0.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_c_08.chip2pad = s_reg2hw.pad_io_c_08_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_08.oen = s_reg2hw.pad_io_c_08_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_c_09
   always_comb begin
     unique case (s_reg2hw.pad_io_c_09_mux_sel.q)
       PAD_MUX_GROUP_MX_C_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_c_09.chip2pad = s_reg2hw.pad_io_c_09_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_09.oen = s_reg2hw.pad_io_c_09_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN: begin
          mux_to_pads_o.pad_io_c_09.chip2pad = port_signals_soc2pad_i.qspi.csn0_i;
          mux_to_pads_o.pad_io_c_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK: begin
          mux_to_pads_o.pad_io_c_09.chip2pad = port_signals_soc2pad_i.qspi.clk_i;
          mux_to_pads_o.pad_io_c_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0: begin
          mux_to_pads_o.pad_io_c_09.chip2pad = port_signals_soc2pad_i.qspi.sd0_i;
          mux_to_pads_o.pad_io_c_09.oen = port_signals_soc2pad_i.qspi.sd0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1: begin
          mux_to_pads_o.pad_io_c_09.chip2pad = port_signals_soc2pad_i.qspi.sd1_i;
          mux_to_pads_o.pad_io_c_09.oen = port_signals_soc2pad_i.qspi.sd1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2: begin
          mux_to_pads_o.pad_io_c_09.chip2pad = port_signals_soc2pad_i.qspi.sd2_i;
          mux_to_pads_o.pad_io_c_09.oen = port_signals_soc2pad_i.qspi.sd2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3: begin
          mux_to_pads_o.pad_io_c_09.chip2pad = port_signals_soc2pad_i.qspi.sd3_i;
          mux_to_pads_o.pad_io_c_09.oen = port_signals_soc2pad_i.qspi.sd3_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK: begin
          mux_to_pads_o.pad_io_c_09.chip2pad = port_signals_soc2pad_i.sdio0.clk_i;
          mux_to_pads_o.pad_io_c_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD: begin
          mux_to_pads_o.pad_io_c_09.chip2pad = port_signals_soc2pad_i.sdio0.cmd_i;
          mux_to_pads_o.pad_io_c_09.oen = port_signals_soc2pad_i.sdio0.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_c_09.chip2pad = port_signals_soc2pad_i.sdio0.data0_i;
          mux_to_pads_o.pad_io_c_09.oen = port_signals_soc2pad_i.sdio0.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_c_09.chip2pad = port_signals_soc2pad_i.sdio0.data1_i;
          mux_to_pads_o.pad_io_c_09.oen = port_signals_soc2pad_i.sdio0.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_c_09.chip2pad = port_signals_soc2pad_i.sdio0.data2_i;
          mux_to_pads_o.pad_io_c_09.oen = port_signals_soc2pad_i.sdio0.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_c_09.chip2pad = port_signals_soc2pad_i.sdio0.data3_i;
          mux_to_pads_o.pad_io_c_09.oen = port_signals_soc2pad_i.sdio0.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_c_09.chip2pad = s_reg2hw.pad_io_c_09_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_09.oen = s_reg2hw.pad_io_c_09_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_c_10
   always_comb begin
     unique case (s_reg2hw.pad_io_c_10_mux_sel.q)
       PAD_MUX_GROUP_MX_C_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_c_10.chip2pad = s_reg2hw.pad_io_c_10_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_10.oen = s_reg2hw.pad_io_c_10_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN: begin
          mux_to_pads_o.pad_io_c_10.chip2pad = port_signals_soc2pad_i.qspi.csn0_i;
          mux_to_pads_o.pad_io_c_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK: begin
          mux_to_pads_o.pad_io_c_10.chip2pad = port_signals_soc2pad_i.qspi.clk_i;
          mux_to_pads_o.pad_io_c_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0: begin
          mux_to_pads_o.pad_io_c_10.chip2pad = port_signals_soc2pad_i.qspi.sd0_i;
          mux_to_pads_o.pad_io_c_10.oen = port_signals_soc2pad_i.qspi.sd0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1: begin
          mux_to_pads_o.pad_io_c_10.chip2pad = port_signals_soc2pad_i.qspi.sd1_i;
          mux_to_pads_o.pad_io_c_10.oen = port_signals_soc2pad_i.qspi.sd1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2: begin
          mux_to_pads_o.pad_io_c_10.chip2pad = port_signals_soc2pad_i.qspi.sd2_i;
          mux_to_pads_o.pad_io_c_10.oen = port_signals_soc2pad_i.qspi.sd2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3: begin
          mux_to_pads_o.pad_io_c_10.chip2pad = port_signals_soc2pad_i.qspi.sd3_i;
          mux_to_pads_o.pad_io_c_10.oen = port_signals_soc2pad_i.qspi.sd3_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK: begin
          mux_to_pads_o.pad_io_c_10.chip2pad = port_signals_soc2pad_i.sdio0.clk_i;
          mux_to_pads_o.pad_io_c_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD: begin
          mux_to_pads_o.pad_io_c_10.chip2pad = port_signals_soc2pad_i.sdio0.cmd_i;
          mux_to_pads_o.pad_io_c_10.oen = port_signals_soc2pad_i.sdio0.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_c_10.chip2pad = port_signals_soc2pad_i.sdio0.data0_i;
          mux_to_pads_o.pad_io_c_10.oen = port_signals_soc2pad_i.sdio0.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_c_10.chip2pad = port_signals_soc2pad_i.sdio0.data1_i;
          mux_to_pads_o.pad_io_c_10.oen = port_signals_soc2pad_i.sdio0.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_c_10.chip2pad = port_signals_soc2pad_i.sdio0.data2_i;
          mux_to_pads_o.pad_io_c_10.oen = port_signals_soc2pad_i.sdio0.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_c_10.chip2pad = port_signals_soc2pad_i.sdio0.data3_i;
          mux_to_pads_o.pad_io_c_10.oen = port_signals_soc2pad_i.sdio0.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_c_10.chip2pad = s_reg2hw.pad_io_c_10_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_10.oen = s_reg2hw.pad_io_c_10_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_c_11
   always_comb begin
     unique case (s_reg2hw.pad_io_c_11_mux_sel.q)
       PAD_MUX_GROUP_MX_C_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_c_11.chip2pad = s_reg2hw.pad_io_c_11_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_11.oen = s_reg2hw.pad_io_c_11_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN: begin
          mux_to_pads_o.pad_io_c_11.chip2pad = port_signals_soc2pad_i.qspi.csn0_i;
          mux_to_pads_o.pad_io_c_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK: begin
          mux_to_pads_o.pad_io_c_11.chip2pad = port_signals_soc2pad_i.qspi.clk_i;
          mux_to_pads_o.pad_io_c_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0: begin
          mux_to_pads_o.pad_io_c_11.chip2pad = port_signals_soc2pad_i.qspi.sd0_i;
          mux_to_pads_o.pad_io_c_11.oen = port_signals_soc2pad_i.qspi.sd0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1: begin
          mux_to_pads_o.pad_io_c_11.chip2pad = port_signals_soc2pad_i.qspi.sd1_i;
          mux_to_pads_o.pad_io_c_11.oen = port_signals_soc2pad_i.qspi.sd1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2: begin
          mux_to_pads_o.pad_io_c_11.chip2pad = port_signals_soc2pad_i.qspi.sd2_i;
          mux_to_pads_o.pad_io_c_11.oen = port_signals_soc2pad_i.qspi.sd2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3: begin
          mux_to_pads_o.pad_io_c_11.chip2pad = port_signals_soc2pad_i.qspi.sd3_i;
          mux_to_pads_o.pad_io_c_11.oen = port_signals_soc2pad_i.qspi.sd3_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK: begin
          mux_to_pads_o.pad_io_c_11.chip2pad = port_signals_soc2pad_i.sdio0.clk_i;
          mux_to_pads_o.pad_io_c_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD: begin
          mux_to_pads_o.pad_io_c_11.chip2pad = port_signals_soc2pad_i.sdio0.cmd_i;
          mux_to_pads_o.pad_io_c_11.oen = port_signals_soc2pad_i.sdio0.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_c_11.chip2pad = port_signals_soc2pad_i.sdio0.data0_i;
          mux_to_pads_o.pad_io_c_11.oen = port_signals_soc2pad_i.sdio0.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_c_11.chip2pad = port_signals_soc2pad_i.sdio0.data1_i;
          mux_to_pads_o.pad_io_c_11.oen = port_signals_soc2pad_i.sdio0.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_c_11.chip2pad = port_signals_soc2pad_i.sdio0.data2_i;
          mux_to_pads_o.pad_io_c_11.oen = port_signals_soc2pad_i.sdio0.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_c_11.chip2pad = port_signals_soc2pad_i.sdio0.data3_i;
          mux_to_pads_o.pad_io_c_11.oen = port_signals_soc2pad_i.sdio0.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_c_11.chip2pad = s_reg2hw.pad_io_c_11_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_11.oen = s_reg2hw.pad_io_c_11_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_c_12
   always_comb begin
     unique case (s_reg2hw.pad_io_c_12_mux_sel.q)
       PAD_MUX_GROUP_MX_C_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_c_12.chip2pad = s_reg2hw.pad_io_c_12_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_12.oen = s_reg2hw.pad_io_c_12_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN: begin
          mux_to_pads_o.pad_io_c_12.chip2pad = port_signals_soc2pad_i.qspi.csn0_i;
          mux_to_pads_o.pad_io_c_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK: begin
          mux_to_pads_o.pad_io_c_12.chip2pad = port_signals_soc2pad_i.qspi.clk_i;
          mux_to_pads_o.pad_io_c_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0: begin
          mux_to_pads_o.pad_io_c_12.chip2pad = port_signals_soc2pad_i.qspi.sd0_i;
          mux_to_pads_o.pad_io_c_12.oen = port_signals_soc2pad_i.qspi.sd0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1: begin
          mux_to_pads_o.pad_io_c_12.chip2pad = port_signals_soc2pad_i.qspi.sd1_i;
          mux_to_pads_o.pad_io_c_12.oen = port_signals_soc2pad_i.qspi.sd1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2: begin
          mux_to_pads_o.pad_io_c_12.chip2pad = port_signals_soc2pad_i.qspi.sd2_i;
          mux_to_pads_o.pad_io_c_12.oen = port_signals_soc2pad_i.qspi.sd2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3: begin
          mux_to_pads_o.pad_io_c_12.chip2pad = port_signals_soc2pad_i.qspi.sd3_i;
          mux_to_pads_o.pad_io_c_12.oen = port_signals_soc2pad_i.qspi.sd3_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK: begin
          mux_to_pads_o.pad_io_c_12.chip2pad = port_signals_soc2pad_i.sdio0.clk_i;
          mux_to_pads_o.pad_io_c_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD: begin
          mux_to_pads_o.pad_io_c_12.chip2pad = port_signals_soc2pad_i.sdio0.cmd_i;
          mux_to_pads_o.pad_io_c_12.oen = port_signals_soc2pad_i.sdio0.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_c_12.chip2pad = port_signals_soc2pad_i.sdio0.data0_i;
          mux_to_pads_o.pad_io_c_12.oen = port_signals_soc2pad_i.sdio0.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_c_12.chip2pad = port_signals_soc2pad_i.sdio0.data1_i;
          mux_to_pads_o.pad_io_c_12.oen = port_signals_soc2pad_i.sdio0.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_c_12.chip2pad = port_signals_soc2pad_i.sdio0.data2_i;
          mux_to_pads_o.pad_io_c_12.oen = port_signals_soc2pad_i.sdio0.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_c_12.chip2pad = port_signals_soc2pad_i.sdio0.data3_i;
          mux_to_pads_o.pad_io_c_12.oen = port_signals_soc2pad_i.sdio0.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_c_12.chip2pad = s_reg2hw.pad_io_c_12_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_12.oen = s_reg2hw.pad_io_c_12_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_c_13
   always_comb begin
     unique case (s_reg2hw.pad_io_c_13_mux_sel.q)
       PAD_MUX_GROUP_MX_C_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_c_13.chip2pad = s_reg2hw.pad_io_c_13_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_13.oen = s_reg2hw.pad_io_c_13_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN: begin
          mux_to_pads_o.pad_io_c_13.chip2pad = port_signals_soc2pad_i.qspi.csn0_i;
          mux_to_pads_o.pad_io_c_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK: begin
          mux_to_pads_o.pad_io_c_13.chip2pad = port_signals_soc2pad_i.qspi.clk_i;
          mux_to_pads_o.pad_io_c_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0: begin
          mux_to_pads_o.pad_io_c_13.chip2pad = port_signals_soc2pad_i.qspi.sd0_i;
          mux_to_pads_o.pad_io_c_13.oen = port_signals_soc2pad_i.qspi.sd0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1: begin
          mux_to_pads_o.pad_io_c_13.chip2pad = port_signals_soc2pad_i.qspi.sd1_i;
          mux_to_pads_o.pad_io_c_13.oen = port_signals_soc2pad_i.qspi.sd1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2: begin
          mux_to_pads_o.pad_io_c_13.chip2pad = port_signals_soc2pad_i.qspi.sd2_i;
          mux_to_pads_o.pad_io_c_13.oen = port_signals_soc2pad_i.qspi.sd2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3: begin
          mux_to_pads_o.pad_io_c_13.chip2pad = port_signals_soc2pad_i.qspi.sd3_i;
          mux_to_pads_o.pad_io_c_13.oen = port_signals_soc2pad_i.qspi.sd3_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK: begin
          mux_to_pads_o.pad_io_c_13.chip2pad = port_signals_soc2pad_i.sdio0.clk_i;
          mux_to_pads_o.pad_io_c_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD: begin
          mux_to_pads_o.pad_io_c_13.chip2pad = port_signals_soc2pad_i.sdio0.cmd_i;
          mux_to_pads_o.pad_io_c_13.oen = port_signals_soc2pad_i.sdio0.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_c_13.chip2pad = port_signals_soc2pad_i.sdio0.data0_i;
          mux_to_pads_o.pad_io_c_13.oen = port_signals_soc2pad_i.sdio0.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_c_13.chip2pad = port_signals_soc2pad_i.sdio0.data1_i;
          mux_to_pads_o.pad_io_c_13.oen = port_signals_soc2pad_i.sdio0.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_c_13.chip2pad = port_signals_soc2pad_i.sdio0.data2_i;
          mux_to_pads_o.pad_io_c_13.oen = port_signals_soc2pad_i.sdio0.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_c_13.chip2pad = port_signals_soc2pad_i.sdio0.data3_i;
          mux_to_pads_o.pad_io_c_13.oen = port_signals_soc2pad_i.sdio0.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_c_13.chip2pad = s_reg2hw.pad_io_c_13_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_c_13.oen = s_reg2hw.pad_io_c_13_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_00
   always_comb begin
     unique case (s_reg2hw.pad_io_d_00_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_00.chip2pad = s_reg2hw.pad_io_d_00_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_00.oen = s_reg2hw.pad_io_d_00_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = s_reg2hw.pad_io_d_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = s_reg2hw.pad_io_d_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = s_reg2hw.pad_io_d_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = s_reg2hw.pad_io_d_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = s_reg2hw.pad_io_d_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = s_reg2hw.pad_io_d_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = s_reg2hw.pad_io_d_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = s_reg2hw.pad_io_d_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_00.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_00.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_00.chip2pad = s_reg2hw.pad_io_d_00_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_00.oen = s_reg2hw.pad_io_d_00_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_01
   always_comb begin
     unique case (s_reg2hw.pad_io_d_01_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_01.chip2pad = s_reg2hw.pad_io_d_01_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_01.oen = s_reg2hw.pad_io_d_01_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = s_reg2hw.pad_io_d_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = s_reg2hw.pad_io_d_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = s_reg2hw.pad_io_d_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = s_reg2hw.pad_io_d_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = s_reg2hw.pad_io_d_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = s_reg2hw.pad_io_d_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = s_reg2hw.pad_io_d_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = s_reg2hw.pad_io_d_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_01.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_01.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_01.chip2pad = s_reg2hw.pad_io_d_01_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_01.oen = s_reg2hw.pad_io_d_01_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_02
   always_comb begin
     unique case (s_reg2hw.pad_io_d_02_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_02.chip2pad = s_reg2hw.pad_io_d_02_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_02.oen = s_reg2hw.pad_io_d_02_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = s_reg2hw.pad_io_d_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = s_reg2hw.pad_io_d_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = s_reg2hw.pad_io_d_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = s_reg2hw.pad_io_d_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = s_reg2hw.pad_io_d_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = s_reg2hw.pad_io_d_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = s_reg2hw.pad_io_d_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = s_reg2hw.pad_io_d_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_02.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_02.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_02.chip2pad = s_reg2hw.pad_io_d_02_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_02.oen = s_reg2hw.pad_io_d_02_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_03
   always_comb begin
     unique case (s_reg2hw.pad_io_d_03_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_03.chip2pad = s_reg2hw.pad_io_d_03_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_03.oen = s_reg2hw.pad_io_d_03_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = s_reg2hw.pad_io_d_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = s_reg2hw.pad_io_d_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = s_reg2hw.pad_io_d_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = s_reg2hw.pad_io_d_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = s_reg2hw.pad_io_d_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = s_reg2hw.pad_io_d_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = s_reg2hw.pad_io_d_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = s_reg2hw.pad_io_d_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_03.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_03.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_03.chip2pad = s_reg2hw.pad_io_d_03_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_03.oen = s_reg2hw.pad_io_d_03_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_04
   always_comb begin
     unique case (s_reg2hw.pad_io_d_04_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_04.chip2pad = s_reg2hw.pad_io_d_04_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_04.oen = s_reg2hw.pad_io_d_04_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = s_reg2hw.pad_io_d_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = s_reg2hw.pad_io_d_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = s_reg2hw.pad_io_d_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = s_reg2hw.pad_io_d_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = s_reg2hw.pad_io_d_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = s_reg2hw.pad_io_d_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = s_reg2hw.pad_io_d_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = s_reg2hw.pad_io_d_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_04.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_04.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_04.chip2pad = s_reg2hw.pad_io_d_04_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_04.oen = s_reg2hw.pad_io_d_04_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_05
   always_comb begin
     unique case (s_reg2hw.pad_io_d_05_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_05.chip2pad = s_reg2hw.pad_io_d_05_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_05.oen = s_reg2hw.pad_io_d_05_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = s_reg2hw.pad_io_d_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = s_reg2hw.pad_io_d_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = s_reg2hw.pad_io_d_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = s_reg2hw.pad_io_d_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = s_reg2hw.pad_io_d_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = s_reg2hw.pad_io_d_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = s_reg2hw.pad_io_d_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = s_reg2hw.pad_io_d_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_05.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_05.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_05.chip2pad = s_reg2hw.pad_io_d_05_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_05.oen = s_reg2hw.pad_io_d_05_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_06
   always_comb begin
     unique case (s_reg2hw.pad_io_d_06_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_06.chip2pad = s_reg2hw.pad_io_d_06_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_06.oen = s_reg2hw.pad_io_d_06_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = s_reg2hw.pad_io_d_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = s_reg2hw.pad_io_d_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = s_reg2hw.pad_io_d_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = s_reg2hw.pad_io_d_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = s_reg2hw.pad_io_d_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = s_reg2hw.pad_io_d_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = s_reg2hw.pad_io_d_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = s_reg2hw.pad_io_d_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_06.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_06.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_06.chip2pad = s_reg2hw.pad_io_d_06_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_06.oen = s_reg2hw.pad_io_d_06_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_07
   always_comb begin
     unique case (s_reg2hw.pad_io_d_07_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_07.chip2pad = s_reg2hw.pad_io_d_07_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_07.oen = s_reg2hw.pad_io_d_07_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = s_reg2hw.pad_io_d_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = s_reg2hw.pad_io_d_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = s_reg2hw.pad_io_d_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = s_reg2hw.pad_io_d_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = s_reg2hw.pad_io_d_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = s_reg2hw.pad_io_d_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = s_reg2hw.pad_io_d_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = s_reg2hw.pad_io_d_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_07.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_07.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_07.chip2pad = s_reg2hw.pad_io_d_07_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_07.oen = s_reg2hw.pad_io_d_07_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_08
   always_comb begin
     unique case (s_reg2hw.pad_io_d_08_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_08.chip2pad = s_reg2hw.pad_io_d_08_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_08.oen = s_reg2hw.pad_io_d_08_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = s_reg2hw.pad_io_d_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = s_reg2hw.pad_io_d_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = s_reg2hw.pad_io_d_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = s_reg2hw.pad_io_d_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = s_reg2hw.pad_io_d_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = s_reg2hw.pad_io_d_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = s_reg2hw.pad_io_d_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = s_reg2hw.pad_io_d_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_08.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_08.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_08.chip2pad = s_reg2hw.pad_io_d_08_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_08.oen = s_reg2hw.pad_io_d_08_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_09
   always_comb begin
     unique case (s_reg2hw.pad_io_d_09_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_09.chip2pad = s_reg2hw.pad_io_d_09_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_09.oen = s_reg2hw.pad_io_d_09_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = s_reg2hw.pad_io_d_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = s_reg2hw.pad_io_d_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = s_reg2hw.pad_io_d_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = s_reg2hw.pad_io_d_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = s_reg2hw.pad_io_d_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = s_reg2hw.pad_io_d_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = s_reg2hw.pad_io_d_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = s_reg2hw.pad_io_d_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_09.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_09.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_09.chip2pad = s_reg2hw.pad_io_d_09_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_09.oen = s_reg2hw.pad_io_d_09_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_10
   always_comb begin
     unique case (s_reg2hw.pad_io_d_10_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_10.chip2pad = s_reg2hw.pad_io_d_10_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_10.oen = s_reg2hw.pad_io_d_10_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = s_reg2hw.pad_io_d_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = s_reg2hw.pad_io_d_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = s_reg2hw.pad_io_d_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = s_reg2hw.pad_io_d_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = s_reg2hw.pad_io_d_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = s_reg2hw.pad_io_d_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = s_reg2hw.pad_io_d_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = s_reg2hw.pad_io_d_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_10.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_10.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_10.chip2pad = s_reg2hw.pad_io_d_10_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_10.oen = s_reg2hw.pad_io_d_10_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_11
   always_comb begin
     unique case (s_reg2hw.pad_io_d_11_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_11.chip2pad = s_reg2hw.pad_io_d_11_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_11.oen = s_reg2hw.pad_io_d_11_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = s_reg2hw.pad_io_d_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = s_reg2hw.pad_io_d_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = s_reg2hw.pad_io_d_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = s_reg2hw.pad_io_d_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = s_reg2hw.pad_io_d_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = s_reg2hw.pad_io_d_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = s_reg2hw.pad_io_d_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = s_reg2hw.pad_io_d_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_11.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_11.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_11.chip2pad = s_reg2hw.pad_io_d_11_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_11.oen = s_reg2hw.pad_io_d_11_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_12
   always_comb begin
     unique case (s_reg2hw.pad_io_d_12_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_12.chip2pad = s_reg2hw.pad_io_d_12_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_12.oen = s_reg2hw.pad_io_d_12_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = s_reg2hw.pad_io_d_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = s_reg2hw.pad_io_d_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = s_reg2hw.pad_io_d_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = s_reg2hw.pad_io_d_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = s_reg2hw.pad_io_d_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = s_reg2hw.pad_io_d_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = s_reg2hw.pad_io_d_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = s_reg2hw.pad_io_d_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_12.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_12.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_12.chip2pad = s_reg2hw.pad_io_d_12_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_12.oen = s_reg2hw.pad_io_d_12_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_13
   always_comb begin
     unique case (s_reg2hw.pad_io_d_13_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_13.chip2pad = s_reg2hw.pad_io_d_13_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_13.oen = s_reg2hw.pad_io_d_13_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = s_reg2hw.pad_io_d_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = s_reg2hw.pad_io_d_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = s_reg2hw.pad_io_d_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = s_reg2hw.pad_io_d_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = s_reg2hw.pad_io_d_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = s_reg2hw.pad_io_d_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = s_reg2hw.pad_io_d_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = s_reg2hw.pad_io_d_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_13.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_13.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_13.chip2pad = s_reg2hw.pad_io_d_13_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_13.oen = s_reg2hw.pad_io_d_13_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_14
   always_comb begin
     unique case (s_reg2hw.pad_io_d_14_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_14.chip2pad = s_reg2hw.pad_io_d_14_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_14.oen = s_reg2hw.pad_io_d_14_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = s_reg2hw.pad_io_d_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = s_reg2hw.pad_io_d_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = s_reg2hw.pad_io_d_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = s_reg2hw.pad_io_d_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = s_reg2hw.pad_io_d_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = s_reg2hw.pad_io_d_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = s_reg2hw.pad_io_d_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = s_reg2hw.pad_io_d_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_14.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_14.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_14.chip2pad = s_reg2hw.pad_io_d_14_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_14.oen = s_reg2hw.pad_io_d_14_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_d_15
   always_comb begin
     unique case (s_reg2hw.pad_io_d_15_mux_sel.q)
       PAD_MUX_GROUP_MX_D_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_d_15.chip2pad = s_reg2hw.pad_io_d_15_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_15.oen = s_reg2hw.pad_io_d_15_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = s_reg2hw.pad_io_d_15_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = port_signals_soc2pad_i.uart0.tx_i;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = s_reg2hw.pad_io_d_15_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = port_signals_soc2pad_i.uart1.tx_i;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = s_reg2hw.pad_io_d_15_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = port_signals_soc2pad_i.uart_cf0.rts_i;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = s_reg2hw.pad_io_d_15_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = port_signals_soc2pad_i.uart_cf0.tx_i;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = s_reg2hw.pad_io_d_15_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = port_signals_soc2pad_i.uart_cf1.rts_i;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = s_reg2hw.pad_io_d_15_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = port_signals_soc2pad_i.uart_cf1.tx_i;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = s_reg2hw.pad_io_d_15_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = port_signals_soc2pad_i.uart_cf2.rts_i;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = s_reg2hw.pad_io_d_15_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX: begin
          mux_to_pads_o.pad_io_d_15.chip2pad = port_signals_soc2pad_i.uart_cf2.tx_i;
          mux_to_pads_o.pad_io_d_15.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_d_15.chip2pad = s_reg2hw.pad_io_d_15_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_d_15.oen = s_reg2hw.pad_io_d_15_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_00
   always_comb begin
     unique case (s_reg2hw.pad_io_e_00_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_00.oen = s_reg2hw.pad_io_e_00_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_00.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_00.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_00.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_00.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_00.chip2pad = s_reg2hw.pad_io_e_00_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_00.oen = s_reg2hw.pad_io_e_00_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_01
   always_comb begin
     unique case (s_reg2hw.pad_io_e_01_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_01.oen = s_reg2hw.pad_io_e_01_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_01.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_01.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_01.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_01.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_01.chip2pad = s_reg2hw.pad_io_e_01_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_01.oen = s_reg2hw.pad_io_e_01_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_02
   always_comb begin
     unique case (s_reg2hw.pad_io_e_02_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_02.oen = s_reg2hw.pad_io_e_02_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_02.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_02.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_02.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_02.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_02.chip2pad = s_reg2hw.pad_io_e_02_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_02.oen = s_reg2hw.pad_io_e_02_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_03
   always_comb begin
     unique case (s_reg2hw.pad_io_e_03_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_03.oen = s_reg2hw.pad_io_e_03_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_03.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_03.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_03.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_03.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_03.chip2pad = s_reg2hw.pad_io_e_03_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_03.oen = s_reg2hw.pad_io_e_03_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_04
   always_comb begin
     unique case (s_reg2hw.pad_io_e_04_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_04.oen = s_reg2hw.pad_io_e_04_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_04.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_04.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_04.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_04.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_04.chip2pad = s_reg2hw.pad_io_e_04_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_04.oen = s_reg2hw.pad_io_e_04_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_05
   always_comb begin
     unique case (s_reg2hw.pad_io_e_05_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_05.oen = s_reg2hw.pad_io_e_05_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_05.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_05.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_05.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_05.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_05.chip2pad = s_reg2hw.pad_io_e_05_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_05.oen = s_reg2hw.pad_io_e_05_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_06
   always_comb begin
     unique case (s_reg2hw.pad_io_e_06_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_06.oen = s_reg2hw.pad_io_e_06_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_06.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_06.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_06.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_06.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_06.chip2pad = s_reg2hw.pad_io_e_06_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_06.oen = s_reg2hw.pad_io_e_06_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_07
   always_comb begin
     unique case (s_reg2hw.pad_io_e_07_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_07.oen = s_reg2hw.pad_io_e_07_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_07.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_07.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_07.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_07.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_07.chip2pad = s_reg2hw.pad_io_e_07_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_07.oen = s_reg2hw.pad_io_e_07_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_08
   always_comb begin
     unique case (s_reg2hw.pad_io_e_08_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_08.oen = s_reg2hw.pad_io_e_08_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_08.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_08.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_08.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_08.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_08.chip2pad = s_reg2hw.pad_io_e_08_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_08.oen = s_reg2hw.pad_io_e_08_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_09
   always_comb begin
     unique case (s_reg2hw.pad_io_e_09_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_09.oen = s_reg2hw.pad_io_e_09_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_09.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_09.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_09.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_09.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_09.chip2pad = s_reg2hw.pad_io_e_09_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_09.oen = s_reg2hw.pad_io_e_09_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_10
   always_comb begin
     unique case (s_reg2hw.pad_io_e_10_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_10.oen = s_reg2hw.pad_io_e_10_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_10.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_10.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_10.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_10.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_10.chip2pad = s_reg2hw.pad_io_e_10_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_10.oen = s_reg2hw.pad_io_e_10_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_11
   always_comb begin
     unique case (s_reg2hw.pad_io_e_11_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_11.oen = s_reg2hw.pad_io_e_11_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_11.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_11.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_11.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_11.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_11.chip2pad = s_reg2hw.pad_io_e_11_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_11.oen = s_reg2hw.pad_io_e_11_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_12
   always_comb begin
     unique case (s_reg2hw.pad_io_e_12_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_12.oen = s_reg2hw.pad_io_e_12_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_12.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_12.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_12.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_12.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_12.chip2pad = s_reg2hw.pad_io_e_12_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_12.oen = s_reg2hw.pad_io_e_12_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_13
   always_comb begin
     unique case (s_reg2hw.pad_io_e_13_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_13.oen = s_reg2hw.pad_io_e_13_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_13.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_13.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_13.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_13.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_13.chip2pad = s_reg2hw.pad_io_e_13_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_13.oen = s_reg2hw.pad_io_e_13_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_e_14
   always_comb begin
     unique case (s_reg2hw.pad_io_e_14_mux_sel.q)
       PAD_MUX_GROUP_MX_E_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_14.oen = s_reg2hw.pad_io_e_14_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = port_signals_soc2pad_i.spi7.csn0_i;
          mux_to_pads_o.pad_io_e_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = port_signals_soc2pad_i.spi7.sd0_i;
          mux_to_pads_o.pad_io_e_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = port_signals_soc2pad_i.spi7.clk_i;
          mux_to_pads_o.pad_io_e_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = port_signals_soc2pad_i.spi8.csn0_i;
          mux_to_pads_o.pad_io_e_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = port_signals_soc2pad_i.spi8.sd0_i;
          mux_to_pads_o.pad_io_e_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = port_signals_soc2pad_i.spi8.clk_i;
          mux_to_pads_o.pad_io_e_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = port_signals_soc2pad_i.spi9.csn0_i;
          mux_to_pads_o.pad_io_e_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = port_signals_soc2pad_i.spi9.sd0_i;
          mux_to_pads_o.pad_io_e_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = port_signals_soc2pad_i.spi9.clk_i;
          mux_to_pads_o.pad_io_e_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = port_signals_soc2pad_i.i2c3.scl_i;
          mux_to_pads_o.pad_io_e_14.oen = ~port_signals_soc2pad_i.i2c3.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = port_signals_soc2pad_i.i2c3.sda_i;
          mux_to_pads_o.pad_io_e_14.oen = ~port_signals_soc2pad_i.i2c3.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can1_tx_i;
          mux_to_pads_o.pad_io_e_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_e_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX: begin
          mux_to_pads_o.pad_io_e_14.chip2pad = port_signals_soc2pad_i.CAN2_CAN.can2_tx_i;
          mux_to_pads_o.pad_io_e_14.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_io_e_14.chip2pad = s_reg2hw.pad_io_e_14_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_e_14.oen = s_reg2hw.pad_io_e_14_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_f_00
   always_comb begin
     unique case (s_reg2hw.pad_io_f_00_mux_sel.q)
       PAD_MUX_GROUP_MX_F_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_00.oen = s_reg2hw.pad_io_f_00_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_CS: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = port_signals_soc2pad_i.spi10.csn0_i;
          mux_to_pads_o.pad_io_f_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MOSI: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = port_signals_soc2pad_i.spi10.sd0_i;
          mux_to_pads_o.pad_io_f_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_SCK: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = port_signals_soc2pad_i.spi10.clk_i;
          mux_to_pads_o.pad_io_f_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = port_signals_soc2pad_i.i2c4.scl_i;
          mux_to_pads_o.pad_io_f_00.oen = ~port_signals_soc2pad_i.i2c4.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = port_signals_soc2pad_i.i2c4.sda_i;
          mux_to_pads_o.pad_io_f_00.oen = ~port_signals_soc2pad_i.i2c4.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_TX: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = port_signals_soc2pad_i.uart2.tx_i;
          mux_to_pads_o.pad_io_f_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_TX: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = port_signals_soc2pad_i.uart3.tx_i;
          mux_to_pads_o.pad_io_f_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_00.oen = 1'b1;
       end
       default: begin
         mux_to_pads_o.pad_io_f_00.chip2pad = s_reg2hw.pad_io_f_00_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_00.oen = s_reg2hw.pad_io_f_00_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_f_01
   always_comb begin
     unique case (s_reg2hw.pad_io_f_01_mux_sel.q)
       PAD_MUX_GROUP_MX_F_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_01.oen = s_reg2hw.pad_io_f_01_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_CS: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = port_signals_soc2pad_i.spi10.csn0_i;
          mux_to_pads_o.pad_io_f_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MOSI: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = port_signals_soc2pad_i.spi10.sd0_i;
          mux_to_pads_o.pad_io_f_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_SCK: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = port_signals_soc2pad_i.spi10.clk_i;
          mux_to_pads_o.pad_io_f_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = port_signals_soc2pad_i.i2c4.scl_i;
          mux_to_pads_o.pad_io_f_01.oen = ~port_signals_soc2pad_i.i2c4.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = port_signals_soc2pad_i.i2c4.sda_i;
          mux_to_pads_o.pad_io_f_01.oen = ~port_signals_soc2pad_i.i2c4.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_TX: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = port_signals_soc2pad_i.uart2.tx_i;
          mux_to_pads_o.pad_io_f_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_TX: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = port_signals_soc2pad_i.uart3.tx_i;
          mux_to_pads_o.pad_io_f_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_01.oen = 1'b1;
       end
       default: begin
         mux_to_pads_o.pad_io_f_01.chip2pad = s_reg2hw.pad_io_f_01_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_01.oen = s_reg2hw.pad_io_f_01_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_f_02
   always_comb begin
     unique case (s_reg2hw.pad_io_f_02_mux_sel.q)
       PAD_MUX_GROUP_MX_F_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_02.oen = s_reg2hw.pad_io_f_02_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_CS: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = port_signals_soc2pad_i.spi10.csn0_i;
          mux_to_pads_o.pad_io_f_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MOSI: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = port_signals_soc2pad_i.spi10.sd0_i;
          mux_to_pads_o.pad_io_f_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_SCK: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = port_signals_soc2pad_i.spi10.clk_i;
          mux_to_pads_o.pad_io_f_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = port_signals_soc2pad_i.i2c4.scl_i;
          mux_to_pads_o.pad_io_f_02.oen = ~port_signals_soc2pad_i.i2c4.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = port_signals_soc2pad_i.i2c4.sda_i;
          mux_to_pads_o.pad_io_f_02.oen = ~port_signals_soc2pad_i.i2c4.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_TX: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = port_signals_soc2pad_i.uart2.tx_i;
          mux_to_pads_o.pad_io_f_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_TX: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = port_signals_soc2pad_i.uart3.tx_i;
          mux_to_pads_o.pad_io_f_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_02.oen = 1'b1;
       end
       default: begin
         mux_to_pads_o.pad_io_f_02.chip2pad = s_reg2hw.pad_io_f_02_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_02.oen = s_reg2hw.pad_io_f_02_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_f_03
   always_comb begin
     unique case (s_reg2hw.pad_io_f_03_mux_sel.q)
       PAD_MUX_GROUP_MX_F_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_03.oen = s_reg2hw.pad_io_f_03_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_CS: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = port_signals_soc2pad_i.spi10.csn0_i;
          mux_to_pads_o.pad_io_f_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MOSI: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = port_signals_soc2pad_i.spi10.sd0_i;
          mux_to_pads_o.pad_io_f_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_SCK: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = port_signals_soc2pad_i.spi10.clk_i;
          mux_to_pads_o.pad_io_f_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = port_signals_soc2pad_i.i2c4.scl_i;
          mux_to_pads_o.pad_io_f_03.oen = ~port_signals_soc2pad_i.i2c4.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = port_signals_soc2pad_i.i2c4.sda_i;
          mux_to_pads_o.pad_io_f_03.oen = ~port_signals_soc2pad_i.i2c4.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_TX: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = port_signals_soc2pad_i.uart2.tx_i;
          mux_to_pads_o.pad_io_f_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_TX: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = port_signals_soc2pad_i.uart3.tx_i;
          mux_to_pads_o.pad_io_f_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_03.oen = 1'b1;
       end
       default: begin
         mux_to_pads_o.pad_io_f_03.chip2pad = s_reg2hw.pad_io_f_03_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_03.oen = s_reg2hw.pad_io_f_03_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_f_04
   always_comb begin
     unique case (s_reg2hw.pad_io_f_04_mux_sel.q)
       PAD_MUX_GROUP_MX_F_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_04.oen = s_reg2hw.pad_io_f_04_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_CS: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = port_signals_soc2pad_i.spi10.csn0_i;
          mux_to_pads_o.pad_io_f_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MOSI: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = port_signals_soc2pad_i.spi10.sd0_i;
          mux_to_pads_o.pad_io_f_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_SCK: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = port_signals_soc2pad_i.spi10.clk_i;
          mux_to_pads_o.pad_io_f_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = port_signals_soc2pad_i.i2c4.scl_i;
          mux_to_pads_o.pad_io_f_04.oen = ~port_signals_soc2pad_i.i2c4.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = port_signals_soc2pad_i.i2c4.sda_i;
          mux_to_pads_o.pad_io_f_04.oen = ~port_signals_soc2pad_i.i2c4.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_TX: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = port_signals_soc2pad_i.uart2.tx_i;
          mux_to_pads_o.pad_io_f_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_TX: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = port_signals_soc2pad_i.uart3.tx_i;
          mux_to_pads_o.pad_io_f_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_04.oen = 1'b1;
       end
       default: begin
         mux_to_pads_o.pad_io_f_04.chip2pad = s_reg2hw.pad_io_f_04_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_04.oen = s_reg2hw.pad_io_f_04_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_f_05
   always_comb begin
     unique case (s_reg2hw.pad_io_f_05_mux_sel.q)
       PAD_MUX_GROUP_MX_F_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_05.oen = s_reg2hw.pad_io_f_05_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_CS: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = port_signals_soc2pad_i.spi10.csn0_i;
          mux_to_pads_o.pad_io_f_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MOSI: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = port_signals_soc2pad_i.spi10.sd0_i;
          mux_to_pads_o.pad_io_f_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_SCK: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = port_signals_soc2pad_i.spi10.clk_i;
          mux_to_pads_o.pad_io_f_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = port_signals_soc2pad_i.i2c4.scl_i;
          mux_to_pads_o.pad_io_f_05.oen = ~port_signals_soc2pad_i.i2c4.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = port_signals_soc2pad_i.i2c4.sda_i;
          mux_to_pads_o.pad_io_f_05.oen = ~port_signals_soc2pad_i.i2c4.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_TX: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = port_signals_soc2pad_i.uart2.tx_i;
          mux_to_pads_o.pad_io_f_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_TX: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = port_signals_soc2pad_i.uart3.tx_i;
          mux_to_pads_o.pad_io_f_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_05.oen = 1'b1;
       end
       default: begin
         mux_to_pads_o.pad_io_f_05.chip2pad = s_reg2hw.pad_io_f_05_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_05.oen = s_reg2hw.pad_io_f_05_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_f_06
   always_comb begin
     unique case (s_reg2hw.pad_io_f_06_mux_sel.q)
       PAD_MUX_GROUP_MX_F_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_06.oen = s_reg2hw.pad_io_f_06_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_CS: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = port_signals_soc2pad_i.spi10.csn0_i;
          mux_to_pads_o.pad_io_f_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MOSI: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = port_signals_soc2pad_i.spi10.sd0_i;
          mux_to_pads_o.pad_io_f_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_SCK: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = port_signals_soc2pad_i.spi10.clk_i;
          mux_to_pads_o.pad_io_f_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = port_signals_soc2pad_i.i2c4.scl_i;
          mux_to_pads_o.pad_io_f_06.oen = ~port_signals_soc2pad_i.i2c4.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = port_signals_soc2pad_i.i2c4.sda_i;
          mux_to_pads_o.pad_io_f_06.oen = ~port_signals_soc2pad_i.i2c4.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_TX: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = port_signals_soc2pad_i.uart2.tx_i;
          mux_to_pads_o.pad_io_f_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_TX: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = port_signals_soc2pad_i.uart3.tx_i;
          mux_to_pads_o.pad_io_f_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_06.oen = 1'b1;
       end
       default: begin
         mux_to_pads_o.pad_io_f_06.chip2pad = s_reg2hw.pad_io_f_06_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_06.oen = s_reg2hw.pad_io_f_06_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_f_07
   always_comb begin
     unique case (s_reg2hw.pad_io_f_07_mux_sel.q)
       PAD_MUX_GROUP_MX_F_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_07.oen = s_reg2hw.pad_io_f_07_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_CS: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = port_signals_soc2pad_i.spi10.csn0_i;
          mux_to_pads_o.pad_io_f_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MOSI: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = port_signals_soc2pad_i.spi10.sd0_i;
          mux_to_pads_o.pad_io_f_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_SCK: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = port_signals_soc2pad_i.spi10.clk_i;
          mux_to_pads_o.pad_io_f_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = port_signals_soc2pad_i.i2c4.scl_i;
          mux_to_pads_o.pad_io_f_07.oen = ~port_signals_soc2pad_i.i2c4.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = port_signals_soc2pad_i.i2c4.sda_i;
          mux_to_pads_o.pad_io_f_07.oen = ~port_signals_soc2pad_i.i2c4.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_TX: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = port_signals_soc2pad_i.uart2.tx_i;
          mux_to_pads_o.pad_io_f_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_TX: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = port_signals_soc2pad_i.uart3.tx_i;
          mux_to_pads_o.pad_io_f_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_07.oen = 1'b1;
       end
       default: begin
         mux_to_pads_o.pad_io_f_07.chip2pad = s_reg2hw.pad_io_f_07_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_07.oen = s_reg2hw.pad_io_f_07_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_f_08
   always_comb begin
     unique case (s_reg2hw.pad_io_f_08_mux_sel.q)
       PAD_MUX_GROUP_MX_F_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_08.oen = s_reg2hw.pad_io_f_08_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_CS: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = port_signals_soc2pad_i.spi10.csn0_i;
          mux_to_pads_o.pad_io_f_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MOSI: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = port_signals_soc2pad_i.spi10.sd0_i;
          mux_to_pads_o.pad_io_f_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_SCK: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = port_signals_soc2pad_i.spi10.clk_i;
          mux_to_pads_o.pad_io_f_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = port_signals_soc2pad_i.i2c4.scl_i;
          mux_to_pads_o.pad_io_f_08.oen = ~port_signals_soc2pad_i.i2c4.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = port_signals_soc2pad_i.i2c4.sda_i;
          mux_to_pads_o.pad_io_f_08.oen = ~port_signals_soc2pad_i.i2c4.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_TX: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = port_signals_soc2pad_i.uart2.tx_i;
          mux_to_pads_o.pad_io_f_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_TX: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = port_signals_soc2pad_i.uart3.tx_i;
          mux_to_pads_o.pad_io_f_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_08.oen = 1'b1;
       end
       default: begin
         mux_to_pads_o.pad_io_f_08.chip2pad = s_reg2hw.pad_io_f_08_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_08.oen = s_reg2hw.pad_io_f_08_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_f_09
   always_comb begin
     unique case (s_reg2hw.pad_io_f_09_mux_sel.q)
       PAD_MUX_GROUP_MX_F_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_09.oen = s_reg2hw.pad_io_f_09_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_CS: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = port_signals_soc2pad_i.spi10.csn0_i;
          mux_to_pads_o.pad_io_f_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MOSI: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = port_signals_soc2pad_i.spi10.sd0_i;
          mux_to_pads_o.pad_io_f_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_SCK: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = port_signals_soc2pad_i.spi10.clk_i;
          mux_to_pads_o.pad_io_f_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = port_signals_soc2pad_i.i2c4.scl_i;
          mux_to_pads_o.pad_io_f_09.oen = ~port_signals_soc2pad_i.i2c4.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = port_signals_soc2pad_i.i2c4.sda_i;
          mux_to_pads_o.pad_io_f_09.oen = ~port_signals_soc2pad_i.i2c4.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_TX: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = port_signals_soc2pad_i.uart2.tx_i;
          mux_to_pads_o.pad_io_f_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_TX: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = port_signals_soc2pad_i.uart3.tx_i;
          mux_to_pads_o.pad_io_f_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_09.oen = 1'b1;
       end
       default: begin
         mux_to_pads_o.pad_io_f_09.chip2pad = s_reg2hw.pad_io_f_09_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_09.oen = s_reg2hw.pad_io_f_09_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_f_10
   always_comb begin
     unique case (s_reg2hw.pad_io_f_10_mux_sel.q)
       PAD_MUX_GROUP_MX_F_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_10.oen = s_reg2hw.pad_io_f_10_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_CS: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = port_signals_soc2pad_i.spi10.csn0_i;
          mux_to_pads_o.pad_io_f_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MOSI: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = port_signals_soc2pad_i.spi10.sd0_i;
          mux_to_pads_o.pad_io_f_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_SCK: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = port_signals_soc2pad_i.spi10.clk_i;
          mux_to_pads_o.pad_io_f_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = port_signals_soc2pad_i.i2c4.scl_i;
          mux_to_pads_o.pad_io_f_10.oen = ~port_signals_soc2pad_i.i2c4.scl_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = port_signals_soc2pad_i.i2c4.sda_i;
          mux_to_pads_o.pad_io_f_10.oen = ~port_signals_soc2pad_i.i2c4.sda_oe_i;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART2_UART_TX: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = port_signals_soc2pad_i.uart2.tx_i;
          mux_to_pads_o.pad_io_f_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_UART3_UART_TX: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = port_signals_soc2pad_i.uart3.tx_i;
          mux_to_pads_o.pad_io_f_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC: begin
          mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_f_10.oen = 1'b1;
       end
       default: begin
         mux_to_pads_o.pad_io_f_10.chip2pad = s_reg2hw.pad_io_f_10_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_f_10.oen = s_reg2hw.pad_io_f_10_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_00
   always_comb begin
     unique case (s_reg2hw.pad_io_g_00_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_00.chip2pad = s_reg2hw.pad_io_g_00_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_00.oen = s_reg2hw.pad_io_g_00_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = s_reg2hw.pad_io_g_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = s_reg2hw.pad_io_g_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = s_reg2hw.pad_io_g_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = s_reg2hw.pad_io_g_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = s_reg2hw.pad_io_g_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = s_reg2hw.pad_io_g_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = s_reg2hw.pad_io_g_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = s_reg2hw.pad_io_g_00_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_00.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_00.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_00.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_00.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_00.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_00.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_00.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_00.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_00.chip2pad = s_reg2hw.pad_io_g_00_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_00.oen = s_reg2hw.pad_io_g_00_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_01
   always_comb begin
     unique case (s_reg2hw.pad_io_g_01_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_01.chip2pad = s_reg2hw.pad_io_g_01_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_01.oen = s_reg2hw.pad_io_g_01_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = s_reg2hw.pad_io_g_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = s_reg2hw.pad_io_g_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = s_reg2hw.pad_io_g_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = s_reg2hw.pad_io_g_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = s_reg2hw.pad_io_g_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = s_reg2hw.pad_io_g_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = s_reg2hw.pad_io_g_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = s_reg2hw.pad_io_g_01_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_01.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_01.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_01.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_01.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_01.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_01.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_01.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_01.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_01.chip2pad = s_reg2hw.pad_io_g_01_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_01.oen = s_reg2hw.pad_io_g_01_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_02
   always_comb begin
     unique case (s_reg2hw.pad_io_g_02_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_02.chip2pad = s_reg2hw.pad_io_g_02_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_02.oen = s_reg2hw.pad_io_g_02_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = s_reg2hw.pad_io_g_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = s_reg2hw.pad_io_g_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = s_reg2hw.pad_io_g_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = s_reg2hw.pad_io_g_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = s_reg2hw.pad_io_g_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = s_reg2hw.pad_io_g_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = s_reg2hw.pad_io_g_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = s_reg2hw.pad_io_g_02_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_02.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_02.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_02.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_02.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_02.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_02.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_02.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_02.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_02.chip2pad = s_reg2hw.pad_io_g_02_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_02.oen = s_reg2hw.pad_io_g_02_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_03
   always_comb begin
     unique case (s_reg2hw.pad_io_g_03_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_03.chip2pad = s_reg2hw.pad_io_g_03_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_03.oen = s_reg2hw.pad_io_g_03_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = s_reg2hw.pad_io_g_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = s_reg2hw.pad_io_g_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = s_reg2hw.pad_io_g_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = s_reg2hw.pad_io_g_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = s_reg2hw.pad_io_g_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = s_reg2hw.pad_io_g_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = s_reg2hw.pad_io_g_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = s_reg2hw.pad_io_g_03_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_03.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_03.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_03.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_03.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_03.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_03.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_03.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_03.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_03.chip2pad = s_reg2hw.pad_io_g_03_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_03.oen = s_reg2hw.pad_io_g_03_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_04
   always_comb begin
     unique case (s_reg2hw.pad_io_g_04_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_04.chip2pad = s_reg2hw.pad_io_g_04_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_04.oen = s_reg2hw.pad_io_g_04_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = s_reg2hw.pad_io_g_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = s_reg2hw.pad_io_g_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = s_reg2hw.pad_io_g_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = s_reg2hw.pad_io_g_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = s_reg2hw.pad_io_g_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = s_reg2hw.pad_io_g_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = s_reg2hw.pad_io_g_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = s_reg2hw.pad_io_g_04_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_04.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_04.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_04.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_04.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_04.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_04.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_04.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_04.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_04.chip2pad = s_reg2hw.pad_io_g_04_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_04.oen = s_reg2hw.pad_io_g_04_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_05
   always_comb begin
     unique case (s_reg2hw.pad_io_g_05_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_05.chip2pad = s_reg2hw.pad_io_g_05_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_05.oen = s_reg2hw.pad_io_g_05_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = s_reg2hw.pad_io_g_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = s_reg2hw.pad_io_g_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = s_reg2hw.pad_io_g_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = s_reg2hw.pad_io_g_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = s_reg2hw.pad_io_g_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = s_reg2hw.pad_io_g_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = s_reg2hw.pad_io_g_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = s_reg2hw.pad_io_g_05_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_05.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_05.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_05.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_05.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_05.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_05.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_05.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_05.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_05.chip2pad = s_reg2hw.pad_io_g_05_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_05.oen = s_reg2hw.pad_io_g_05_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_06
   always_comb begin
     unique case (s_reg2hw.pad_io_g_06_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_06.chip2pad = s_reg2hw.pad_io_g_06_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_06.oen = s_reg2hw.pad_io_g_06_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = s_reg2hw.pad_io_g_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = s_reg2hw.pad_io_g_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = s_reg2hw.pad_io_g_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = s_reg2hw.pad_io_g_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = s_reg2hw.pad_io_g_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = s_reg2hw.pad_io_g_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = s_reg2hw.pad_io_g_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = s_reg2hw.pad_io_g_06_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_06.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_06.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_06.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_06.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_06.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_06.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_06.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_06.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_06.chip2pad = s_reg2hw.pad_io_g_06_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_06.oen = s_reg2hw.pad_io_g_06_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_07
   always_comb begin
     unique case (s_reg2hw.pad_io_g_07_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_07.chip2pad = s_reg2hw.pad_io_g_07_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_07.oen = s_reg2hw.pad_io_g_07_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = s_reg2hw.pad_io_g_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = s_reg2hw.pad_io_g_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = s_reg2hw.pad_io_g_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = s_reg2hw.pad_io_g_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = s_reg2hw.pad_io_g_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = s_reg2hw.pad_io_g_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = s_reg2hw.pad_io_g_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = s_reg2hw.pad_io_g_07_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_07.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_07.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_07.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_07.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_07.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_07.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_07.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_07.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_07.chip2pad = s_reg2hw.pad_io_g_07_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_07.oen = s_reg2hw.pad_io_g_07_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_08
   always_comb begin
     unique case (s_reg2hw.pad_io_g_08_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_08.chip2pad = s_reg2hw.pad_io_g_08_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_08.oen = s_reg2hw.pad_io_g_08_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = s_reg2hw.pad_io_g_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = s_reg2hw.pad_io_g_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = s_reg2hw.pad_io_g_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = s_reg2hw.pad_io_g_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = s_reg2hw.pad_io_g_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = s_reg2hw.pad_io_g_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = s_reg2hw.pad_io_g_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = s_reg2hw.pad_io_g_08_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_08.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_08.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_08.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_08.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_08.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_08.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_08.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_08.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_08.chip2pad = s_reg2hw.pad_io_g_08_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_08.oen = s_reg2hw.pad_io_g_08_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_09
   always_comb begin
     unique case (s_reg2hw.pad_io_g_09_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_09.chip2pad = s_reg2hw.pad_io_g_09_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_09.oen = s_reg2hw.pad_io_g_09_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = s_reg2hw.pad_io_g_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = s_reg2hw.pad_io_g_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = s_reg2hw.pad_io_g_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = s_reg2hw.pad_io_g_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = s_reg2hw.pad_io_g_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = s_reg2hw.pad_io_g_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = s_reg2hw.pad_io_g_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = s_reg2hw.pad_io_g_09_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_09.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_09.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_09.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_09.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_09.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_09.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_09.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_09.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_09.chip2pad = s_reg2hw.pad_io_g_09_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_09.oen = s_reg2hw.pad_io_g_09_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_10
   always_comb begin
     unique case (s_reg2hw.pad_io_g_10_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_10.chip2pad = s_reg2hw.pad_io_g_10_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_10.oen = s_reg2hw.pad_io_g_10_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = s_reg2hw.pad_io_g_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = s_reg2hw.pad_io_g_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = s_reg2hw.pad_io_g_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = s_reg2hw.pad_io_g_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = s_reg2hw.pad_io_g_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = s_reg2hw.pad_io_g_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = s_reg2hw.pad_io_g_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = s_reg2hw.pad_io_g_10_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_10.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_10.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_10.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_10.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_10.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_10.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_10.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_10.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_10.chip2pad = s_reg2hw.pad_io_g_10_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_10.oen = s_reg2hw.pad_io_g_10_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_11
   always_comb begin
     unique case (s_reg2hw.pad_io_g_11_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_11.chip2pad = s_reg2hw.pad_io_g_11_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_11.oen = s_reg2hw.pad_io_g_11_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = s_reg2hw.pad_io_g_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = s_reg2hw.pad_io_g_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = s_reg2hw.pad_io_g_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = s_reg2hw.pad_io_g_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = s_reg2hw.pad_io_g_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = s_reg2hw.pad_io_g_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = s_reg2hw.pad_io_g_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = s_reg2hw.pad_io_g_11_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_11.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_11.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_11.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_11.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_11.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_11.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_11.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_11.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_11.chip2pad = s_reg2hw.pad_io_g_11_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_11.oen = s_reg2hw.pad_io_g_11_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_12
   always_comb begin
     unique case (s_reg2hw.pad_io_g_12_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_12.chip2pad = s_reg2hw.pad_io_g_12_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_12.oen = s_reg2hw.pad_io_g_12_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = s_reg2hw.pad_io_g_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = s_reg2hw.pad_io_g_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = s_reg2hw.pad_io_g_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = s_reg2hw.pad_io_g_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = s_reg2hw.pad_io_g_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = s_reg2hw.pad_io_g_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = s_reg2hw.pad_io_g_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = s_reg2hw.pad_io_g_12_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_12.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_12.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_12.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_12.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_12.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_12.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_12.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_12.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_12.chip2pad = s_reg2hw.pad_io_g_12_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_12.oen = s_reg2hw.pad_io_g_12_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_13
   always_comb begin
     unique case (s_reg2hw.pad_io_g_13_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_13.chip2pad = s_reg2hw.pad_io_g_13_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_13.oen = s_reg2hw.pad_io_g_13_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = s_reg2hw.pad_io_g_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = s_reg2hw.pad_io_g_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = s_reg2hw.pad_io_g_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = s_reg2hw.pad_io_g_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = s_reg2hw.pad_io_g_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = s_reg2hw.pad_io_g_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = s_reg2hw.pad_io_g_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = s_reg2hw.pad_io_g_13_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_13.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_13.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_13.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_13.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_13.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_13.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_13.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_13.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_13.chip2pad = s_reg2hw.pad_io_g_13_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_13.oen = s_reg2hw.pad_io_g_13_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_io_g_14
   always_comb begin
     unique case (s_reg2hw.pad_io_g_14_mux_sel.q)
       PAD_MUX_GROUP_MX_G_SEL_DEFAULT: begin
         mux_to_pads_o.pad_io_g_14.chip2pad = s_reg2hw.pad_io_g_14_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_14.oen = s_reg2hw.pad_io_g_14_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = s_reg2hw.pad_io_g_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.uart_cf3.rts_i;
          mux_to_pads_o.pad_io_g_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = s_reg2hw.pad_io_g_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.uart_cf3.tx_i;
          mux_to_pads_o.pad_io_g_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.eth0.eth_rst_i;
          mux_to_pads_o.pad_io_g_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = s_reg2hw.pad_io_g_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = s_reg2hw.pad_io_g_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = s_reg2hw.pad_io_g_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = s_reg2hw.pad_io_g_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = s_reg2hw.pad_io_g_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = s_reg2hw.pad_io_g_14_cfg.chip2pad.q;
          mux_to_pads_o.pad_io_g_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.eth0.eth_txcd_i;
          mux_to_pads_o.pad_io_g_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.eth0.eth_txctl_o;
          mux_to_pads_o.pad_io_g_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.eth0.eth_txd0_i;
          mux_to_pads_o.pad_io_g_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.eth0.eth_txd1_i;
          mux_to_pads_o.pad_io_g_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.eth0.eth_txd2_i;
          mux_to_pads_o.pad_io_g_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.eth0.eth_txd3_i;
          mux_to_pads_o.pad_io_g_14.oen = 1'b1;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.sdio1.clk_i;
          mux_to_pads_o.pad_io_g_14.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.sdio1.cmd_i;
          mux_to_pads_o.pad_io_g_14.oen = port_signals_soc2pad_i.sdio1.cmd_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.sdio1.data0_i;
          mux_to_pads_o.pad_io_g_14.oen = port_signals_soc2pad_i.sdio1.data0_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.sdio1.data1_i;
          mux_to_pads_o.pad_io_g_14.oen = port_signals_soc2pad_i.sdio1.data1_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.sdio1.data2_i;
          mux_to_pads_o.pad_io_g_14.oen = port_signals_soc2pad_i.sdio1.data2_oen_i;
       end
       PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3: begin
          mux_to_pads_o.pad_io_g_14.chip2pad = port_signals_soc2pad_i.sdio1.data3_i;
          mux_to_pads_o.pad_io_g_14.oen = port_signals_soc2pad_i.sdio1.data3_oen_i;
       end
       default: begin
         mux_to_pads_o.pad_io_g_14.chip2pad = s_reg2hw.pad_io_g_14_cfg.chip2pad.q;
         mux_to_pads_o.pad_io_g_14.oen = s_reg2hw.pad_io_g_14_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_pwm0
   always_comb begin
     unique case (s_reg2hw.pad_pwm0_mux_sel.q)
       PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_DEFAULT: begin
         mux_to_pads_o.pad_pwm0.chip2pad = s_reg2hw.pad_pwm0_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm0.oen = s_reg2hw.pad_pwm0_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM0: begin
          mux_to_pads_o.pad_pwm0.chip2pad = port_signals_soc2pad_i.pwm.pwm0_i;
          mux_to_pads_o.pad_pwm0.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM1: begin
          mux_to_pads_o.pad_pwm0.chip2pad = port_signals_soc2pad_i.pwm.pwm1_i;
          mux_to_pads_o.pad_pwm0.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM2: begin
          mux_to_pads_o.pad_pwm0.chip2pad = port_signals_soc2pad_i.pwm.pwm2_i;
          mux_to_pads_o.pad_pwm0.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM3: begin
          mux_to_pads_o.pad_pwm0.chip2pad = port_signals_soc2pad_i.pwm.pwm3_i;
          mux_to_pads_o.pad_pwm0.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM4: begin
          mux_to_pads_o.pad_pwm0.chip2pad = port_signals_soc2pad_i.pwm.pwm4_i;
          mux_to_pads_o.pad_pwm0.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM5: begin
          mux_to_pads_o.pad_pwm0.chip2pad = port_signals_soc2pad_i.pwm.pwm5_i;
          mux_to_pads_o.pad_pwm0.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM6: begin
          mux_to_pads_o.pad_pwm0.chip2pad = port_signals_soc2pad_i.pwm.pwm6_i;
          mux_to_pads_o.pad_pwm0.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM7: begin
          mux_to_pads_o.pad_pwm0.chip2pad = port_signals_soc2pad_i.pwm.pwm7_i;
          mux_to_pads_o.pad_pwm0.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_pwm0.chip2pad = s_reg2hw.pad_pwm0_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm0.oen = s_reg2hw.pad_pwm0_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_pwm1
   always_comb begin
     unique case (s_reg2hw.pad_pwm1_mux_sel.q)
       PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_DEFAULT: begin
         mux_to_pads_o.pad_pwm1.chip2pad = s_reg2hw.pad_pwm1_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm1.oen = s_reg2hw.pad_pwm1_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM0: begin
          mux_to_pads_o.pad_pwm1.chip2pad = port_signals_soc2pad_i.pwm.pwm0_i;
          mux_to_pads_o.pad_pwm1.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM1: begin
          mux_to_pads_o.pad_pwm1.chip2pad = port_signals_soc2pad_i.pwm.pwm1_i;
          mux_to_pads_o.pad_pwm1.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM2: begin
          mux_to_pads_o.pad_pwm1.chip2pad = port_signals_soc2pad_i.pwm.pwm2_i;
          mux_to_pads_o.pad_pwm1.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM3: begin
          mux_to_pads_o.pad_pwm1.chip2pad = port_signals_soc2pad_i.pwm.pwm3_i;
          mux_to_pads_o.pad_pwm1.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM4: begin
          mux_to_pads_o.pad_pwm1.chip2pad = port_signals_soc2pad_i.pwm.pwm4_i;
          mux_to_pads_o.pad_pwm1.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM5: begin
          mux_to_pads_o.pad_pwm1.chip2pad = port_signals_soc2pad_i.pwm.pwm5_i;
          mux_to_pads_o.pad_pwm1.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM6: begin
          mux_to_pads_o.pad_pwm1.chip2pad = port_signals_soc2pad_i.pwm.pwm6_i;
          mux_to_pads_o.pad_pwm1.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM7: begin
          mux_to_pads_o.pad_pwm1.chip2pad = port_signals_soc2pad_i.pwm.pwm7_i;
          mux_to_pads_o.pad_pwm1.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_pwm1.chip2pad = s_reg2hw.pad_pwm1_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm1.oen = s_reg2hw.pad_pwm1_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_pwm2
   always_comb begin
     unique case (s_reg2hw.pad_pwm2_mux_sel.q)
       PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_DEFAULT: begin
         mux_to_pads_o.pad_pwm2.chip2pad = s_reg2hw.pad_pwm2_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm2.oen = s_reg2hw.pad_pwm2_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM0: begin
          mux_to_pads_o.pad_pwm2.chip2pad = port_signals_soc2pad_i.pwm.pwm0_i;
          mux_to_pads_o.pad_pwm2.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM1: begin
          mux_to_pads_o.pad_pwm2.chip2pad = port_signals_soc2pad_i.pwm.pwm1_i;
          mux_to_pads_o.pad_pwm2.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM2: begin
          mux_to_pads_o.pad_pwm2.chip2pad = port_signals_soc2pad_i.pwm.pwm2_i;
          mux_to_pads_o.pad_pwm2.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM3: begin
          mux_to_pads_o.pad_pwm2.chip2pad = port_signals_soc2pad_i.pwm.pwm3_i;
          mux_to_pads_o.pad_pwm2.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM4: begin
          mux_to_pads_o.pad_pwm2.chip2pad = port_signals_soc2pad_i.pwm.pwm4_i;
          mux_to_pads_o.pad_pwm2.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM5: begin
          mux_to_pads_o.pad_pwm2.chip2pad = port_signals_soc2pad_i.pwm.pwm5_i;
          mux_to_pads_o.pad_pwm2.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM6: begin
          mux_to_pads_o.pad_pwm2.chip2pad = port_signals_soc2pad_i.pwm.pwm6_i;
          mux_to_pads_o.pad_pwm2.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM7: begin
          mux_to_pads_o.pad_pwm2.chip2pad = port_signals_soc2pad_i.pwm.pwm7_i;
          mux_to_pads_o.pad_pwm2.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_pwm2.chip2pad = s_reg2hw.pad_pwm2_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm2.oen = s_reg2hw.pad_pwm2_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_pwm3
   always_comb begin
     unique case (s_reg2hw.pad_pwm3_mux_sel.q)
       PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_DEFAULT: begin
         mux_to_pads_o.pad_pwm3.chip2pad = s_reg2hw.pad_pwm3_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm3.oen = s_reg2hw.pad_pwm3_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM0: begin
          mux_to_pads_o.pad_pwm3.chip2pad = port_signals_soc2pad_i.pwm.pwm0_i;
          mux_to_pads_o.pad_pwm3.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM1: begin
          mux_to_pads_o.pad_pwm3.chip2pad = port_signals_soc2pad_i.pwm.pwm1_i;
          mux_to_pads_o.pad_pwm3.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM2: begin
          mux_to_pads_o.pad_pwm3.chip2pad = port_signals_soc2pad_i.pwm.pwm2_i;
          mux_to_pads_o.pad_pwm3.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM3: begin
          mux_to_pads_o.pad_pwm3.chip2pad = port_signals_soc2pad_i.pwm.pwm3_i;
          mux_to_pads_o.pad_pwm3.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM4: begin
          mux_to_pads_o.pad_pwm3.chip2pad = port_signals_soc2pad_i.pwm.pwm4_i;
          mux_to_pads_o.pad_pwm3.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM5: begin
          mux_to_pads_o.pad_pwm3.chip2pad = port_signals_soc2pad_i.pwm.pwm5_i;
          mux_to_pads_o.pad_pwm3.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM6: begin
          mux_to_pads_o.pad_pwm3.chip2pad = port_signals_soc2pad_i.pwm.pwm6_i;
          mux_to_pads_o.pad_pwm3.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM7: begin
          mux_to_pads_o.pad_pwm3.chip2pad = port_signals_soc2pad_i.pwm.pwm7_i;
          mux_to_pads_o.pad_pwm3.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_pwm3.chip2pad = s_reg2hw.pad_pwm3_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm3.oen = s_reg2hw.pad_pwm3_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_pwm4
   always_comb begin
     unique case (s_reg2hw.pad_pwm4_mux_sel.q)
       PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_DEFAULT: begin
         mux_to_pads_o.pad_pwm4.chip2pad = s_reg2hw.pad_pwm4_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm4.oen = s_reg2hw.pad_pwm4_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM0: begin
          mux_to_pads_o.pad_pwm4.chip2pad = port_signals_soc2pad_i.pwm.pwm0_i;
          mux_to_pads_o.pad_pwm4.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM1: begin
          mux_to_pads_o.pad_pwm4.chip2pad = port_signals_soc2pad_i.pwm.pwm1_i;
          mux_to_pads_o.pad_pwm4.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM2: begin
          mux_to_pads_o.pad_pwm4.chip2pad = port_signals_soc2pad_i.pwm.pwm2_i;
          mux_to_pads_o.pad_pwm4.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM3: begin
          mux_to_pads_o.pad_pwm4.chip2pad = port_signals_soc2pad_i.pwm.pwm3_i;
          mux_to_pads_o.pad_pwm4.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM4: begin
          mux_to_pads_o.pad_pwm4.chip2pad = port_signals_soc2pad_i.pwm.pwm4_i;
          mux_to_pads_o.pad_pwm4.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM5: begin
          mux_to_pads_o.pad_pwm4.chip2pad = port_signals_soc2pad_i.pwm.pwm5_i;
          mux_to_pads_o.pad_pwm4.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM6: begin
          mux_to_pads_o.pad_pwm4.chip2pad = port_signals_soc2pad_i.pwm.pwm6_i;
          mux_to_pads_o.pad_pwm4.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM7: begin
          mux_to_pads_o.pad_pwm4.chip2pad = port_signals_soc2pad_i.pwm.pwm7_i;
          mux_to_pads_o.pad_pwm4.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_pwm4.chip2pad = s_reg2hw.pad_pwm4_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm4.oen = s_reg2hw.pad_pwm4_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_pwm5
   always_comb begin
     unique case (s_reg2hw.pad_pwm5_mux_sel.q)
       PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_DEFAULT: begin
         mux_to_pads_o.pad_pwm5.chip2pad = s_reg2hw.pad_pwm5_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm5.oen = s_reg2hw.pad_pwm5_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM0: begin
          mux_to_pads_o.pad_pwm5.chip2pad = port_signals_soc2pad_i.pwm.pwm0_i;
          mux_to_pads_o.pad_pwm5.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM1: begin
          mux_to_pads_o.pad_pwm5.chip2pad = port_signals_soc2pad_i.pwm.pwm1_i;
          mux_to_pads_o.pad_pwm5.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM2: begin
          mux_to_pads_o.pad_pwm5.chip2pad = port_signals_soc2pad_i.pwm.pwm2_i;
          mux_to_pads_o.pad_pwm5.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM3: begin
          mux_to_pads_o.pad_pwm5.chip2pad = port_signals_soc2pad_i.pwm.pwm3_i;
          mux_to_pads_o.pad_pwm5.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM4: begin
          mux_to_pads_o.pad_pwm5.chip2pad = port_signals_soc2pad_i.pwm.pwm4_i;
          mux_to_pads_o.pad_pwm5.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM5: begin
          mux_to_pads_o.pad_pwm5.chip2pad = port_signals_soc2pad_i.pwm.pwm5_i;
          mux_to_pads_o.pad_pwm5.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM6: begin
          mux_to_pads_o.pad_pwm5.chip2pad = port_signals_soc2pad_i.pwm.pwm6_i;
          mux_to_pads_o.pad_pwm5.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM7: begin
          mux_to_pads_o.pad_pwm5.chip2pad = port_signals_soc2pad_i.pwm.pwm7_i;
          mux_to_pads_o.pad_pwm5.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_pwm5.chip2pad = s_reg2hw.pad_pwm5_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm5.oen = s_reg2hw.pad_pwm5_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_pwm6
   always_comb begin
     unique case (s_reg2hw.pad_pwm6_mux_sel.q)
       PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_DEFAULT: begin
         mux_to_pads_o.pad_pwm6.chip2pad = s_reg2hw.pad_pwm6_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm6.oen = s_reg2hw.pad_pwm6_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM0: begin
          mux_to_pads_o.pad_pwm6.chip2pad = port_signals_soc2pad_i.pwm.pwm0_i;
          mux_to_pads_o.pad_pwm6.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM1: begin
          mux_to_pads_o.pad_pwm6.chip2pad = port_signals_soc2pad_i.pwm.pwm1_i;
          mux_to_pads_o.pad_pwm6.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM2: begin
          mux_to_pads_o.pad_pwm6.chip2pad = port_signals_soc2pad_i.pwm.pwm2_i;
          mux_to_pads_o.pad_pwm6.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM3: begin
          mux_to_pads_o.pad_pwm6.chip2pad = port_signals_soc2pad_i.pwm.pwm3_i;
          mux_to_pads_o.pad_pwm6.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM4: begin
          mux_to_pads_o.pad_pwm6.chip2pad = port_signals_soc2pad_i.pwm.pwm4_i;
          mux_to_pads_o.pad_pwm6.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM5: begin
          mux_to_pads_o.pad_pwm6.chip2pad = port_signals_soc2pad_i.pwm.pwm5_i;
          mux_to_pads_o.pad_pwm6.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM6: begin
          mux_to_pads_o.pad_pwm6.chip2pad = port_signals_soc2pad_i.pwm.pwm6_i;
          mux_to_pads_o.pad_pwm6.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM7: begin
          mux_to_pads_o.pad_pwm6.chip2pad = port_signals_soc2pad_i.pwm.pwm7_i;
          mux_to_pads_o.pad_pwm6.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_pwm6.chip2pad = s_reg2hw.pad_pwm6_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm6.oen = s_reg2hw.pad_pwm6_cfg.oen.q;
       end
     endcase
   end // always_comb

   // Pad pad_pwm7
   always_comb begin
     unique case (s_reg2hw.pad_pwm7_mux_sel.q)
       PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_DEFAULT: begin
         mux_to_pads_o.pad_pwm7.chip2pad = s_reg2hw.pad_pwm7_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm7.oen = s_reg2hw.pad_pwm7_cfg.oen.q;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM0: begin
          mux_to_pads_o.pad_pwm7.chip2pad = port_signals_soc2pad_i.pwm.pwm0_i;
          mux_to_pads_o.pad_pwm7.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM1: begin
          mux_to_pads_o.pad_pwm7.chip2pad = port_signals_soc2pad_i.pwm.pwm1_i;
          mux_to_pads_o.pad_pwm7.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM2: begin
          mux_to_pads_o.pad_pwm7.chip2pad = port_signals_soc2pad_i.pwm.pwm2_i;
          mux_to_pads_o.pad_pwm7.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM3: begin
          mux_to_pads_o.pad_pwm7.chip2pad = port_signals_soc2pad_i.pwm.pwm3_i;
          mux_to_pads_o.pad_pwm7.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM4: begin
          mux_to_pads_o.pad_pwm7.chip2pad = port_signals_soc2pad_i.pwm.pwm4_i;
          mux_to_pads_o.pad_pwm7.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM5: begin
          mux_to_pads_o.pad_pwm7.chip2pad = port_signals_soc2pad_i.pwm.pwm5_i;
          mux_to_pads_o.pad_pwm7.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM6: begin
          mux_to_pads_o.pad_pwm7.chip2pad = port_signals_soc2pad_i.pwm.pwm6_i;
          mux_to_pads_o.pad_pwm7.oen = 1'b0;
       end
       PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM7: begin
          mux_to_pads_o.pad_pwm7.chip2pad = port_signals_soc2pad_i.pwm.pwm7_i;
          mux_to_pads_o.pad_pwm7.oen = 1'b0;
       end
       default: begin
         mux_to_pads_o.pad_pwm7.chip2pad = s_reg2hw.pad_pwm7_cfg.chip2pad.q;
         mux_to_pads_o.pad_pwm7.oen = s_reg2hw.pad_pwm7_cfg.oen.q;
       end
     endcase
   end // always_comb


  // Pad -> SoC Multiplex Logic
  // Port Group i2c0

  // Port Signal sda_o
  logic [14:0] port_mux_sel_i2c0_sda_o_req;
  logic [PORT_MUX_GROUP_MX_A_SEL_WIDTH-1:0] port_mux_sel_i2c0_sda_o_arbitrated;
  logic port_mux_sel_i2c0_sda_o_no_connection;

   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00] = s_reg2hw.pad_io_a_00_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01] = s_reg2hw.pad_io_a_01_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02] = s_reg2hw.pad_io_a_02_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03] = s_reg2hw.pad_io_a_03_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04] = s_reg2hw.pad_io_a_04_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05] = s_reg2hw.pad_io_a_05_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06] = s_reg2hw.pad_io_a_06_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07] = s_reg2hw.pad_io_a_07_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08] = s_reg2hw.pad_io_a_08_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09] = s_reg2hw.pad_io_a_09_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10] = s_reg2hw.pad_io_a_10_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11] = s_reg2hw.pad_io_a_11_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12] = s_reg2hw.pad_io_a_12_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13] = s_reg2hw.pad_io_a_13_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14] = s_reg2hw.pad_io_a_14_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_i2c0_sda_o_arbiter (
     .in_i(port_mux_sel_i2c0_sda_o_req),
     .cnt_o(port_mux_sel_i2c0_sda_o_arbitrated),
     .empty_o(port_mux_sel_i2c0_sda_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_i2c0_sda_o_no_connection) begin
        port_signals_pad2soc_o.i2c0.sda_o = 1'b1;
     end else begin
        unique case (port_mux_sel_i2c0_sda_o_arbitrated)
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14: begin
            port_signals_pad2soc_o.i2c0.sda_o = pads_to_mux_i.pad_io_a_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.i2c0.sda_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal scl_o
  logic [14:0] port_mux_sel_i2c0_scl_o_req;
  logic [PORT_MUX_GROUP_MX_A_SEL_WIDTH-1:0] port_mux_sel_i2c0_scl_o_arbitrated;
  logic port_mux_sel_i2c0_scl_o_no_connection;

   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00] = s_reg2hw.pad_io_a_00_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01] = s_reg2hw.pad_io_a_01_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02] = s_reg2hw.pad_io_a_02_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03] = s_reg2hw.pad_io_a_03_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04] = s_reg2hw.pad_io_a_04_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05] = s_reg2hw.pad_io_a_05_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06] = s_reg2hw.pad_io_a_06_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07] = s_reg2hw.pad_io_a_07_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08] = s_reg2hw.pad_io_a_08_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09] = s_reg2hw.pad_io_a_09_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10] = s_reg2hw.pad_io_a_10_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11] = s_reg2hw.pad_io_a_11_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12] = s_reg2hw.pad_io_a_12_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13] = s_reg2hw.pad_io_a_13_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c0_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14] = s_reg2hw.pad_io_a_14_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_i2c0_scl_o_arbiter (
     .in_i(port_mux_sel_i2c0_scl_o_req),
     .cnt_o(port_mux_sel_i2c0_scl_o_arbitrated),
     .empty_o(port_mux_sel_i2c0_scl_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_i2c0_scl_o_no_connection) begin
        port_signals_pad2soc_o.i2c0.scl_o = 1'b1;
     end else begin
        unique case (port_mux_sel_i2c0_scl_o_arbitrated)
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14: begin
            port_signals_pad2soc_o.i2c0.scl_o = pads_to_mux_i.pad_io_a_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.i2c0.scl_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group i2c1

  // Port Signal sda_o
  logic [14:0] port_mux_sel_i2c1_sda_o_req;
  logic [PORT_MUX_GROUP_MX_A_SEL_WIDTH-1:0] port_mux_sel_i2c1_sda_o_arbitrated;
  logic port_mux_sel_i2c1_sda_o_no_connection;

   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00] = s_reg2hw.pad_io_a_00_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01] = s_reg2hw.pad_io_a_01_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02] = s_reg2hw.pad_io_a_02_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03] = s_reg2hw.pad_io_a_03_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04] = s_reg2hw.pad_io_a_04_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05] = s_reg2hw.pad_io_a_05_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06] = s_reg2hw.pad_io_a_06_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07] = s_reg2hw.pad_io_a_07_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08] = s_reg2hw.pad_io_a_08_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09] = s_reg2hw.pad_io_a_09_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10] = s_reg2hw.pad_io_a_10_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11] = s_reg2hw.pad_io_a_11_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12] = s_reg2hw.pad_io_a_12_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13] = s_reg2hw.pad_io_a_13_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14] = s_reg2hw.pad_io_a_14_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_i2c1_sda_o_arbiter (
     .in_i(port_mux_sel_i2c1_sda_o_req),
     .cnt_o(port_mux_sel_i2c1_sda_o_arbitrated),
     .empty_o(port_mux_sel_i2c1_sda_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_i2c1_sda_o_no_connection) begin
        port_signals_pad2soc_o.i2c1.sda_o = 1'b1;
     end else begin
        unique case (port_mux_sel_i2c1_sda_o_arbitrated)
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14: begin
            port_signals_pad2soc_o.i2c1.sda_o = pads_to_mux_i.pad_io_a_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.i2c1.sda_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal scl_o
  logic [14:0] port_mux_sel_i2c1_scl_o_req;
  logic [PORT_MUX_GROUP_MX_A_SEL_WIDTH-1:0] port_mux_sel_i2c1_scl_o_arbitrated;
  logic port_mux_sel_i2c1_scl_o_no_connection;

   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00] = s_reg2hw.pad_io_a_00_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01] = s_reg2hw.pad_io_a_01_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02] = s_reg2hw.pad_io_a_02_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03] = s_reg2hw.pad_io_a_03_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04] = s_reg2hw.pad_io_a_04_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05] = s_reg2hw.pad_io_a_05_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06] = s_reg2hw.pad_io_a_06_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07] = s_reg2hw.pad_io_a_07_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08] = s_reg2hw.pad_io_a_08_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09] = s_reg2hw.pad_io_a_09_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10] = s_reg2hw.pad_io_a_10_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11] = s_reg2hw.pad_io_a_11_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12] = s_reg2hw.pad_io_a_12_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13] = s_reg2hw.pad_io_a_13_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c1_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14] = s_reg2hw.pad_io_a_14_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_i2c1_scl_o_arbiter (
     .in_i(port_mux_sel_i2c1_scl_o_req),
     .cnt_o(port_mux_sel_i2c1_scl_o_arbitrated),
     .empty_o(port_mux_sel_i2c1_scl_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_i2c1_scl_o_no_connection) begin
        port_signals_pad2soc_o.i2c1.scl_o = 1'b1;
     end else begin
        unique case (port_mux_sel_i2c1_scl_o_arbitrated)
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14: begin
            port_signals_pad2soc_o.i2c1.scl_o = pads_to_mux_i.pad_io_a_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.i2c1.scl_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group i2c2

  // Port Signal sda_o
  logic [14:0] port_mux_sel_i2c2_sda_o_req;
  logic [PORT_MUX_GROUP_MX_A_SEL_WIDTH-1:0] port_mux_sel_i2c2_sda_o_arbitrated;
  logic port_mux_sel_i2c2_sda_o_no_connection;

   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00] = s_reg2hw.pad_io_a_00_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01] = s_reg2hw.pad_io_a_01_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02] = s_reg2hw.pad_io_a_02_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03] = s_reg2hw.pad_io_a_03_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04] = s_reg2hw.pad_io_a_04_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05] = s_reg2hw.pad_io_a_05_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06] = s_reg2hw.pad_io_a_06_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07] = s_reg2hw.pad_io_a_07_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08] = s_reg2hw.pad_io_a_08_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09] = s_reg2hw.pad_io_a_09_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10] = s_reg2hw.pad_io_a_10_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11] = s_reg2hw.pad_io_a_11_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12] = s_reg2hw.pad_io_a_12_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13] = s_reg2hw.pad_io_a_13_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_sda_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14] = s_reg2hw.pad_io_a_14_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_i2c2_sda_o_arbiter (
     .in_i(port_mux_sel_i2c2_sda_o_req),
     .cnt_o(port_mux_sel_i2c2_sda_o_arbitrated),
     .empty_o(port_mux_sel_i2c2_sda_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_i2c2_sda_o_no_connection) begin
        port_signals_pad2soc_o.i2c2.sda_o = 1'b1;
     end else begin
        unique case (port_mux_sel_i2c2_sda_o_arbitrated)
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14: begin
            port_signals_pad2soc_o.i2c2.sda_o = pads_to_mux_i.pad_io_a_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.i2c2.sda_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal scl_o
  logic [14:0] port_mux_sel_i2c2_scl_o_req;
  logic [PORT_MUX_GROUP_MX_A_SEL_WIDTH-1:0] port_mux_sel_i2c2_scl_o_arbitrated;
  logic port_mux_sel_i2c2_scl_o_no_connection;

   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00] = s_reg2hw.pad_io_a_00_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01] = s_reg2hw.pad_io_a_01_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02] = s_reg2hw.pad_io_a_02_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03] = s_reg2hw.pad_io_a_03_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04] = s_reg2hw.pad_io_a_04_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05] = s_reg2hw.pad_io_a_05_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06] = s_reg2hw.pad_io_a_06_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07] = s_reg2hw.pad_io_a_07_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08] = s_reg2hw.pad_io_a_08_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09] = s_reg2hw.pad_io_a_09_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10] = s_reg2hw.pad_io_a_10_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11] = s_reg2hw.pad_io_a_11_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12] = s_reg2hw.pad_io_a_12_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13] = s_reg2hw.pad_io_a_13_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c2_scl_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14] = s_reg2hw.pad_io_a_14_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_i2c2_scl_o_arbiter (
     .in_i(port_mux_sel_i2c2_scl_o_req),
     .cnt_o(port_mux_sel_i2c2_scl_o_arbitrated),
     .empty_o(port_mux_sel_i2c2_scl_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_i2c2_scl_o_no_connection) begin
        port_signals_pad2soc_o.i2c2.scl_o = 1'b1;
     end else begin
        unique case (port_mux_sel_i2c2_scl_o_arbitrated)
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14: begin
            port_signals_pad2soc_o.i2c2.scl_o = pads_to_mux_i.pad_io_a_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.i2c2.scl_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group spi0



  // Port Signal sd1_o
  logic [14:0] port_mux_sel_spi0_sd1_o_req;
  logic [PORT_MUX_GROUP_MX_A_SEL_WIDTH-1:0] port_mux_sel_spi0_sd1_o_arbitrated;
  logic port_mux_sel_spi0_sd1_o_no_connection;

   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00] = s_reg2hw.pad_io_a_00_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01] = s_reg2hw.pad_io_a_01_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02] = s_reg2hw.pad_io_a_02_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03] = s_reg2hw.pad_io_a_03_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04] = s_reg2hw.pad_io_a_04_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05] = s_reg2hw.pad_io_a_05_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06] = s_reg2hw.pad_io_a_06_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07] = s_reg2hw.pad_io_a_07_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08] = s_reg2hw.pad_io_a_08_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09] = s_reg2hw.pad_io_a_09_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10] = s_reg2hw.pad_io_a_10_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11] = s_reg2hw.pad_io_a_11_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12] = s_reg2hw.pad_io_a_12_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13] = s_reg2hw.pad_io_a_13_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi0_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14] = s_reg2hw.pad_io_a_14_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_spi0_sd1_o_arbiter (
     .in_i(port_mux_sel_spi0_sd1_o_req),
     .cnt_o(port_mux_sel_spi0_sd1_o_arbitrated),
     .empty_o(port_mux_sel_spi0_sd1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_spi0_sd1_o_no_connection) begin
        port_signals_pad2soc_o.spi0.sd1_o = 1'b0;
     end else begin
        unique case (port_mux_sel_spi0_sd1_o_arbitrated)
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14: begin
            port_signals_pad2soc_o.spi0.sd1_o = pads_to_mux_i.pad_io_a_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.spi0.sd1_o = 1'b0;
          end
       endcase
     end
   end


  // Port Group spi1



  // Port Signal sd1_o
  logic [14:0] port_mux_sel_spi1_sd1_o_req;
  logic [PORT_MUX_GROUP_MX_A_SEL_WIDTH-1:0] port_mux_sel_spi1_sd1_o_arbitrated;
  logic port_mux_sel_spi1_sd1_o_no_connection;

   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00] = s_reg2hw.pad_io_a_00_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01] = s_reg2hw.pad_io_a_01_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02] = s_reg2hw.pad_io_a_02_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03] = s_reg2hw.pad_io_a_03_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04] = s_reg2hw.pad_io_a_04_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05] = s_reg2hw.pad_io_a_05_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06] = s_reg2hw.pad_io_a_06_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07] = s_reg2hw.pad_io_a_07_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08] = s_reg2hw.pad_io_a_08_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09] = s_reg2hw.pad_io_a_09_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10] = s_reg2hw.pad_io_a_10_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11] = s_reg2hw.pad_io_a_11_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12] = s_reg2hw.pad_io_a_12_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13] = s_reg2hw.pad_io_a_13_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi1_sd1_o_req[PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14] = s_reg2hw.pad_io_a_14_mux_sel.q == PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_spi1_sd1_o_arbiter (
     .in_i(port_mux_sel_spi1_sd1_o_req),
     .cnt_o(port_mux_sel_spi1_sd1_o_arbitrated),
     .empty_o(port_mux_sel_spi1_sd1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_spi1_sd1_o_no_connection) begin
        port_signals_pad2soc_o.spi1.sd1_o = 1'b0;
     end else begin
        unique case (port_mux_sel_spi1_sd1_o_arbitrated)
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14: begin
            port_signals_pad2soc_o.spi1.sd1_o = pads_to_mux_i.pad_io_a_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.spi1.sd1_o = 1'b0;
          end
       endcase
     end
   end


  // Port Group spi2



  // Port Signal sd1_o
  logic [19:0] port_mux_sel_spi2_sd1_o_req;
  logic [PORT_MUX_GROUP_MX_B_SEL_WIDTH-1:0] port_mux_sel_spi2_sd1_o_arbitrated;
  logic port_mux_sel_spi2_sd1_o_no_connection;

   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_00] = s_reg2hw.pad_io_b_00_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_01] = s_reg2hw.pad_io_b_01_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_02] = s_reg2hw.pad_io_b_02_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_03] = s_reg2hw.pad_io_b_03_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_04] = s_reg2hw.pad_io_b_04_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_05] = s_reg2hw.pad_io_b_05_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_06] = s_reg2hw.pad_io_b_06_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_07] = s_reg2hw.pad_io_b_07_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_08] = s_reg2hw.pad_io_b_08_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_09] = s_reg2hw.pad_io_b_09_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_10] = s_reg2hw.pad_io_b_10_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_11] = s_reg2hw.pad_io_b_11_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_12] = s_reg2hw.pad_io_b_12_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_13] = s_reg2hw.pad_io_b_13_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_14] = s_reg2hw.pad_io_b_14_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_15] = s_reg2hw.pad_io_b_15_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_16] = s_reg2hw.pad_io_b_16_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_17] = s_reg2hw.pad_io_b_17_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_18] = s_reg2hw.pad_io_b_18_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi2_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_19] = s_reg2hw.pad_io_b_19_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(20),
     .MODE(1'b0)
   ) i_port_muxsel_spi2_sd1_o_arbiter (
     .in_i(port_mux_sel_spi2_sd1_o_req),
     .cnt_o(port_mux_sel_spi2_sd1_o_arbitrated),
     .empty_o(port_mux_sel_spi2_sd1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_spi2_sd1_o_no_connection) begin
        port_signals_pad2soc_o.spi2.sd1_o = 1'b0;
     end else begin
        unique case (port_mux_sel_spi2_sd1_o_arbitrated)
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_00: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_01: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_02: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_03: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_04: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_05: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_06: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_07: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_08: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_09: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_10: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_11: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_12: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_13: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_14: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_14.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_15: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_15.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_16: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_16.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_17: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_17.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_18: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_18.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_19: begin
            port_signals_pad2soc_o.spi2.sd1_o = pads_to_mux_i.pad_io_b_19.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.spi2.sd1_o = 1'b0;
          end
       endcase
     end
   end


  // Port Group spi3



  // Port Signal sd1_o
  logic [19:0] port_mux_sel_spi3_sd1_o_req;
  logic [PORT_MUX_GROUP_MX_B_SEL_WIDTH-1:0] port_mux_sel_spi3_sd1_o_arbitrated;
  logic port_mux_sel_spi3_sd1_o_no_connection;

   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_00] = s_reg2hw.pad_io_b_00_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_01] = s_reg2hw.pad_io_b_01_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_02] = s_reg2hw.pad_io_b_02_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_03] = s_reg2hw.pad_io_b_03_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_04] = s_reg2hw.pad_io_b_04_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_05] = s_reg2hw.pad_io_b_05_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_06] = s_reg2hw.pad_io_b_06_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_07] = s_reg2hw.pad_io_b_07_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_08] = s_reg2hw.pad_io_b_08_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_09] = s_reg2hw.pad_io_b_09_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_10] = s_reg2hw.pad_io_b_10_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_11] = s_reg2hw.pad_io_b_11_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_12] = s_reg2hw.pad_io_b_12_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_13] = s_reg2hw.pad_io_b_13_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_14] = s_reg2hw.pad_io_b_14_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_15] = s_reg2hw.pad_io_b_15_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_16] = s_reg2hw.pad_io_b_16_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_17] = s_reg2hw.pad_io_b_17_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_18] = s_reg2hw.pad_io_b_18_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi3_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_19] = s_reg2hw.pad_io_b_19_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(20),
     .MODE(1'b0)
   ) i_port_muxsel_spi3_sd1_o_arbiter (
     .in_i(port_mux_sel_spi3_sd1_o_req),
     .cnt_o(port_mux_sel_spi3_sd1_o_arbitrated),
     .empty_o(port_mux_sel_spi3_sd1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_spi3_sd1_o_no_connection) begin
        port_signals_pad2soc_o.spi3.sd1_o = 1'b0;
     end else begin
        unique case (port_mux_sel_spi3_sd1_o_arbitrated)
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_00: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_01: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_02: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_03: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_04: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_05: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_06: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_07: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_08: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_09: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_10: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_11: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_12: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_13: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_14: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_14.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_15: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_15.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_16: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_16.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_17: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_17.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_18: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_18.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_19: begin
            port_signals_pad2soc_o.spi3.sd1_o = pads_to_mux_i.pad_io_b_19.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.spi3.sd1_o = 1'b0;
          end
       endcase
     end
   end


  // Port Group spi4



  // Port Signal sd1_o
  logic [19:0] port_mux_sel_spi4_sd1_o_req;
  logic [PORT_MUX_GROUP_MX_B_SEL_WIDTH-1:0] port_mux_sel_spi4_sd1_o_arbitrated;
  logic port_mux_sel_spi4_sd1_o_no_connection;

   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_00] = s_reg2hw.pad_io_b_00_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_01] = s_reg2hw.pad_io_b_01_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_02] = s_reg2hw.pad_io_b_02_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_03] = s_reg2hw.pad_io_b_03_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_04] = s_reg2hw.pad_io_b_04_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_05] = s_reg2hw.pad_io_b_05_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_06] = s_reg2hw.pad_io_b_06_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_07] = s_reg2hw.pad_io_b_07_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_08] = s_reg2hw.pad_io_b_08_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_09] = s_reg2hw.pad_io_b_09_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_10] = s_reg2hw.pad_io_b_10_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_11] = s_reg2hw.pad_io_b_11_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_12] = s_reg2hw.pad_io_b_12_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_13] = s_reg2hw.pad_io_b_13_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_14] = s_reg2hw.pad_io_b_14_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_15] = s_reg2hw.pad_io_b_15_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_16] = s_reg2hw.pad_io_b_16_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_17] = s_reg2hw.pad_io_b_17_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_18] = s_reg2hw.pad_io_b_18_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi4_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_19] = s_reg2hw.pad_io_b_19_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(20),
     .MODE(1'b0)
   ) i_port_muxsel_spi4_sd1_o_arbiter (
     .in_i(port_mux_sel_spi4_sd1_o_req),
     .cnt_o(port_mux_sel_spi4_sd1_o_arbitrated),
     .empty_o(port_mux_sel_spi4_sd1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_spi4_sd1_o_no_connection) begin
        port_signals_pad2soc_o.spi4.sd1_o = 1'b0;
     end else begin
        unique case (port_mux_sel_spi4_sd1_o_arbitrated)
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_00: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_01: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_02: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_03: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_04: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_05: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_06: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_07: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_08: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_09: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_10: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_11: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_12: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_13: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_14: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_14.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_15: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_15.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_16: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_16.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_17: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_17.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_18: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_18.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_19: begin
            port_signals_pad2soc_o.spi4.sd1_o = pads_to_mux_i.pad_io_b_19.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.spi4.sd1_o = 1'b0;
          end
       endcase
     end
   end


  // Port Group spi5



  // Port Signal sd1_o
  logic [19:0] port_mux_sel_spi5_sd1_o_req;
  logic [PORT_MUX_GROUP_MX_B_SEL_WIDTH-1:0] port_mux_sel_spi5_sd1_o_arbitrated;
  logic port_mux_sel_spi5_sd1_o_no_connection;

   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_00] = s_reg2hw.pad_io_b_00_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_01] = s_reg2hw.pad_io_b_01_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_02] = s_reg2hw.pad_io_b_02_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_03] = s_reg2hw.pad_io_b_03_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_04] = s_reg2hw.pad_io_b_04_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_05] = s_reg2hw.pad_io_b_05_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_06] = s_reg2hw.pad_io_b_06_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_07] = s_reg2hw.pad_io_b_07_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_08] = s_reg2hw.pad_io_b_08_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_09] = s_reg2hw.pad_io_b_09_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_10] = s_reg2hw.pad_io_b_10_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_11] = s_reg2hw.pad_io_b_11_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_12] = s_reg2hw.pad_io_b_12_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_13] = s_reg2hw.pad_io_b_13_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_14] = s_reg2hw.pad_io_b_14_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_15] = s_reg2hw.pad_io_b_15_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_16] = s_reg2hw.pad_io_b_16_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_17] = s_reg2hw.pad_io_b_17_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_18] = s_reg2hw.pad_io_b_18_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi5_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_19] = s_reg2hw.pad_io_b_19_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(20),
     .MODE(1'b0)
   ) i_port_muxsel_spi5_sd1_o_arbiter (
     .in_i(port_mux_sel_spi5_sd1_o_req),
     .cnt_o(port_mux_sel_spi5_sd1_o_arbitrated),
     .empty_o(port_mux_sel_spi5_sd1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_spi5_sd1_o_no_connection) begin
        port_signals_pad2soc_o.spi5.sd1_o = 1'b0;
     end else begin
        unique case (port_mux_sel_spi5_sd1_o_arbitrated)
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_00: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_01: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_02: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_03: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_04: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_05: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_06: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_07: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_08: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_09: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_10: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_11: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_12: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_13: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_14: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_14.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_15: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_15.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_16: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_16.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_17: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_17.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_18: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_18.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_19: begin
            port_signals_pad2soc_o.spi5.sd1_o = pads_to_mux_i.pad_io_b_19.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.spi5.sd1_o = 1'b0;
          end
       endcase
     end
   end


  // Port Group spi6



  // Port Signal sd1_o
  logic [19:0] port_mux_sel_spi6_sd1_o_req;
  logic [PORT_MUX_GROUP_MX_B_SEL_WIDTH-1:0] port_mux_sel_spi6_sd1_o_arbitrated;
  logic port_mux_sel_spi6_sd1_o_no_connection;

   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_00] = s_reg2hw.pad_io_b_00_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_01] = s_reg2hw.pad_io_b_01_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_02] = s_reg2hw.pad_io_b_02_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_03] = s_reg2hw.pad_io_b_03_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_04] = s_reg2hw.pad_io_b_04_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_05] = s_reg2hw.pad_io_b_05_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_06] = s_reg2hw.pad_io_b_06_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_07] = s_reg2hw.pad_io_b_07_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_08] = s_reg2hw.pad_io_b_08_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_09] = s_reg2hw.pad_io_b_09_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_10] = s_reg2hw.pad_io_b_10_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_11] = s_reg2hw.pad_io_b_11_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_12] = s_reg2hw.pad_io_b_12_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_13] = s_reg2hw.pad_io_b_13_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_14] = s_reg2hw.pad_io_b_14_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_15] = s_reg2hw.pad_io_b_15_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_16] = s_reg2hw.pad_io_b_16_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_17] = s_reg2hw.pad_io_b_17_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_18] = s_reg2hw.pad_io_b_18_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi6_sd1_o_req[PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_19] = s_reg2hw.pad_io_b_19_mux_sel.q == PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(20),
     .MODE(1'b0)
   ) i_port_muxsel_spi6_sd1_o_arbiter (
     .in_i(port_mux_sel_spi6_sd1_o_req),
     .cnt_o(port_mux_sel_spi6_sd1_o_arbitrated),
     .empty_o(port_mux_sel_spi6_sd1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_spi6_sd1_o_no_connection) begin
        port_signals_pad2soc_o.spi6.sd1_o = 1'b0;
     end else begin
        unique case (port_mux_sel_spi6_sd1_o_arbitrated)
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_00: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_01: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_02: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_03: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_04: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_05: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_06: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_07: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_08: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_09: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_10: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_11: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_12: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_13: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_14: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_14.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_15: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_15.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_16: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_16.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_17: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_17.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_18: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_18.pad2chip;
          end
          PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_19: begin
            port_signals_pad2soc_o.spi6.sd1_o = pads_to_mux_i.pad_io_b_19.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.spi6.sd1_o = 1'b0;
          end
       endcase
     end
   end


  // Port Group qspi



  // Port Signal sd0_o
  logic [13:0] port_mux_sel_qspi_sd0_o_req;
  logic [PORT_MUX_GROUP_MX_C_SEL_WIDTH-1:0] port_mux_sel_qspi_sd0_o_arbitrated;
  logic port_mux_sel_qspi_sd0_o_no_connection;

   assign port_mux_sel_qspi_sd0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00] = s_reg2hw.pad_io_c_00_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01] = s_reg2hw.pad_io_c_01_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02] = s_reg2hw.pad_io_c_02_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03] = s_reg2hw.pad_io_c_03_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04] = s_reg2hw.pad_io_c_04_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05] = s_reg2hw.pad_io_c_05_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06] = s_reg2hw.pad_io_c_06_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07] = s_reg2hw.pad_io_c_07_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08] = s_reg2hw.pad_io_c_08_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09] = s_reg2hw.pad_io_c_09_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10] = s_reg2hw.pad_io_c_10_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11] = s_reg2hw.pad_io_c_11_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12] = s_reg2hw.pad_io_c_12_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13] = s_reg2hw.pad_io_c_13_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(14),
     .MODE(1'b0)
   ) i_port_muxsel_qspi_sd0_o_arbiter (
     .in_i(port_mux_sel_qspi_sd0_o_req),
     .cnt_o(port_mux_sel_qspi_sd0_o_arbitrated),
     .empty_o(port_mux_sel_qspi_sd0_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_qspi_sd0_o_no_connection) begin
        port_signals_pad2soc_o.qspi.sd0_o = 1'b0;
     end else begin
        unique case (port_mux_sel_qspi_sd0_o_arbitrated)
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00: begin
            port_signals_pad2soc_o.qspi.sd0_o = pads_to_mux_i.pad_io_c_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01: begin
            port_signals_pad2soc_o.qspi.sd0_o = pads_to_mux_i.pad_io_c_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02: begin
            port_signals_pad2soc_o.qspi.sd0_o = pads_to_mux_i.pad_io_c_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03: begin
            port_signals_pad2soc_o.qspi.sd0_o = pads_to_mux_i.pad_io_c_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04: begin
            port_signals_pad2soc_o.qspi.sd0_o = pads_to_mux_i.pad_io_c_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05: begin
            port_signals_pad2soc_o.qspi.sd0_o = pads_to_mux_i.pad_io_c_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06: begin
            port_signals_pad2soc_o.qspi.sd0_o = pads_to_mux_i.pad_io_c_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07: begin
            port_signals_pad2soc_o.qspi.sd0_o = pads_to_mux_i.pad_io_c_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08: begin
            port_signals_pad2soc_o.qspi.sd0_o = pads_to_mux_i.pad_io_c_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09: begin
            port_signals_pad2soc_o.qspi.sd0_o = pads_to_mux_i.pad_io_c_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10: begin
            port_signals_pad2soc_o.qspi.sd0_o = pads_to_mux_i.pad_io_c_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11: begin
            port_signals_pad2soc_o.qspi.sd0_o = pads_to_mux_i.pad_io_c_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12: begin
            port_signals_pad2soc_o.qspi.sd0_o = pads_to_mux_i.pad_io_c_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13: begin
            port_signals_pad2soc_o.qspi.sd0_o = pads_to_mux_i.pad_io_c_13.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.qspi.sd0_o = 1'b0;
          end
       endcase
     end
   end


  // Port Signal sd1_o
  logic [13:0] port_mux_sel_qspi_sd1_o_req;
  logic [PORT_MUX_GROUP_MX_C_SEL_WIDTH-1:0] port_mux_sel_qspi_sd1_o_arbitrated;
  logic port_mux_sel_qspi_sd1_o_no_connection;

   assign port_mux_sel_qspi_sd1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00] = s_reg2hw.pad_io_c_00_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01] = s_reg2hw.pad_io_c_01_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02] = s_reg2hw.pad_io_c_02_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03] = s_reg2hw.pad_io_c_03_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04] = s_reg2hw.pad_io_c_04_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05] = s_reg2hw.pad_io_c_05_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06] = s_reg2hw.pad_io_c_06_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07] = s_reg2hw.pad_io_c_07_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08] = s_reg2hw.pad_io_c_08_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09] = s_reg2hw.pad_io_c_09_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10] = s_reg2hw.pad_io_c_10_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11] = s_reg2hw.pad_io_c_11_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12] = s_reg2hw.pad_io_c_12_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13] = s_reg2hw.pad_io_c_13_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(14),
     .MODE(1'b0)
   ) i_port_muxsel_qspi_sd1_o_arbiter (
     .in_i(port_mux_sel_qspi_sd1_o_req),
     .cnt_o(port_mux_sel_qspi_sd1_o_arbitrated),
     .empty_o(port_mux_sel_qspi_sd1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_qspi_sd1_o_no_connection) begin
        port_signals_pad2soc_o.qspi.sd1_o = 1'b0;
     end else begin
        unique case (port_mux_sel_qspi_sd1_o_arbitrated)
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00: begin
            port_signals_pad2soc_o.qspi.sd1_o = pads_to_mux_i.pad_io_c_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01: begin
            port_signals_pad2soc_o.qspi.sd1_o = pads_to_mux_i.pad_io_c_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02: begin
            port_signals_pad2soc_o.qspi.sd1_o = pads_to_mux_i.pad_io_c_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03: begin
            port_signals_pad2soc_o.qspi.sd1_o = pads_to_mux_i.pad_io_c_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04: begin
            port_signals_pad2soc_o.qspi.sd1_o = pads_to_mux_i.pad_io_c_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05: begin
            port_signals_pad2soc_o.qspi.sd1_o = pads_to_mux_i.pad_io_c_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06: begin
            port_signals_pad2soc_o.qspi.sd1_o = pads_to_mux_i.pad_io_c_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07: begin
            port_signals_pad2soc_o.qspi.sd1_o = pads_to_mux_i.pad_io_c_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08: begin
            port_signals_pad2soc_o.qspi.sd1_o = pads_to_mux_i.pad_io_c_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09: begin
            port_signals_pad2soc_o.qspi.sd1_o = pads_to_mux_i.pad_io_c_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10: begin
            port_signals_pad2soc_o.qspi.sd1_o = pads_to_mux_i.pad_io_c_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11: begin
            port_signals_pad2soc_o.qspi.sd1_o = pads_to_mux_i.pad_io_c_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12: begin
            port_signals_pad2soc_o.qspi.sd1_o = pads_to_mux_i.pad_io_c_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13: begin
            port_signals_pad2soc_o.qspi.sd1_o = pads_to_mux_i.pad_io_c_13.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.qspi.sd1_o = 1'b0;
          end
       endcase
     end
   end


  // Port Signal sd2_o
  logic [13:0] port_mux_sel_qspi_sd2_o_req;
  logic [PORT_MUX_GROUP_MX_C_SEL_WIDTH-1:0] port_mux_sel_qspi_sd2_o_arbitrated;
  logic port_mux_sel_qspi_sd2_o_no_connection;

   assign port_mux_sel_qspi_sd2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00] = s_reg2hw.pad_io_c_00_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01] = s_reg2hw.pad_io_c_01_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02] = s_reg2hw.pad_io_c_02_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03] = s_reg2hw.pad_io_c_03_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04] = s_reg2hw.pad_io_c_04_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05] = s_reg2hw.pad_io_c_05_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06] = s_reg2hw.pad_io_c_06_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07] = s_reg2hw.pad_io_c_07_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08] = s_reg2hw.pad_io_c_08_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09] = s_reg2hw.pad_io_c_09_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10] = s_reg2hw.pad_io_c_10_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11] = s_reg2hw.pad_io_c_11_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12] = s_reg2hw.pad_io_c_12_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13] = s_reg2hw.pad_io_c_13_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(14),
     .MODE(1'b0)
   ) i_port_muxsel_qspi_sd2_o_arbiter (
     .in_i(port_mux_sel_qspi_sd2_o_req),
     .cnt_o(port_mux_sel_qspi_sd2_o_arbitrated),
     .empty_o(port_mux_sel_qspi_sd2_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_qspi_sd2_o_no_connection) begin
        port_signals_pad2soc_o.qspi.sd2_o = 1'b0;
     end else begin
        unique case (port_mux_sel_qspi_sd2_o_arbitrated)
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00: begin
            port_signals_pad2soc_o.qspi.sd2_o = pads_to_mux_i.pad_io_c_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01: begin
            port_signals_pad2soc_o.qspi.sd2_o = pads_to_mux_i.pad_io_c_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02: begin
            port_signals_pad2soc_o.qspi.sd2_o = pads_to_mux_i.pad_io_c_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03: begin
            port_signals_pad2soc_o.qspi.sd2_o = pads_to_mux_i.pad_io_c_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04: begin
            port_signals_pad2soc_o.qspi.sd2_o = pads_to_mux_i.pad_io_c_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05: begin
            port_signals_pad2soc_o.qspi.sd2_o = pads_to_mux_i.pad_io_c_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06: begin
            port_signals_pad2soc_o.qspi.sd2_o = pads_to_mux_i.pad_io_c_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07: begin
            port_signals_pad2soc_o.qspi.sd2_o = pads_to_mux_i.pad_io_c_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08: begin
            port_signals_pad2soc_o.qspi.sd2_o = pads_to_mux_i.pad_io_c_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09: begin
            port_signals_pad2soc_o.qspi.sd2_o = pads_to_mux_i.pad_io_c_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10: begin
            port_signals_pad2soc_o.qspi.sd2_o = pads_to_mux_i.pad_io_c_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11: begin
            port_signals_pad2soc_o.qspi.sd2_o = pads_to_mux_i.pad_io_c_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12: begin
            port_signals_pad2soc_o.qspi.sd2_o = pads_to_mux_i.pad_io_c_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13: begin
            port_signals_pad2soc_o.qspi.sd2_o = pads_to_mux_i.pad_io_c_13.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.qspi.sd2_o = 1'b0;
          end
       endcase
     end
   end


  // Port Signal sd3_o
  logic [13:0] port_mux_sel_qspi_sd3_o_req;
  logic [PORT_MUX_GROUP_MX_C_SEL_WIDTH-1:0] port_mux_sel_qspi_sd3_o_arbitrated;
  logic port_mux_sel_qspi_sd3_o_no_connection;

   assign port_mux_sel_qspi_sd3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00] = s_reg2hw.pad_io_c_00_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01] = s_reg2hw.pad_io_c_01_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02] = s_reg2hw.pad_io_c_02_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03] = s_reg2hw.pad_io_c_03_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04] = s_reg2hw.pad_io_c_04_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05] = s_reg2hw.pad_io_c_05_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06] = s_reg2hw.pad_io_c_06_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07] = s_reg2hw.pad_io_c_07_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08] = s_reg2hw.pad_io_c_08_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09] = s_reg2hw.pad_io_c_09_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10] = s_reg2hw.pad_io_c_10_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11] = s_reg2hw.pad_io_c_11_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12] = s_reg2hw.pad_io_c_12_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_qspi_sd3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13] = s_reg2hw.pad_io_c_13_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(14),
     .MODE(1'b0)
   ) i_port_muxsel_qspi_sd3_o_arbiter (
     .in_i(port_mux_sel_qspi_sd3_o_req),
     .cnt_o(port_mux_sel_qspi_sd3_o_arbitrated),
     .empty_o(port_mux_sel_qspi_sd3_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_qspi_sd3_o_no_connection) begin
        port_signals_pad2soc_o.qspi.sd3_o = 1'b0;
     end else begin
        unique case (port_mux_sel_qspi_sd3_o_arbitrated)
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00: begin
            port_signals_pad2soc_o.qspi.sd3_o = pads_to_mux_i.pad_io_c_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01: begin
            port_signals_pad2soc_o.qspi.sd3_o = pads_to_mux_i.pad_io_c_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02: begin
            port_signals_pad2soc_o.qspi.sd3_o = pads_to_mux_i.pad_io_c_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03: begin
            port_signals_pad2soc_o.qspi.sd3_o = pads_to_mux_i.pad_io_c_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04: begin
            port_signals_pad2soc_o.qspi.sd3_o = pads_to_mux_i.pad_io_c_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05: begin
            port_signals_pad2soc_o.qspi.sd3_o = pads_to_mux_i.pad_io_c_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06: begin
            port_signals_pad2soc_o.qspi.sd3_o = pads_to_mux_i.pad_io_c_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07: begin
            port_signals_pad2soc_o.qspi.sd3_o = pads_to_mux_i.pad_io_c_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08: begin
            port_signals_pad2soc_o.qspi.sd3_o = pads_to_mux_i.pad_io_c_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09: begin
            port_signals_pad2soc_o.qspi.sd3_o = pads_to_mux_i.pad_io_c_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10: begin
            port_signals_pad2soc_o.qspi.sd3_o = pads_to_mux_i.pad_io_c_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11: begin
            port_signals_pad2soc_o.qspi.sd3_o = pads_to_mux_i.pad_io_c_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12: begin
            port_signals_pad2soc_o.qspi.sd3_o = pads_to_mux_i.pad_io_c_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13: begin
            port_signals_pad2soc_o.qspi.sd3_o = pads_to_mux_i.pad_io_c_13.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.qspi.sd3_o = 1'b0;
          end
       endcase
     end
   end

  // Port Group sdio0


  // Port Signal cmd_o
  logic [13:0] port_mux_sel_sdio0_cmd_o_req;
  logic [PORT_MUX_GROUP_MX_C_SEL_WIDTH-1:0] port_mux_sel_sdio0_cmd_o_arbitrated;
  logic port_mux_sel_sdio0_cmd_o_no_connection;

   assign port_mux_sel_sdio0_cmd_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00] = s_reg2hw.pad_io_c_00_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_cmd_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01] = s_reg2hw.pad_io_c_01_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_cmd_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02] = s_reg2hw.pad_io_c_02_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_cmd_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03] = s_reg2hw.pad_io_c_03_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_cmd_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04] = s_reg2hw.pad_io_c_04_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_cmd_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05] = s_reg2hw.pad_io_c_05_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_cmd_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06] = s_reg2hw.pad_io_c_06_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_cmd_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07] = s_reg2hw.pad_io_c_07_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_cmd_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08] = s_reg2hw.pad_io_c_08_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_cmd_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09] = s_reg2hw.pad_io_c_09_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_cmd_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10] = s_reg2hw.pad_io_c_10_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_cmd_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11] = s_reg2hw.pad_io_c_11_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_cmd_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12] = s_reg2hw.pad_io_c_12_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_cmd_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13] = s_reg2hw.pad_io_c_13_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(14),
     .MODE(1'b0)
   ) i_port_muxsel_sdio0_cmd_o_arbiter (
     .in_i(port_mux_sel_sdio0_cmd_o_req),
     .cnt_o(port_mux_sel_sdio0_cmd_o_arbitrated),
     .empty_o(port_mux_sel_sdio0_cmd_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_sdio0_cmd_o_no_connection) begin
        port_signals_pad2soc_o.sdio0.cmd_o = 1'b1;
     end else begin
        unique case (port_mux_sel_sdio0_cmd_o_arbitrated)
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00: begin
            port_signals_pad2soc_o.sdio0.cmd_o = pads_to_mux_i.pad_io_c_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01: begin
            port_signals_pad2soc_o.sdio0.cmd_o = pads_to_mux_i.pad_io_c_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02: begin
            port_signals_pad2soc_o.sdio0.cmd_o = pads_to_mux_i.pad_io_c_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03: begin
            port_signals_pad2soc_o.sdio0.cmd_o = pads_to_mux_i.pad_io_c_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04: begin
            port_signals_pad2soc_o.sdio0.cmd_o = pads_to_mux_i.pad_io_c_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05: begin
            port_signals_pad2soc_o.sdio0.cmd_o = pads_to_mux_i.pad_io_c_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06: begin
            port_signals_pad2soc_o.sdio0.cmd_o = pads_to_mux_i.pad_io_c_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07: begin
            port_signals_pad2soc_o.sdio0.cmd_o = pads_to_mux_i.pad_io_c_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08: begin
            port_signals_pad2soc_o.sdio0.cmd_o = pads_to_mux_i.pad_io_c_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09: begin
            port_signals_pad2soc_o.sdio0.cmd_o = pads_to_mux_i.pad_io_c_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10: begin
            port_signals_pad2soc_o.sdio0.cmd_o = pads_to_mux_i.pad_io_c_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11: begin
            port_signals_pad2soc_o.sdio0.cmd_o = pads_to_mux_i.pad_io_c_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12: begin
            port_signals_pad2soc_o.sdio0.cmd_o = pads_to_mux_i.pad_io_c_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13: begin
            port_signals_pad2soc_o.sdio0.cmd_o = pads_to_mux_i.pad_io_c_13.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.sdio0.cmd_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data0_o
  logic [13:0] port_mux_sel_sdio0_data0_o_req;
  logic [PORT_MUX_GROUP_MX_C_SEL_WIDTH-1:0] port_mux_sel_sdio0_data0_o_arbitrated;
  logic port_mux_sel_sdio0_data0_o_no_connection;

   assign port_mux_sel_sdio0_data0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00] = s_reg2hw.pad_io_c_00_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01] = s_reg2hw.pad_io_c_01_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02] = s_reg2hw.pad_io_c_02_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03] = s_reg2hw.pad_io_c_03_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04] = s_reg2hw.pad_io_c_04_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05] = s_reg2hw.pad_io_c_05_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06] = s_reg2hw.pad_io_c_06_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07] = s_reg2hw.pad_io_c_07_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08] = s_reg2hw.pad_io_c_08_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09] = s_reg2hw.pad_io_c_09_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10] = s_reg2hw.pad_io_c_10_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11] = s_reg2hw.pad_io_c_11_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12] = s_reg2hw.pad_io_c_12_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data0_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13] = s_reg2hw.pad_io_c_13_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(14),
     .MODE(1'b0)
   ) i_port_muxsel_sdio0_data0_o_arbiter (
     .in_i(port_mux_sel_sdio0_data0_o_req),
     .cnt_o(port_mux_sel_sdio0_data0_o_arbitrated),
     .empty_o(port_mux_sel_sdio0_data0_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_sdio0_data0_o_no_connection) begin
        port_signals_pad2soc_o.sdio0.data0_o = 1'b1;
     end else begin
        unique case (port_mux_sel_sdio0_data0_o_arbitrated)
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00: begin
            port_signals_pad2soc_o.sdio0.data0_o = pads_to_mux_i.pad_io_c_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01: begin
            port_signals_pad2soc_o.sdio0.data0_o = pads_to_mux_i.pad_io_c_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02: begin
            port_signals_pad2soc_o.sdio0.data0_o = pads_to_mux_i.pad_io_c_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03: begin
            port_signals_pad2soc_o.sdio0.data0_o = pads_to_mux_i.pad_io_c_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04: begin
            port_signals_pad2soc_o.sdio0.data0_o = pads_to_mux_i.pad_io_c_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05: begin
            port_signals_pad2soc_o.sdio0.data0_o = pads_to_mux_i.pad_io_c_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06: begin
            port_signals_pad2soc_o.sdio0.data0_o = pads_to_mux_i.pad_io_c_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07: begin
            port_signals_pad2soc_o.sdio0.data0_o = pads_to_mux_i.pad_io_c_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08: begin
            port_signals_pad2soc_o.sdio0.data0_o = pads_to_mux_i.pad_io_c_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09: begin
            port_signals_pad2soc_o.sdio0.data0_o = pads_to_mux_i.pad_io_c_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10: begin
            port_signals_pad2soc_o.sdio0.data0_o = pads_to_mux_i.pad_io_c_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11: begin
            port_signals_pad2soc_o.sdio0.data0_o = pads_to_mux_i.pad_io_c_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12: begin
            port_signals_pad2soc_o.sdio0.data0_o = pads_to_mux_i.pad_io_c_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13: begin
            port_signals_pad2soc_o.sdio0.data0_o = pads_to_mux_i.pad_io_c_13.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.sdio0.data0_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data1_o
  logic [13:0] port_mux_sel_sdio0_data1_o_req;
  logic [PORT_MUX_GROUP_MX_C_SEL_WIDTH-1:0] port_mux_sel_sdio0_data1_o_arbitrated;
  logic port_mux_sel_sdio0_data1_o_no_connection;

   assign port_mux_sel_sdio0_data1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00] = s_reg2hw.pad_io_c_00_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01] = s_reg2hw.pad_io_c_01_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02] = s_reg2hw.pad_io_c_02_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03] = s_reg2hw.pad_io_c_03_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04] = s_reg2hw.pad_io_c_04_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05] = s_reg2hw.pad_io_c_05_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06] = s_reg2hw.pad_io_c_06_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07] = s_reg2hw.pad_io_c_07_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08] = s_reg2hw.pad_io_c_08_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09] = s_reg2hw.pad_io_c_09_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10] = s_reg2hw.pad_io_c_10_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11] = s_reg2hw.pad_io_c_11_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12] = s_reg2hw.pad_io_c_12_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data1_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13] = s_reg2hw.pad_io_c_13_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(14),
     .MODE(1'b0)
   ) i_port_muxsel_sdio0_data1_o_arbiter (
     .in_i(port_mux_sel_sdio0_data1_o_req),
     .cnt_o(port_mux_sel_sdio0_data1_o_arbitrated),
     .empty_o(port_mux_sel_sdio0_data1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_sdio0_data1_o_no_connection) begin
        port_signals_pad2soc_o.sdio0.data1_o = 1'b1;
     end else begin
        unique case (port_mux_sel_sdio0_data1_o_arbitrated)
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00: begin
            port_signals_pad2soc_o.sdio0.data1_o = pads_to_mux_i.pad_io_c_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01: begin
            port_signals_pad2soc_o.sdio0.data1_o = pads_to_mux_i.pad_io_c_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02: begin
            port_signals_pad2soc_o.sdio0.data1_o = pads_to_mux_i.pad_io_c_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03: begin
            port_signals_pad2soc_o.sdio0.data1_o = pads_to_mux_i.pad_io_c_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04: begin
            port_signals_pad2soc_o.sdio0.data1_o = pads_to_mux_i.pad_io_c_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05: begin
            port_signals_pad2soc_o.sdio0.data1_o = pads_to_mux_i.pad_io_c_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06: begin
            port_signals_pad2soc_o.sdio0.data1_o = pads_to_mux_i.pad_io_c_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07: begin
            port_signals_pad2soc_o.sdio0.data1_o = pads_to_mux_i.pad_io_c_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08: begin
            port_signals_pad2soc_o.sdio0.data1_o = pads_to_mux_i.pad_io_c_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09: begin
            port_signals_pad2soc_o.sdio0.data1_o = pads_to_mux_i.pad_io_c_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10: begin
            port_signals_pad2soc_o.sdio0.data1_o = pads_to_mux_i.pad_io_c_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11: begin
            port_signals_pad2soc_o.sdio0.data1_o = pads_to_mux_i.pad_io_c_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12: begin
            port_signals_pad2soc_o.sdio0.data1_o = pads_to_mux_i.pad_io_c_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13: begin
            port_signals_pad2soc_o.sdio0.data1_o = pads_to_mux_i.pad_io_c_13.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.sdio0.data1_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data2_o
  logic [13:0] port_mux_sel_sdio0_data2_o_req;
  logic [PORT_MUX_GROUP_MX_C_SEL_WIDTH-1:0] port_mux_sel_sdio0_data2_o_arbitrated;
  logic port_mux_sel_sdio0_data2_o_no_connection;

   assign port_mux_sel_sdio0_data2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00] = s_reg2hw.pad_io_c_00_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01] = s_reg2hw.pad_io_c_01_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02] = s_reg2hw.pad_io_c_02_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03] = s_reg2hw.pad_io_c_03_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04] = s_reg2hw.pad_io_c_04_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05] = s_reg2hw.pad_io_c_05_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06] = s_reg2hw.pad_io_c_06_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07] = s_reg2hw.pad_io_c_07_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08] = s_reg2hw.pad_io_c_08_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09] = s_reg2hw.pad_io_c_09_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10] = s_reg2hw.pad_io_c_10_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11] = s_reg2hw.pad_io_c_11_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12] = s_reg2hw.pad_io_c_12_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data2_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13] = s_reg2hw.pad_io_c_13_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(14),
     .MODE(1'b0)
   ) i_port_muxsel_sdio0_data2_o_arbiter (
     .in_i(port_mux_sel_sdio0_data2_o_req),
     .cnt_o(port_mux_sel_sdio0_data2_o_arbitrated),
     .empty_o(port_mux_sel_sdio0_data2_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_sdio0_data2_o_no_connection) begin
        port_signals_pad2soc_o.sdio0.data2_o = 1'b1;
     end else begin
        unique case (port_mux_sel_sdio0_data2_o_arbitrated)
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00: begin
            port_signals_pad2soc_o.sdio0.data2_o = pads_to_mux_i.pad_io_c_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01: begin
            port_signals_pad2soc_o.sdio0.data2_o = pads_to_mux_i.pad_io_c_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02: begin
            port_signals_pad2soc_o.sdio0.data2_o = pads_to_mux_i.pad_io_c_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03: begin
            port_signals_pad2soc_o.sdio0.data2_o = pads_to_mux_i.pad_io_c_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04: begin
            port_signals_pad2soc_o.sdio0.data2_o = pads_to_mux_i.pad_io_c_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05: begin
            port_signals_pad2soc_o.sdio0.data2_o = pads_to_mux_i.pad_io_c_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06: begin
            port_signals_pad2soc_o.sdio0.data2_o = pads_to_mux_i.pad_io_c_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07: begin
            port_signals_pad2soc_o.sdio0.data2_o = pads_to_mux_i.pad_io_c_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08: begin
            port_signals_pad2soc_o.sdio0.data2_o = pads_to_mux_i.pad_io_c_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09: begin
            port_signals_pad2soc_o.sdio0.data2_o = pads_to_mux_i.pad_io_c_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10: begin
            port_signals_pad2soc_o.sdio0.data2_o = pads_to_mux_i.pad_io_c_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11: begin
            port_signals_pad2soc_o.sdio0.data2_o = pads_to_mux_i.pad_io_c_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12: begin
            port_signals_pad2soc_o.sdio0.data2_o = pads_to_mux_i.pad_io_c_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13: begin
            port_signals_pad2soc_o.sdio0.data2_o = pads_to_mux_i.pad_io_c_13.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.sdio0.data2_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data3_o
  logic [13:0] port_mux_sel_sdio0_data3_o_req;
  logic [PORT_MUX_GROUP_MX_C_SEL_WIDTH-1:0] port_mux_sel_sdio0_data3_o_arbitrated;
  logic port_mux_sel_sdio0_data3_o_no_connection;

   assign port_mux_sel_sdio0_data3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00] = s_reg2hw.pad_io_c_00_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01] = s_reg2hw.pad_io_c_01_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02] = s_reg2hw.pad_io_c_02_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03] = s_reg2hw.pad_io_c_03_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04] = s_reg2hw.pad_io_c_04_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05] = s_reg2hw.pad_io_c_05_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06] = s_reg2hw.pad_io_c_06_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07] = s_reg2hw.pad_io_c_07_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08] = s_reg2hw.pad_io_c_08_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09] = s_reg2hw.pad_io_c_09_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10] = s_reg2hw.pad_io_c_10_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11] = s_reg2hw.pad_io_c_11_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12] = s_reg2hw.pad_io_c_12_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio0_data3_o_req[PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13] = s_reg2hw.pad_io_c_13_mux_sel.q == PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(14),
     .MODE(1'b0)
   ) i_port_muxsel_sdio0_data3_o_arbiter (
     .in_i(port_mux_sel_sdio0_data3_o_req),
     .cnt_o(port_mux_sel_sdio0_data3_o_arbitrated),
     .empty_o(port_mux_sel_sdio0_data3_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_sdio0_data3_o_no_connection) begin
        port_signals_pad2soc_o.sdio0.data3_o = 1'b1;
     end else begin
        unique case (port_mux_sel_sdio0_data3_o_arbitrated)
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00: begin
            port_signals_pad2soc_o.sdio0.data3_o = pads_to_mux_i.pad_io_c_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01: begin
            port_signals_pad2soc_o.sdio0.data3_o = pads_to_mux_i.pad_io_c_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02: begin
            port_signals_pad2soc_o.sdio0.data3_o = pads_to_mux_i.pad_io_c_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03: begin
            port_signals_pad2soc_o.sdio0.data3_o = pads_to_mux_i.pad_io_c_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04: begin
            port_signals_pad2soc_o.sdio0.data3_o = pads_to_mux_i.pad_io_c_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05: begin
            port_signals_pad2soc_o.sdio0.data3_o = pads_to_mux_i.pad_io_c_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06: begin
            port_signals_pad2soc_o.sdio0.data3_o = pads_to_mux_i.pad_io_c_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07: begin
            port_signals_pad2soc_o.sdio0.data3_o = pads_to_mux_i.pad_io_c_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08: begin
            port_signals_pad2soc_o.sdio0.data3_o = pads_to_mux_i.pad_io_c_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09: begin
            port_signals_pad2soc_o.sdio0.data3_o = pads_to_mux_i.pad_io_c_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10: begin
            port_signals_pad2soc_o.sdio0.data3_o = pads_to_mux_i.pad_io_c_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11: begin
            port_signals_pad2soc_o.sdio0.data3_o = pads_to_mux_i.pad_io_c_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12: begin
            port_signals_pad2soc_o.sdio0.data3_o = pads_to_mux_i.pad_io_c_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13: begin
            port_signals_pad2soc_o.sdio0.data3_o = pads_to_mux_i.pad_io_c_13.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.sdio0.data3_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group uart0


  // Port Signal rx_o
  logic [15:0] port_mux_sel_uart0_rx_o_req;
  logic [PORT_MUX_GROUP_MX_D_SEL_WIDTH-1:0] port_mux_sel_uart0_rx_o_arbitrated;
  logic port_mux_sel_uart0_rx_o_no_connection;

   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00] = s_reg2hw.pad_io_d_00_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01] = s_reg2hw.pad_io_d_01_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02] = s_reg2hw.pad_io_d_02_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03] = s_reg2hw.pad_io_d_03_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04] = s_reg2hw.pad_io_d_04_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05] = s_reg2hw.pad_io_d_05_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06] = s_reg2hw.pad_io_d_06_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07] = s_reg2hw.pad_io_d_07_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08] = s_reg2hw.pad_io_d_08_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09] = s_reg2hw.pad_io_d_09_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10] = s_reg2hw.pad_io_d_10_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11] = s_reg2hw.pad_io_d_11_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12] = s_reg2hw.pad_io_d_12_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13] = s_reg2hw.pad_io_d_13_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14] = s_reg2hw.pad_io_d_14_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15] = s_reg2hw.pad_io_d_15_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(16),
     .MODE(1'b0)
   ) i_port_muxsel_uart0_rx_o_arbiter (
     .in_i(port_mux_sel_uart0_rx_o_req),
     .cnt_o(port_mux_sel_uart0_rx_o_arbitrated),
     .empty_o(port_mux_sel_uart0_rx_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_uart0_rx_o_no_connection) begin
        port_signals_pad2soc_o.uart0.rx_o = 1'b1;
     end else begin
        unique case (port_mux_sel_uart0_rx_o_arbitrated)
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_14.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15: begin
            port_signals_pad2soc_o.uart0.rx_o = pads_to_mux_i.pad_io_d_15.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.uart0.rx_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group uart1


  // Port Signal rx_o
  logic [15:0] port_mux_sel_uart1_rx_o_req;
  logic [PORT_MUX_GROUP_MX_D_SEL_WIDTH-1:0] port_mux_sel_uart1_rx_o_arbitrated;
  logic port_mux_sel_uart1_rx_o_no_connection;

   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00] = s_reg2hw.pad_io_d_00_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01] = s_reg2hw.pad_io_d_01_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02] = s_reg2hw.pad_io_d_02_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03] = s_reg2hw.pad_io_d_03_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04] = s_reg2hw.pad_io_d_04_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05] = s_reg2hw.pad_io_d_05_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06] = s_reg2hw.pad_io_d_06_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07] = s_reg2hw.pad_io_d_07_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08] = s_reg2hw.pad_io_d_08_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09] = s_reg2hw.pad_io_d_09_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10] = s_reg2hw.pad_io_d_10_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11] = s_reg2hw.pad_io_d_11_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12] = s_reg2hw.pad_io_d_12_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13] = s_reg2hw.pad_io_d_13_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14] = s_reg2hw.pad_io_d_14_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15] = s_reg2hw.pad_io_d_15_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(16),
     .MODE(1'b0)
   ) i_port_muxsel_uart1_rx_o_arbiter (
     .in_i(port_mux_sel_uart1_rx_o_req),
     .cnt_o(port_mux_sel_uart1_rx_o_arbitrated),
     .empty_o(port_mux_sel_uart1_rx_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_uart1_rx_o_no_connection) begin
        port_signals_pad2soc_o.uart1.rx_o = 1'b1;
     end else begin
        unique case (port_mux_sel_uart1_rx_o_arbitrated)
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_14.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15: begin
            port_signals_pad2soc_o.uart1.rx_o = pads_to_mux_i.pad_io_d_15.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.uart1.rx_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group uart_cf0


  // Port Signal rx_o
  logic [15:0] port_mux_sel_uart_cf0_rx_o_req;
  logic [PORT_MUX_GROUP_MX_D_SEL_WIDTH-1:0] port_mux_sel_uart_cf0_rx_o_arbitrated;
  logic port_mux_sel_uart_cf0_rx_o_no_connection;

   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00] = s_reg2hw.pad_io_d_00_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01] = s_reg2hw.pad_io_d_01_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02] = s_reg2hw.pad_io_d_02_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03] = s_reg2hw.pad_io_d_03_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04] = s_reg2hw.pad_io_d_04_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05] = s_reg2hw.pad_io_d_05_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06] = s_reg2hw.pad_io_d_06_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07] = s_reg2hw.pad_io_d_07_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08] = s_reg2hw.pad_io_d_08_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09] = s_reg2hw.pad_io_d_09_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10] = s_reg2hw.pad_io_d_10_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11] = s_reg2hw.pad_io_d_11_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12] = s_reg2hw.pad_io_d_12_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13] = s_reg2hw.pad_io_d_13_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14] = s_reg2hw.pad_io_d_14_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15] = s_reg2hw.pad_io_d_15_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(16),
     .MODE(1'b0)
   ) i_port_muxsel_uart_cf0_rx_o_arbiter (
     .in_i(port_mux_sel_uart_cf0_rx_o_req),
     .cnt_o(port_mux_sel_uart_cf0_rx_o_arbitrated),
     .empty_o(port_mux_sel_uart_cf0_rx_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_uart_cf0_rx_o_no_connection) begin
        port_signals_pad2soc_o.uart_cf0.rx_o = 1'b1;
     end else begin
        unique case (port_mux_sel_uart_cf0_rx_o_arbitrated)
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_14.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = pads_to_mux_i.pad_io_d_15.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.uart_cf0.rx_o = 1'b1;
          end
       endcase
     end
   end



  // Port Signal cts_o
  logic [15:0] port_mux_sel_uart_cf0_cts_o_req;
  logic [PORT_MUX_GROUP_MX_D_SEL_WIDTH-1:0] port_mux_sel_uart_cf0_cts_o_arbitrated;
  logic port_mux_sel_uart_cf0_cts_o_no_connection;

   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00] = s_reg2hw.pad_io_d_00_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01] = s_reg2hw.pad_io_d_01_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02] = s_reg2hw.pad_io_d_02_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03] = s_reg2hw.pad_io_d_03_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04] = s_reg2hw.pad_io_d_04_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05] = s_reg2hw.pad_io_d_05_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06] = s_reg2hw.pad_io_d_06_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07] = s_reg2hw.pad_io_d_07_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08] = s_reg2hw.pad_io_d_08_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09] = s_reg2hw.pad_io_d_09_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10] = s_reg2hw.pad_io_d_10_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11] = s_reg2hw.pad_io_d_11_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12] = s_reg2hw.pad_io_d_12_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13] = s_reg2hw.pad_io_d_13_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14] = s_reg2hw.pad_io_d_14_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf0_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15] = s_reg2hw.pad_io_d_15_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(16),
     .MODE(1'b0)
   ) i_port_muxsel_uart_cf0_cts_o_arbiter (
     .in_i(port_mux_sel_uart_cf0_cts_o_req),
     .cnt_o(port_mux_sel_uart_cf0_cts_o_arbitrated),
     .empty_o(port_mux_sel_uart_cf0_cts_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_uart_cf0_cts_o_no_connection) begin
        port_signals_pad2soc_o.uart_cf0.cts_o = 1'b1;
     end else begin
        unique case (port_mux_sel_uart_cf0_cts_o_arbitrated)
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_14.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = pads_to_mux_i.pad_io_d_15.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.uart_cf0.cts_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group uart_cf1


  // Port Signal rx_o
  logic [15:0] port_mux_sel_uart_cf1_rx_o_req;
  logic [PORT_MUX_GROUP_MX_D_SEL_WIDTH-1:0] port_mux_sel_uart_cf1_rx_o_arbitrated;
  logic port_mux_sel_uart_cf1_rx_o_no_connection;

   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00] = s_reg2hw.pad_io_d_00_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01] = s_reg2hw.pad_io_d_01_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02] = s_reg2hw.pad_io_d_02_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03] = s_reg2hw.pad_io_d_03_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04] = s_reg2hw.pad_io_d_04_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05] = s_reg2hw.pad_io_d_05_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06] = s_reg2hw.pad_io_d_06_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07] = s_reg2hw.pad_io_d_07_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08] = s_reg2hw.pad_io_d_08_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09] = s_reg2hw.pad_io_d_09_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10] = s_reg2hw.pad_io_d_10_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11] = s_reg2hw.pad_io_d_11_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12] = s_reg2hw.pad_io_d_12_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13] = s_reg2hw.pad_io_d_13_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14] = s_reg2hw.pad_io_d_14_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15] = s_reg2hw.pad_io_d_15_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(16),
     .MODE(1'b0)
   ) i_port_muxsel_uart_cf1_rx_o_arbiter (
     .in_i(port_mux_sel_uart_cf1_rx_o_req),
     .cnt_o(port_mux_sel_uart_cf1_rx_o_arbitrated),
     .empty_o(port_mux_sel_uart_cf1_rx_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_uart_cf1_rx_o_no_connection) begin
        port_signals_pad2soc_o.uart_cf1.rx_o = 1'b1;
     end else begin
        unique case (port_mux_sel_uart_cf1_rx_o_arbitrated)
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_14.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = pads_to_mux_i.pad_io_d_15.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.uart_cf1.rx_o = 1'b1;
          end
       endcase
     end
   end



  // Port Signal cts_o
  logic [15:0] port_mux_sel_uart_cf1_cts_o_req;
  logic [PORT_MUX_GROUP_MX_D_SEL_WIDTH-1:0] port_mux_sel_uart_cf1_cts_o_arbitrated;
  logic port_mux_sel_uart_cf1_cts_o_no_connection;

   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00] = s_reg2hw.pad_io_d_00_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01] = s_reg2hw.pad_io_d_01_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02] = s_reg2hw.pad_io_d_02_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03] = s_reg2hw.pad_io_d_03_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04] = s_reg2hw.pad_io_d_04_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05] = s_reg2hw.pad_io_d_05_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06] = s_reg2hw.pad_io_d_06_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07] = s_reg2hw.pad_io_d_07_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08] = s_reg2hw.pad_io_d_08_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09] = s_reg2hw.pad_io_d_09_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10] = s_reg2hw.pad_io_d_10_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11] = s_reg2hw.pad_io_d_11_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12] = s_reg2hw.pad_io_d_12_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13] = s_reg2hw.pad_io_d_13_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14] = s_reg2hw.pad_io_d_14_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf1_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15] = s_reg2hw.pad_io_d_15_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(16),
     .MODE(1'b0)
   ) i_port_muxsel_uart_cf1_cts_o_arbiter (
     .in_i(port_mux_sel_uart_cf1_cts_o_req),
     .cnt_o(port_mux_sel_uart_cf1_cts_o_arbitrated),
     .empty_o(port_mux_sel_uart_cf1_cts_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_uart_cf1_cts_o_no_connection) begin
        port_signals_pad2soc_o.uart_cf1.cts_o = 1'b1;
     end else begin
        unique case (port_mux_sel_uart_cf1_cts_o_arbitrated)
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_14.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = pads_to_mux_i.pad_io_d_15.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.uart_cf1.cts_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group uart_cf2


  // Port Signal rx_o
  logic [15:0] port_mux_sel_uart_cf2_rx_o_req;
  logic [PORT_MUX_GROUP_MX_D_SEL_WIDTH-1:0] port_mux_sel_uart_cf2_rx_o_arbitrated;
  logic port_mux_sel_uart_cf2_rx_o_no_connection;

   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00] = s_reg2hw.pad_io_d_00_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01] = s_reg2hw.pad_io_d_01_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02] = s_reg2hw.pad_io_d_02_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03] = s_reg2hw.pad_io_d_03_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04] = s_reg2hw.pad_io_d_04_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05] = s_reg2hw.pad_io_d_05_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06] = s_reg2hw.pad_io_d_06_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07] = s_reg2hw.pad_io_d_07_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08] = s_reg2hw.pad_io_d_08_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09] = s_reg2hw.pad_io_d_09_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10] = s_reg2hw.pad_io_d_10_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11] = s_reg2hw.pad_io_d_11_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12] = s_reg2hw.pad_io_d_12_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13] = s_reg2hw.pad_io_d_13_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14] = s_reg2hw.pad_io_d_14_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_rx_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15] = s_reg2hw.pad_io_d_15_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(16),
     .MODE(1'b0)
   ) i_port_muxsel_uart_cf2_rx_o_arbiter (
     .in_i(port_mux_sel_uart_cf2_rx_o_req),
     .cnt_o(port_mux_sel_uart_cf2_rx_o_arbitrated),
     .empty_o(port_mux_sel_uart_cf2_rx_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_uart_cf2_rx_o_no_connection) begin
        port_signals_pad2soc_o.uart_cf2.rx_o = 1'b1;
     end else begin
        unique case (port_mux_sel_uart_cf2_rx_o_arbitrated)
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_14.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = pads_to_mux_i.pad_io_d_15.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.uart_cf2.rx_o = 1'b1;
          end
       endcase
     end
   end



  // Port Signal cts_o
  logic [15:0] port_mux_sel_uart_cf2_cts_o_req;
  logic [PORT_MUX_GROUP_MX_D_SEL_WIDTH-1:0] port_mux_sel_uart_cf2_cts_o_arbitrated;
  logic port_mux_sel_uart_cf2_cts_o_no_connection;

   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00] = s_reg2hw.pad_io_d_00_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01] = s_reg2hw.pad_io_d_01_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02] = s_reg2hw.pad_io_d_02_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03] = s_reg2hw.pad_io_d_03_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04] = s_reg2hw.pad_io_d_04_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05] = s_reg2hw.pad_io_d_05_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06] = s_reg2hw.pad_io_d_06_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07] = s_reg2hw.pad_io_d_07_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08] = s_reg2hw.pad_io_d_08_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09] = s_reg2hw.pad_io_d_09_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10] = s_reg2hw.pad_io_d_10_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11] = s_reg2hw.pad_io_d_11_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12] = s_reg2hw.pad_io_d_12_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13] = s_reg2hw.pad_io_d_13_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14] = s_reg2hw.pad_io_d_14_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf2_cts_o_req[PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15] = s_reg2hw.pad_io_d_15_mux_sel.q == PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(16),
     .MODE(1'b0)
   ) i_port_muxsel_uart_cf2_cts_o_arbiter (
     .in_i(port_mux_sel_uart_cf2_cts_o_req),
     .cnt_o(port_mux_sel_uart_cf2_cts_o_arbitrated),
     .empty_o(port_mux_sel_uart_cf2_cts_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_uart_cf2_cts_o_no_connection) begin
        port_signals_pad2soc_o.uart_cf2.cts_o = 1'b1;
     end else begin
        unique case (port_mux_sel_uart_cf2_cts_o_arbitrated)
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_14.pad2chip;
          end
          PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = pads_to_mux_i.pad_io_d_15.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.uart_cf2.cts_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group spi7



  // Port Signal sd1_o
  logic [14:0] port_mux_sel_spi7_sd1_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_spi7_sd1_o_arbitrated;
  logic port_mux_sel_spi7_sd1_o_no_connection;

   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi7_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_spi7_sd1_o_arbiter (
     .in_i(port_mux_sel_spi7_sd1_o_req),
     .cnt_o(port_mux_sel_spi7_sd1_o_arbitrated),
     .empty_o(port_mux_sel_spi7_sd1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_spi7_sd1_o_no_connection) begin
        port_signals_pad2soc_o.spi7.sd1_o = 1'b0;
     end else begin
        unique case (port_mux_sel_spi7_sd1_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.spi7.sd1_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.spi7.sd1_o = 1'b0;
          end
       endcase
     end
   end


  // Port Group spi8



  // Port Signal sd1_o
  logic [14:0] port_mux_sel_spi8_sd1_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_spi8_sd1_o_arbitrated;
  logic port_mux_sel_spi8_sd1_o_no_connection;

   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi8_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_spi8_sd1_o_arbiter (
     .in_i(port_mux_sel_spi8_sd1_o_req),
     .cnt_o(port_mux_sel_spi8_sd1_o_arbitrated),
     .empty_o(port_mux_sel_spi8_sd1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_spi8_sd1_o_no_connection) begin
        port_signals_pad2soc_o.spi8.sd1_o = 1'b0;
     end else begin
        unique case (port_mux_sel_spi8_sd1_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.spi8.sd1_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.spi8.sd1_o = 1'b0;
          end
       endcase
     end
   end


  // Port Group spi9



  // Port Signal sd1_o
  logic [14:0] port_mux_sel_spi9_sd1_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_spi9_sd1_o_arbitrated;
  logic port_mux_sel_spi9_sd1_o_no_connection;

   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi9_sd1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_spi9_sd1_o_arbiter (
     .in_i(port_mux_sel_spi9_sd1_o_req),
     .cnt_o(port_mux_sel_spi9_sd1_o_arbitrated),
     .empty_o(port_mux_sel_spi9_sd1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_spi9_sd1_o_no_connection) begin
        port_signals_pad2soc_o.spi9.sd1_o = 1'b0;
     end else begin
        unique case (port_mux_sel_spi9_sd1_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.spi9.sd1_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.spi9.sd1_o = 1'b0;
          end
       endcase
     end
   end


  // Port Group i2c3

  // Port Signal sda_o
  logic [14:0] port_mux_sel_i2c3_sda_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_i2c3_sda_o_arbitrated;
  logic port_mux_sel_i2c3_sda_o_no_connection;

   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_sda_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_i2c3_sda_o_arbiter (
     .in_i(port_mux_sel_i2c3_sda_o_req),
     .cnt_o(port_mux_sel_i2c3_sda_o_arbitrated),
     .empty_o(port_mux_sel_i2c3_sda_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_i2c3_sda_o_no_connection) begin
        port_signals_pad2soc_o.i2c3.sda_o = 1'b1;
     end else begin
        unique case (port_mux_sel_i2c3_sda_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.i2c3.sda_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.i2c3.sda_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal scl_o
  logic [14:0] port_mux_sel_i2c3_scl_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_i2c3_scl_o_arbitrated;
  logic port_mux_sel_i2c3_scl_o_no_connection;

   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c3_scl_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_i2c3_scl_o_arbiter (
     .in_i(port_mux_sel_i2c3_scl_o_req),
     .cnt_o(port_mux_sel_i2c3_scl_o_arbitrated),
     .empty_o(port_mux_sel_i2c3_scl_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_i2c3_scl_o_no_connection) begin
        port_signals_pad2soc_o.i2c3.scl_o = 1'b1;
     end else begin
        unique case (port_mux_sel_i2c3_scl_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.i2c3.scl_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.i2c3.scl_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group cam0

  // Port Signal clk_o
  logic [14:0] port_mux_sel_cam0_clk_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_cam0_clk_o_arbitrated;
  logic port_mux_sel_cam0_clk_o_no_connection;

   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_clk_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_cam0_clk_o_arbiter (
     .in_i(port_mux_sel_cam0_clk_o_req),
     .cnt_o(port_mux_sel_cam0_clk_o_arbitrated),
     .empty_o(port_mux_sel_cam0_clk_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam0_clk_o_no_connection) begin
        port_signals_pad2soc_o.cam0.clk_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam0_clk_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.cam0.clk_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam0.clk_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal hsync_o
  logic [14:0] port_mux_sel_cam0_hsync_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_cam0_hsync_o_arbitrated;
  logic port_mux_sel_cam0_hsync_o_no_connection;

   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_hsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_cam0_hsync_o_arbiter (
     .in_i(port_mux_sel_cam0_hsync_o_req),
     .cnt_o(port_mux_sel_cam0_hsync_o_arbitrated),
     .empty_o(port_mux_sel_cam0_hsync_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam0_hsync_o_no_connection) begin
        port_signals_pad2soc_o.cam0.hsync_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam0_hsync_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.cam0.hsync_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam0.hsync_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal vsync_o
  logic [14:0] port_mux_sel_cam0_vsync_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_cam0_vsync_o_arbitrated;
  logic port_mux_sel_cam0_vsync_o_no_connection;

   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_vsync_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_cam0_vsync_o_arbiter (
     .in_i(port_mux_sel_cam0_vsync_o_req),
     .cnt_o(port_mux_sel_cam0_vsync_o_arbitrated),
     .empty_o(port_mux_sel_cam0_vsync_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam0_vsync_o_no_connection) begin
        port_signals_pad2soc_o.cam0.vsync_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam0_vsync_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.cam0.vsync_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam0.vsync_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data0_o
  logic [14:0] port_mux_sel_cam0_data0_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_cam0_data0_o_arbitrated;
  logic port_mux_sel_cam0_data0_o_no_connection;

   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data0_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_cam0_data0_o_arbiter (
     .in_i(port_mux_sel_cam0_data0_o_req),
     .cnt_o(port_mux_sel_cam0_data0_o_arbitrated),
     .empty_o(port_mux_sel_cam0_data0_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam0_data0_o_no_connection) begin
        port_signals_pad2soc_o.cam0.data0_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam0_data0_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.cam0.data0_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam0.data0_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data1_o
  logic [14:0] port_mux_sel_cam0_data1_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_cam0_data1_o_arbitrated;
  logic port_mux_sel_cam0_data1_o_no_connection;

   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data1_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_cam0_data1_o_arbiter (
     .in_i(port_mux_sel_cam0_data1_o_req),
     .cnt_o(port_mux_sel_cam0_data1_o_arbitrated),
     .empty_o(port_mux_sel_cam0_data1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam0_data1_o_no_connection) begin
        port_signals_pad2soc_o.cam0.data1_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam0_data1_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.cam0.data1_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam0.data1_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data2_o
  logic [14:0] port_mux_sel_cam0_data2_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_cam0_data2_o_arbitrated;
  logic port_mux_sel_cam0_data2_o_no_connection;

   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data2_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_cam0_data2_o_arbiter (
     .in_i(port_mux_sel_cam0_data2_o_req),
     .cnt_o(port_mux_sel_cam0_data2_o_arbitrated),
     .empty_o(port_mux_sel_cam0_data2_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam0_data2_o_no_connection) begin
        port_signals_pad2soc_o.cam0.data2_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam0_data2_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.cam0.data2_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam0.data2_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data3_o
  logic [14:0] port_mux_sel_cam0_data3_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_cam0_data3_o_arbitrated;
  logic port_mux_sel_cam0_data3_o_no_connection;

   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data3_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_cam0_data3_o_arbiter (
     .in_i(port_mux_sel_cam0_data3_o_req),
     .cnt_o(port_mux_sel_cam0_data3_o_arbitrated),
     .empty_o(port_mux_sel_cam0_data3_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam0_data3_o_no_connection) begin
        port_signals_pad2soc_o.cam0.data3_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam0_data3_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.cam0.data3_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam0.data3_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data4_o
  logic [14:0] port_mux_sel_cam0_data4_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_cam0_data4_o_arbitrated;
  logic port_mux_sel_cam0_data4_o_no_connection;

   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data4_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_cam0_data4_o_arbiter (
     .in_i(port_mux_sel_cam0_data4_o_req),
     .cnt_o(port_mux_sel_cam0_data4_o_arbitrated),
     .empty_o(port_mux_sel_cam0_data4_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam0_data4_o_no_connection) begin
        port_signals_pad2soc_o.cam0.data4_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam0_data4_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.cam0.data4_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam0.data4_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data5_o
  logic [14:0] port_mux_sel_cam0_data5_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_cam0_data5_o_arbitrated;
  logic port_mux_sel_cam0_data5_o_no_connection;

   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data5_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_cam0_data5_o_arbiter (
     .in_i(port_mux_sel_cam0_data5_o_req),
     .cnt_o(port_mux_sel_cam0_data5_o_arbitrated),
     .empty_o(port_mux_sel_cam0_data5_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam0_data5_o_no_connection) begin
        port_signals_pad2soc_o.cam0.data5_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam0_data5_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.cam0.data5_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam0.data5_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data6_o
  logic [14:0] port_mux_sel_cam0_data6_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_cam0_data6_o_arbitrated;
  logic port_mux_sel_cam0_data6_o_no_connection;

   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data6_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_cam0_data6_o_arbiter (
     .in_i(port_mux_sel_cam0_data6_o_req),
     .cnt_o(port_mux_sel_cam0_data6_o_arbitrated),
     .empty_o(port_mux_sel_cam0_data6_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam0_data6_o_no_connection) begin
        port_signals_pad2soc_o.cam0.data6_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam0_data6_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.cam0.data6_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam0.data6_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data7_o
  logic [14:0] port_mux_sel_cam0_data7_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_cam0_data7_o_arbitrated;
  logic port_mux_sel_cam0_data7_o_no_connection;

   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam0_data7_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_cam0_data7_o_arbiter (
     .in_i(port_mux_sel_cam0_data7_o_req),
     .cnt_o(port_mux_sel_cam0_data7_o_arbitrated),
     .empty_o(port_mux_sel_cam0_data7_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam0_data7_o_no_connection) begin
        port_signals_pad2soc_o.cam0.data7_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam0_data7_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.cam0.data7_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam0.data7_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group CAN2_CAN


  // Port Signal can1_rx_o
  logic [14:0] port_mux_sel_CAN2_CAN_can1_rx_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_CAN2_CAN_can1_rx_o_arbitrated;
  logic port_mux_sel_CAN2_CAN_can1_rx_o_no_connection;

   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can1_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_CAN2_CAN_can1_rx_o_arbiter (
     .in_i(port_mux_sel_CAN2_CAN_can1_rx_o_req),
     .cnt_o(port_mux_sel_CAN2_CAN_can1_rx_o_arbitrated),
     .empty_o(port_mux_sel_CAN2_CAN_can1_rx_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_CAN2_CAN_can1_rx_o_no_connection) begin
        port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = 1'b1;
     end else begin
        unique case (port_mux_sel_CAN2_CAN_can1_rx_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.CAN2_CAN.can1_rx_o = 1'b1;
          end
       endcase
     end
   end



  // Port Signal can2_rx_o
  logic [14:0] port_mux_sel_CAN2_CAN_can2_rx_o_req;
  logic [PORT_MUX_GROUP_MX_E_SEL_WIDTH-1:0] port_mux_sel_CAN2_CAN_can2_rx_o_arbitrated;
  logic port_mux_sel_CAN2_CAN_can2_rx_o_no_connection;

   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00] = s_reg2hw.pad_io_e_00_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01] = s_reg2hw.pad_io_e_01_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02] = s_reg2hw.pad_io_e_02_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03] = s_reg2hw.pad_io_e_03_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04] = s_reg2hw.pad_io_e_04_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05] = s_reg2hw.pad_io_e_05_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06] = s_reg2hw.pad_io_e_06_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07] = s_reg2hw.pad_io_e_07_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08] = s_reg2hw.pad_io_e_08_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09] = s_reg2hw.pad_io_e_09_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10] = s_reg2hw.pad_io_e_10_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11] = s_reg2hw.pad_io_e_11_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12] = s_reg2hw.pad_io_e_12_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13] = s_reg2hw.pad_io_e_13_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_CAN2_CAN_can2_rx_o_req[PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14] = s_reg2hw.pad_io_e_14_mux_sel.q == PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_CAN2_CAN_can2_rx_o_arbiter (
     .in_i(port_mux_sel_CAN2_CAN_can2_rx_o_req),
     .cnt_o(port_mux_sel_CAN2_CAN_can2_rx_o_arbitrated),
     .empty_o(port_mux_sel_CAN2_CAN_can2_rx_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_CAN2_CAN_can2_rx_o_no_connection) begin
        port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = 1'b1;
     end else begin
        unique case (port_mux_sel_CAN2_CAN_can2_rx_o_arbitrated)
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = pads_to_mux_i.pad_io_e_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.CAN2_CAN.can2_rx_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group spi10



  // Port Signal sd1_o
  logic [10:0] port_mux_sel_spi10_sd1_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_spi10_sd1_o_arbitrated;
  logic port_mux_sel_spi10_sd1_o_no_connection;

   assign port_mux_sel_spi10_sd1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi10_sd1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi10_sd1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi10_sd1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi10_sd1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi10_sd1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi10_sd1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi10_sd1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi10_sd1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi10_sd1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO ? 1'b1 : 1'b0;
   assign port_mux_sel_spi10_sd1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_spi10_sd1_o_arbiter (
     .in_i(port_mux_sel_spi10_sd1_o_req),
     .cnt_o(port_mux_sel_spi10_sd1_o_arbitrated),
     .empty_o(port_mux_sel_spi10_sd1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_spi10_sd1_o_no_connection) begin
        port_signals_pad2soc_o.spi10.sd1_o = 1'b0;
     end else begin
        unique case (port_mux_sel_spi10_sd1_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.spi10.sd1_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.spi10.sd1_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.spi10.sd1_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.spi10.sd1_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.spi10.sd1_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.spi10.sd1_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.spi10.sd1_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.spi10.sd1_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.spi10.sd1_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.spi10.sd1_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.spi10.sd1_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.spi10.sd1_o = 1'b0;
          end
       endcase
     end
   end


  // Port Group i2c4

  // Port Signal sda_o
  logic [10:0] port_mux_sel_i2c4_sda_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_i2c4_sda_o_arbitrated;
  logic port_mux_sel_i2c4_sda_o_no_connection;

   assign port_mux_sel_i2c4_sda_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_sda_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_sda_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_sda_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_sda_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_sda_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_sda_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_sda_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_sda_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_sda_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_sda_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_i2c4_sda_o_arbiter (
     .in_i(port_mux_sel_i2c4_sda_o_req),
     .cnt_o(port_mux_sel_i2c4_sda_o_arbitrated),
     .empty_o(port_mux_sel_i2c4_sda_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_i2c4_sda_o_no_connection) begin
        port_signals_pad2soc_o.i2c4.sda_o = 1'b1;
     end else begin
        unique case (port_mux_sel_i2c4_sda_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.i2c4.sda_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.i2c4.sda_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.i2c4.sda_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.i2c4.sda_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.i2c4.sda_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.i2c4.sda_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.i2c4.sda_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.i2c4.sda_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.i2c4.sda_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.i2c4.sda_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.i2c4.sda_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.i2c4.sda_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal scl_o
  logic [10:0] port_mux_sel_i2c4_scl_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_i2c4_scl_o_arbitrated;
  logic port_mux_sel_i2c4_scl_o_no_connection;

   assign port_mux_sel_i2c4_scl_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_scl_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_scl_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_scl_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_scl_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_scl_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_scl_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_scl_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_scl_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_scl_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL ? 1'b1 : 1'b0;
   assign port_mux_sel_i2c4_scl_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_i2c4_scl_o_arbiter (
     .in_i(port_mux_sel_i2c4_scl_o_req),
     .cnt_o(port_mux_sel_i2c4_scl_o_arbitrated),
     .empty_o(port_mux_sel_i2c4_scl_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_i2c4_scl_o_no_connection) begin
        port_signals_pad2soc_o.i2c4.scl_o = 1'b1;
     end else begin
        unique case (port_mux_sel_i2c4_scl_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.i2c4.scl_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.i2c4.scl_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.i2c4.scl_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.i2c4.scl_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.i2c4.scl_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.i2c4.scl_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.i2c4.scl_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.i2c4.scl_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.i2c4.scl_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.i2c4.scl_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.i2c4.scl_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.i2c4.scl_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group uart2


  // Port Signal rx_o
  logic [10:0] port_mux_sel_uart2_rx_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_uart2_rx_o_arbitrated;
  logic port_mux_sel_uart2_rx_o_no_connection;

   assign port_mux_sel_uart2_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart2_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart2_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart2_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart2_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart2_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart2_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart2_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart2_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart2_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart2_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_uart2_rx_o_arbiter (
     .in_i(port_mux_sel_uart2_rx_o_req),
     .cnt_o(port_mux_sel_uart2_rx_o_arbitrated),
     .empty_o(port_mux_sel_uart2_rx_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_uart2_rx_o_no_connection) begin
        port_signals_pad2soc_o.uart2.rx_o = 1'b1;
     end else begin
        unique case (port_mux_sel_uart2_rx_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.uart2.rx_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.uart2.rx_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.uart2.rx_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.uart2.rx_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.uart2.rx_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.uart2.rx_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.uart2.rx_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.uart2.rx_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.uart2.rx_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.uart2.rx_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.uart2.rx_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.uart2.rx_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group uart3


  // Port Signal rx_o
  logic [10:0] port_mux_sel_uart3_rx_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_uart3_rx_o_arbitrated;
  logic port_mux_sel_uart3_rx_o_no_connection;

   assign port_mux_sel_uart3_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart3_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart3_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart3_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart3_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart3_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart3_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart3_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart3_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart3_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart3_rx_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_uart3_rx_o_arbiter (
     .in_i(port_mux_sel_uart3_rx_o_req),
     .cnt_o(port_mux_sel_uart3_rx_o_arbitrated),
     .empty_o(port_mux_sel_uart3_rx_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_uart3_rx_o_no_connection) begin
        port_signals_pad2soc_o.uart3.rx_o = 1'b1;
     end else begin
        unique case (port_mux_sel_uart3_rx_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.uart3.rx_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.uart3.rx_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.uart3.rx_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.uart3.rx_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.uart3.rx_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.uart3.rx_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.uart3.rx_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.uart3.rx_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.uart3.rx_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.uart3.rx_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.uart3.rx_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.uart3.rx_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group cam1

  // Port Signal clk_o
  logic [10:0] port_mux_sel_cam1_clk_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_cam1_clk_o_arbitrated;
  logic port_mux_sel_cam1_clk_o_no_connection;

   assign port_mux_sel_cam1_clk_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_clk_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_clk_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_clk_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_clk_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_clk_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_clk_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_clk_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_clk_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_clk_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_clk_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_cam1_clk_o_arbiter (
     .in_i(port_mux_sel_cam1_clk_o_req),
     .cnt_o(port_mux_sel_cam1_clk_o_arbitrated),
     .empty_o(port_mux_sel_cam1_clk_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam1_clk_o_no_connection) begin
        port_signals_pad2soc_o.cam1.clk_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam1_clk_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.cam1.clk_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.cam1.clk_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.cam1.clk_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.cam1.clk_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.cam1.clk_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.cam1.clk_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.cam1.clk_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.cam1.clk_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.cam1.clk_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.cam1.clk_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.cam1.clk_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam1.clk_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal hsync_o
  logic [10:0] port_mux_sel_cam1_hsync_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_cam1_hsync_o_arbitrated;
  logic port_mux_sel_cam1_hsync_o_no_connection;

   assign port_mux_sel_cam1_hsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_hsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_hsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_hsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_hsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_hsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_hsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_hsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_hsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_hsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_hsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_cam1_hsync_o_arbiter (
     .in_i(port_mux_sel_cam1_hsync_o_req),
     .cnt_o(port_mux_sel_cam1_hsync_o_arbitrated),
     .empty_o(port_mux_sel_cam1_hsync_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam1_hsync_o_no_connection) begin
        port_signals_pad2soc_o.cam1.hsync_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam1_hsync_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.cam1.hsync_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.cam1.hsync_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.cam1.hsync_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.cam1.hsync_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.cam1.hsync_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.cam1.hsync_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.cam1.hsync_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.cam1.hsync_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.cam1.hsync_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.cam1.hsync_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.cam1.hsync_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam1.hsync_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal vsync_o
  logic [10:0] port_mux_sel_cam1_vsync_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_cam1_vsync_o_arbitrated;
  logic port_mux_sel_cam1_vsync_o_no_connection;

   assign port_mux_sel_cam1_vsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_vsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_vsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_vsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_vsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_vsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_vsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_vsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_vsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_vsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_vsync_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_cam1_vsync_o_arbiter (
     .in_i(port_mux_sel_cam1_vsync_o_req),
     .cnt_o(port_mux_sel_cam1_vsync_o_arbitrated),
     .empty_o(port_mux_sel_cam1_vsync_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam1_vsync_o_no_connection) begin
        port_signals_pad2soc_o.cam1.vsync_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam1_vsync_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.cam1.vsync_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.cam1.vsync_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.cam1.vsync_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.cam1.vsync_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.cam1.vsync_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.cam1.vsync_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.cam1.vsync_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.cam1.vsync_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.cam1.vsync_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.cam1.vsync_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.cam1.vsync_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam1.vsync_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data0_o
  logic [10:0] port_mux_sel_cam1_data0_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_cam1_data0_o_arbitrated;
  logic port_mux_sel_cam1_data0_o_no_connection;

   assign port_mux_sel_cam1_data0_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data0_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data0_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data0_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data0_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data0_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data0_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data0_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data0_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data0_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data0_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_cam1_data0_o_arbiter (
     .in_i(port_mux_sel_cam1_data0_o_req),
     .cnt_o(port_mux_sel_cam1_data0_o_arbitrated),
     .empty_o(port_mux_sel_cam1_data0_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam1_data0_o_no_connection) begin
        port_signals_pad2soc_o.cam1.data0_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam1_data0_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.cam1.data0_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.cam1.data0_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.cam1.data0_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.cam1.data0_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.cam1.data0_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.cam1.data0_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.cam1.data0_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.cam1.data0_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.cam1.data0_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.cam1.data0_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.cam1.data0_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam1.data0_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data1_o
  logic [10:0] port_mux_sel_cam1_data1_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_cam1_data1_o_arbitrated;
  logic port_mux_sel_cam1_data1_o_no_connection;

   assign port_mux_sel_cam1_data1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data1_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_cam1_data1_o_arbiter (
     .in_i(port_mux_sel_cam1_data1_o_req),
     .cnt_o(port_mux_sel_cam1_data1_o_arbitrated),
     .empty_o(port_mux_sel_cam1_data1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam1_data1_o_no_connection) begin
        port_signals_pad2soc_o.cam1.data1_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam1_data1_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.cam1.data1_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.cam1.data1_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.cam1.data1_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.cam1.data1_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.cam1.data1_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.cam1.data1_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.cam1.data1_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.cam1.data1_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.cam1.data1_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.cam1.data1_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.cam1.data1_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam1.data1_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data2_o
  logic [10:0] port_mux_sel_cam1_data2_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_cam1_data2_o_arbitrated;
  logic port_mux_sel_cam1_data2_o_no_connection;

   assign port_mux_sel_cam1_data2_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data2_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data2_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data2_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data2_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data2_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data2_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data2_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data2_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data2_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data2_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_cam1_data2_o_arbiter (
     .in_i(port_mux_sel_cam1_data2_o_req),
     .cnt_o(port_mux_sel_cam1_data2_o_arbitrated),
     .empty_o(port_mux_sel_cam1_data2_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam1_data2_o_no_connection) begin
        port_signals_pad2soc_o.cam1.data2_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam1_data2_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.cam1.data2_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.cam1.data2_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.cam1.data2_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.cam1.data2_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.cam1.data2_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.cam1.data2_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.cam1.data2_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.cam1.data2_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.cam1.data2_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.cam1.data2_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.cam1.data2_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam1.data2_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data3_o
  logic [10:0] port_mux_sel_cam1_data3_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_cam1_data3_o_arbitrated;
  logic port_mux_sel_cam1_data3_o_no_connection;

   assign port_mux_sel_cam1_data3_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data3_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data3_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data3_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data3_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data3_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data3_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data3_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data3_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data3_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data3_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_cam1_data3_o_arbiter (
     .in_i(port_mux_sel_cam1_data3_o_req),
     .cnt_o(port_mux_sel_cam1_data3_o_arbitrated),
     .empty_o(port_mux_sel_cam1_data3_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam1_data3_o_no_connection) begin
        port_signals_pad2soc_o.cam1.data3_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam1_data3_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.cam1.data3_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.cam1.data3_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.cam1.data3_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.cam1.data3_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.cam1.data3_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.cam1.data3_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.cam1.data3_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.cam1.data3_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.cam1.data3_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.cam1.data3_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.cam1.data3_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam1.data3_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data4_o
  logic [10:0] port_mux_sel_cam1_data4_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_cam1_data4_o_arbitrated;
  logic port_mux_sel_cam1_data4_o_no_connection;

   assign port_mux_sel_cam1_data4_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data4_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data4_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data4_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data4_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data4_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data4_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data4_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data4_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data4_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data4_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_cam1_data4_o_arbiter (
     .in_i(port_mux_sel_cam1_data4_o_req),
     .cnt_o(port_mux_sel_cam1_data4_o_arbitrated),
     .empty_o(port_mux_sel_cam1_data4_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam1_data4_o_no_connection) begin
        port_signals_pad2soc_o.cam1.data4_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam1_data4_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.cam1.data4_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.cam1.data4_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.cam1.data4_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.cam1.data4_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.cam1.data4_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.cam1.data4_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.cam1.data4_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.cam1.data4_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.cam1.data4_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.cam1.data4_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.cam1.data4_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam1.data4_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data5_o
  logic [10:0] port_mux_sel_cam1_data5_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_cam1_data5_o_arbitrated;
  logic port_mux_sel_cam1_data5_o_no_connection;

   assign port_mux_sel_cam1_data5_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data5_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data5_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data5_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data5_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data5_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data5_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data5_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data5_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data5_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data5_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_cam1_data5_o_arbiter (
     .in_i(port_mux_sel_cam1_data5_o_req),
     .cnt_o(port_mux_sel_cam1_data5_o_arbitrated),
     .empty_o(port_mux_sel_cam1_data5_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam1_data5_o_no_connection) begin
        port_signals_pad2soc_o.cam1.data5_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam1_data5_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.cam1.data5_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.cam1.data5_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.cam1.data5_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.cam1.data5_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.cam1.data5_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.cam1.data5_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.cam1.data5_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.cam1.data5_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.cam1.data5_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.cam1.data5_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.cam1.data5_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam1.data5_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data6_o
  logic [10:0] port_mux_sel_cam1_data6_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_cam1_data6_o_arbitrated;
  logic port_mux_sel_cam1_data6_o_no_connection;

   assign port_mux_sel_cam1_data6_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data6_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data6_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data6_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data6_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data6_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data6_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data6_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data6_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data6_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data6_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_cam1_data6_o_arbiter (
     .in_i(port_mux_sel_cam1_data6_o_req),
     .cnt_o(port_mux_sel_cam1_data6_o_arbitrated),
     .empty_o(port_mux_sel_cam1_data6_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam1_data6_o_no_connection) begin
        port_signals_pad2soc_o.cam1.data6_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam1_data6_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.cam1.data6_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.cam1.data6_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.cam1.data6_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.cam1.data6_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.cam1.data6_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.cam1.data6_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.cam1.data6_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.cam1.data6_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.cam1.data6_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.cam1.data6_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.cam1.data6_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam1.data6_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data7_o
  logic [10:0] port_mux_sel_cam1_data7_o_req;
  logic [PORT_MUX_GROUP_MX_F_SEL_WIDTH-1:0] port_mux_sel_cam1_data7_o_arbitrated;
  logic port_mux_sel_cam1_data7_o_no_connection;

   assign port_mux_sel_cam1_data7_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00] = s_reg2hw.pad_io_f_00_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data7_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01] = s_reg2hw.pad_io_f_01_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data7_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02] = s_reg2hw.pad_io_f_02_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data7_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03] = s_reg2hw.pad_io_f_03_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data7_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04] = s_reg2hw.pad_io_f_04_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data7_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05] = s_reg2hw.pad_io_f_05_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data7_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06] = s_reg2hw.pad_io_f_06_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data7_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07] = s_reg2hw.pad_io_f_07_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data7_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08] = s_reg2hw.pad_io_f_08_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data7_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09] = s_reg2hw.pad_io_f_09_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I ? 1'b1 : 1'b0;
   assign port_mux_sel_cam1_data7_o_req[PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10] = s_reg2hw.pad_io_f_10_mux_sel.q == PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(11),
     .MODE(1'b0)
   ) i_port_muxsel_cam1_data7_o_arbiter (
     .in_i(port_mux_sel_cam1_data7_o_req),
     .cnt_o(port_mux_sel_cam1_data7_o_arbitrated),
     .empty_o(port_mux_sel_cam1_data7_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_cam1_data7_o_no_connection) begin
        port_signals_pad2soc_o.cam1.data7_o = 1'b1;
     end else begin
        unique case (port_mux_sel_cam1_data7_o_arbitrated)
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00: begin
            port_signals_pad2soc_o.cam1.data7_o = pads_to_mux_i.pad_io_f_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01: begin
            port_signals_pad2soc_o.cam1.data7_o = pads_to_mux_i.pad_io_f_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02: begin
            port_signals_pad2soc_o.cam1.data7_o = pads_to_mux_i.pad_io_f_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03: begin
            port_signals_pad2soc_o.cam1.data7_o = pads_to_mux_i.pad_io_f_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04: begin
            port_signals_pad2soc_o.cam1.data7_o = pads_to_mux_i.pad_io_f_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05: begin
            port_signals_pad2soc_o.cam1.data7_o = pads_to_mux_i.pad_io_f_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06: begin
            port_signals_pad2soc_o.cam1.data7_o = pads_to_mux_i.pad_io_f_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07: begin
            port_signals_pad2soc_o.cam1.data7_o = pads_to_mux_i.pad_io_f_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08: begin
            port_signals_pad2soc_o.cam1.data7_o = pads_to_mux_i.pad_io_f_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09: begin
            port_signals_pad2soc_o.cam1.data7_o = pads_to_mux_i.pad_io_f_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10: begin
            port_signals_pad2soc_o.cam1.data7_o = pads_to_mux_i.pad_io_f_10.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.cam1.data7_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group uart_cf3


  // Port Signal rx_o
  logic [14:0] port_mux_sel_uart_cf3_rx_o_req;
  logic [PORT_MUX_GROUP_MX_G_SEL_WIDTH-1:0] port_mux_sel_uart_cf3_rx_o_arbitrated;
  logic port_mux_sel_uart_cf3_rx_o_no_connection;

   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00] = s_reg2hw.pad_io_g_00_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01] = s_reg2hw.pad_io_g_01_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02] = s_reg2hw.pad_io_g_02_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03] = s_reg2hw.pad_io_g_03_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04] = s_reg2hw.pad_io_g_04_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05] = s_reg2hw.pad_io_g_05_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06] = s_reg2hw.pad_io_g_06_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07] = s_reg2hw.pad_io_g_07_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08] = s_reg2hw.pad_io_g_08_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09] = s_reg2hw.pad_io_g_09_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10] = s_reg2hw.pad_io_g_10_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11] = s_reg2hw.pad_io_g_11_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12] = s_reg2hw.pad_io_g_12_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13] = s_reg2hw.pad_io_g_13_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_rx_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14] = s_reg2hw.pad_io_g_14_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_uart_cf3_rx_o_arbiter (
     .in_i(port_mux_sel_uart_cf3_rx_o_req),
     .cnt_o(port_mux_sel_uart_cf3_rx_o_arbitrated),
     .empty_o(port_mux_sel_uart_cf3_rx_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_uart_cf3_rx_o_no_connection) begin
        port_signals_pad2soc_o.uart_cf3.rx_o = 1'b1;
     end else begin
        unique case (port_mux_sel_uart_cf3_rx_o_arbitrated)
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = pads_to_mux_i.pad_io_g_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.uart_cf3.rx_o = 1'b1;
          end
       endcase
     end
   end



  // Port Signal cts_o
  logic [14:0] port_mux_sel_uart_cf3_cts_o_req;
  logic [PORT_MUX_GROUP_MX_G_SEL_WIDTH-1:0] port_mux_sel_uart_cf3_cts_o_arbitrated;
  logic port_mux_sel_uart_cf3_cts_o_no_connection;

   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00] = s_reg2hw.pad_io_g_00_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01] = s_reg2hw.pad_io_g_01_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02] = s_reg2hw.pad_io_g_02_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03] = s_reg2hw.pad_io_g_03_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04] = s_reg2hw.pad_io_g_04_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05] = s_reg2hw.pad_io_g_05_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06] = s_reg2hw.pad_io_g_06_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07] = s_reg2hw.pad_io_g_07_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08] = s_reg2hw.pad_io_g_08_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09] = s_reg2hw.pad_io_g_09_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10] = s_reg2hw.pad_io_g_10_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11] = s_reg2hw.pad_io_g_11_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12] = s_reg2hw.pad_io_g_12_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13] = s_reg2hw.pad_io_g_13_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;
   assign port_mux_sel_uart_cf3_cts_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14] = s_reg2hw.pad_io_g_14_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_uart_cf3_cts_o_arbiter (
     .in_i(port_mux_sel_uart_cf3_cts_o_req),
     .cnt_o(port_mux_sel_uart_cf3_cts_o_arbitrated),
     .empty_o(port_mux_sel_uart_cf3_cts_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_uart_cf3_cts_o_no_connection) begin
        port_signals_pad2soc_o.uart_cf3.cts_o = 1'b1;
     end else begin
        unique case (port_mux_sel_uart_cf3_cts_o_arbitrated)
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = pads_to_mux_i.pad_io_g_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.uart_cf3.cts_o = 1'b1;
          end
       endcase
     end
   end

  // Port Group eth0


  // Port Signal eth_rxcd_o
  logic [14:0] port_mux_sel_eth0_eth_rxcd_o_req;
  logic [PORT_MUX_GROUP_MX_G_SEL_WIDTH-1:0] port_mux_sel_eth0_eth_rxcd_o_arbitrated;
  logic port_mux_sel_eth0_eth_rxcd_o_no_connection;

   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00] = s_reg2hw.pad_io_g_00_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01] = s_reg2hw.pad_io_g_01_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02] = s_reg2hw.pad_io_g_02_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03] = s_reg2hw.pad_io_g_03_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04] = s_reg2hw.pad_io_g_04_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05] = s_reg2hw.pad_io_g_05_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06] = s_reg2hw.pad_io_g_06_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07] = s_reg2hw.pad_io_g_07_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08] = s_reg2hw.pad_io_g_08_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09] = s_reg2hw.pad_io_g_09_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10] = s_reg2hw.pad_io_g_10_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11] = s_reg2hw.pad_io_g_11_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12] = s_reg2hw.pad_io_g_12_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13] = s_reg2hw.pad_io_g_13_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxcd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14] = s_reg2hw.pad_io_g_14_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_eth0_eth_rxcd_o_arbiter (
     .in_i(port_mux_sel_eth0_eth_rxcd_o_req),
     .cnt_o(port_mux_sel_eth0_eth_rxcd_o_arbitrated),
     .empty_o(port_mux_sel_eth0_eth_rxcd_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_eth0_eth_rxcd_o_no_connection) begin
        port_signals_pad2soc_o.eth0.eth_rxcd_o = 1'b0;
     end else begin
        unique case (port_mux_sel_eth0_eth_rxcd_o_arbitrated)
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = pads_to_mux_i.pad_io_g_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.eth0.eth_rxcd_o = 1'b0;
          end
       endcase
     end
   end


  // Port Signal eth_rxctl_o
  logic [14:0] port_mux_sel_eth0_eth_rxctl_o_req;
  logic [PORT_MUX_GROUP_MX_G_SEL_WIDTH-1:0] port_mux_sel_eth0_eth_rxctl_o_arbitrated;
  logic port_mux_sel_eth0_eth_rxctl_o_no_connection;

   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00] = s_reg2hw.pad_io_g_00_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01] = s_reg2hw.pad_io_g_01_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02] = s_reg2hw.pad_io_g_02_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03] = s_reg2hw.pad_io_g_03_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04] = s_reg2hw.pad_io_g_04_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05] = s_reg2hw.pad_io_g_05_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06] = s_reg2hw.pad_io_g_06_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07] = s_reg2hw.pad_io_g_07_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08] = s_reg2hw.pad_io_g_08_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09] = s_reg2hw.pad_io_g_09_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10] = s_reg2hw.pad_io_g_10_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11] = s_reg2hw.pad_io_g_11_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12] = s_reg2hw.pad_io_g_12_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13] = s_reg2hw.pad_io_g_13_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxctl_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14] = s_reg2hw.pad_io_g_14_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_eth0_eth_rxctl_o_arbiter (
     .in_i(port_mux_sel_eth0_eth_rxctl_o_req),
     .cnt_o(port_mux_sel_eth0_eth_rxctl_o_arbitrated),
     .empty_o(port_mux_sel_eth0_eth_rxctl_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_eth0_eth_rxctl_o_no_connection) begin
        port_signals_pad2soc_o.eth0.eth_rxctl_o = 1'b0;
     end else begin
        unique case (port_mux_sel_eth0_eth_rxctl_o_arbitrated)
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = pads_to_mux_i.pad_io_g_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.eth0.eth_rxctl_o = 1'b0;
          end
       endcase
     end
   end


  // Port Signal eth_rxd0_o
  logic [14:0] port_mux_sel_eth0_eth_rxd0_o_req;
  logic [PORT_MUX_GROUP_MX_G_SEL_WIDTH-1:0] port_mux_sel_eth0_eth_rxd0_o_arbitrated;
  logic port_mux_sel_eth0_eth_rxd0_o_no_connection;

   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00] = s_reg2hw.pad_io_g_00_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01] = s_reg2hw.pad_io_g_01_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02] = s_reg2hw.pad_io_g_02_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03] = s_reg2hw.pad_io_g_03_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04] = s_reg2hw.pad_io_g_04_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05] = s_reg2hw.pad_io_g_05_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06] = s_reg2hw.pad_io_g_06_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07] = s_reg2hw.pad_io_g_07_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08] = s_reg2hw.pad_io_g_08_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09] = s_reg2hw.pad_io_g_09_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10] = s_reg2hw.pad_io_g_10_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11] = s_reg2hw.pad_io_g_11_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12] = s_reg2hw.pad_io_g_12_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13] = s_reg2hw.pad_io_g_13_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14] = s_reg2hw.pad_io_g_14_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_eth0_eth_rxd0_o_arbiter (
     .in_i(port_mux_sel_eth0_eth_rxd0_o_req),
     .cnt_o(port_mux_sel_eth0_eth_rxd0_o_arbitrated),
     .empty_o(port_mux_sel_eth0_eth_rxd0_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_eth0_eth_rxd0_o_no_connection) begin
        port_signals_pad2soc_o.eth0.eth_rxd0_o = 1'b0;
     end else begin
        unique case (port_mux_sel_eth0_eth_rxd0_o_arbitrated)
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = pads_to_mux_i.pad_io_g_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.eth0.eth_rxd0_o = 1'b0;
          end
       endcase
     end
   end


  // Port Signal eth_rxd1_o
  logic [14:0] port_mux_sel_eth0_eth_rxd1_o_req;
  logic [PORT_MUX_GROUP_MX_G_SEL_WIDTH-1:0] port_mux_sel_eth0_eth_rxd1_o_arbitrated;
  logic port_mux_sel_eth0_eth_rxd1_o_no_connection;

   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00] = s_reg2hw.pad_io_g_00_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01] = s_reg2hw.pad_io_g_01_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02] = s_reg2hw.pad_io_g_02_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03] = s_reg2hw.pad_io_g_03_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04] = s_reg2hw.pad_io_g_04_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05] = s_reg2hw.pad_io_g_05_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06] = s_reg2hw.pad_io_g_06_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07] = s_reg2hw.pad_io_g_07_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08] = s_reg2hw.pad_io_g_08_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09] = s_reg2hw.pad_io_g_09_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10] = s_reg2hw.pad_io_g_10_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11] = s_reg2hw.pad_io_g_11_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12] = s_reg2hw.pad_io_g_12_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13] = s_reg2hw.pad_io_g_13_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14] = s_reg2hw.pad_io_g_14_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_eth0_eth_rxd1_o_arbiter (
     .in_i(port_mux_sel_eth0_eth_rxd1_o_req),
     .cnt_o(port_mux_sel_eth0_eth_rxd1_o_arbitrated),
     .empty_o(port_mux_sel_eth0_eth_rxd1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_eth0_eth_rxd1_o_no_connection) begin
        port_signals_pad2soc_o.eth0.eth_rxd1_o = 1'b0;
     end else begin
        unique case (port_mux_sel_eth0_eth_rxd1_o_arbitrated)
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = pads_to_mux_i.pad_io_g_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.eth0.eth_rxd1_o = 1'b0;
          end
       endcase
     end
   end


  // Port Signal eth_rxd2_o
  logic [14:0] port_mux_sel_eth0_eth_rxd2_o_req;
  logic [PORT_MUX_GROUP_MX_G_SEL_WIDTH-1:0] port_mux_sel_eth0_eth_rxd2_o_arbitrated;
  logic port_mux_sel_eth0_eth_rxd2_o_no_connection;

   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00] = s_reg2hw.pad_io_g_00_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01] = s_reg2hw.pad_io_g_01_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02] = s_reg2hw.pad_io_g_02_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03] = s_reg2hw.pad_io_g_03_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04] = s_reg2hw.pad_io_g_04_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05] = s_reg2hw.pad_io_g_05_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06] = s_reg2hw.pad_io_g_06_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07] = s_reg2hw.pad_io_g_07_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08] = s_reg2hw.pad_io_g_08_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09] = s_reg2hw.pad_io_g_09_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10] = s_reg2hw.pad_io_g_10_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11] = s_reg2hw.pad_io_g_11_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12] = s_reg2hw.pad_io_g_12_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13] = s_reg2hw.pad_io_g_13_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14] = s_reg2hw.pad_io_g_14_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_eth0_eth_rxd2_o_arbiter (
     .in_i(port_mux_sel_eth0_eth_rxd2_o_req),
     .cnt_o(port_mux_sel_eth0_eth_rxd2_o_arbitrated),
     .empty_o(port_mux_sel_eth0_eth_rxd2_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_eth0_eth_rxd2_o_no_connection) begin
        port_signals_pad2soc_o.eth0.eth_rxd2_o = 1'b0;
     end else begin
        unique case (port_mux_sel_eth0_eth_rxd2_o_arbitrated)
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = pads_to_mux_i.pad_io_g_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.eth0.eth_rxd2_o = 1'b0;
          end
       endcase
     end
   end


  // Port Signal eth_rxd3_o
  logic [14:0] port_mux_sel_eth0_eth_rxd3_o_req;
  logic [PORT_MUX_GROUP_MX_G_SEL_WIDTH-1:0] port_mux_sel_eth0_eth_rxd3_o_arbitrated;
  logic port_mux_sel_eth0_eth_rxd3_o_no_connection;

   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00] = s_reg2hw.pad_io_g_00_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01] = s_reg2hw.pad_io_g_01_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02] = s_reg2hw.pad_io_g_02_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03] = s_reg2hw.pad_io_g_03_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04] = s_reg2hw.pad_io_g_04_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05] = s_reg2hw.pad_io_g_05_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06] = s_reg2hw.pad_io_g_06_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07] = s_reg2hw.pad_io_g_07_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08] = s_reg2hw.pad_io_g_08_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09] = s_reg2hw.pad_io_g_09_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10] = s_reg2hw.pad_io_g_10_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11] = s_reg2hw.pad_io_g_11_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12] = s_reg2hw.pad_io_g_12_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13] = s_reg2hw.pad_io_g_13_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;
   assign port_mux_sel_eth0_eth_rxd3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14] = s_reg2hw.pad_io_g_14_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_eth0_eth_rxd3_o_arbiter (
     .in_i(port_mux_sel_eth0_eth_rxd3_o_req),
     .cnt_o(port_mux_sel_eth0_eth_rxd3_o_arbitrated),
     .empty_o(port_mux_sel_eth0_eth_rxd3_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_eth0_eth_rxd3_o_no_connection) begin
        port_signals_pad2soc_o.eth0.eth_rxd3_o = 1'b0;
     end else begin
        unique case (port_mux_sel_eth0_eth_rxd3_o_arbitrated)
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = pads_to_mux_i.pad_io_g_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.eth0.eth_rxd3_o = 1'b0;
          end
       endcase
     end
   end







  // Port Group sdio1


  // Port Signal cmd_o
  logic [14:0] port_mux_sel_sdio1_cmd_o_req;
  logic [PORT_MUX_GROUP_MX_G_SEL_WIDTH-1:0] port_mux_sel_sdio1_cmd_o_arbitrated;
  logic port_mux_sel_sdio1_cmd_o_no_connection;

   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00] = s_reg2hw.pad_io_g_00_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01] = s_reg2hw.pad_io_g_01_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02] = s_reg2hw.pad_io_g_02_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03] = s_reg2hw.pad_io_g_03_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04] = s_reg2hw.pad_io_g_04_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05] = s_reg2hw.pad_io_g_05_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06] = s_reg2hw.pad_io_g_06_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07] = s_reg2hw.pad_io_g_07_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08] = s_reg2hw.pad_io_g_08_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09] = s_reg2hw.pad_io_g_09_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10] = s_reg2hw.pad_io_g_10_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11] = s_reg2hw.pad_io_g_11_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12] = s_reg2hw.pad_io_g_12_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13] = s_reg2hw.pad_io_g_13_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_cmd_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14] = s_reg2hw.pad_io_g_14_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_sdio1_cmd_o_arbiter (
     .in_i(port_mux_sel_sdio1_cmd_o_req),
     .cnt_o(port_mux_sel_sdio1_cmd_o_arbitrated),
     .empty_o(port_mux_sel_sdio1_cmd_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_sdio1_cmd_o_no_connection) begin
        port_signals_pad2soc_o.sdio1.cmd_o = 1'b1;
     end else begin
        unique case (port_mux_sel_sdio1_cmd_o_arbitrated)
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14: begin
            port_signals_pad2soc_o.sdio1.cmd_o = pads_to_mux_i.pad_io_g_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.sdio1.cmd_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data0_o
  logic [14:0] port_mux_sel_sdio1_data0_o_req;
  logic [PORT_MUX_GROUP_MX_G_SEL_WIDTH-1:0] port_mux_sel_sdio1_data0_o_arbitrated;
  logic port_mux_sel_sdio1_data0_o_no_connection;

   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00] = s_reg2hw.pad_io_g_00_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01] = s_reg2hw.pad_io_g_01_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02] = s_reg2hw.pad_io_g_02_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03] = s_reg2hw.pad_io_g_03_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04] = s_reg2hw.pad_io_g_04_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05] = s_reg2hw.pad_io_g_05_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06] = s_reg2hw.pad_io_g_06_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07] = s_reg2hw.pad_io_g_07_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08] = s_reg2hw.pad_io_g_08_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09] = s_reg2hw.pad_io_g_09_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10] = s_reg2hw.pad_io_g_10_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11] = s_reg2hw.pad_io_g_11_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12] = s_reg2hw.pad_io_g_12_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13] = s_reg2hw.pad_io_g_13_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data0_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14] = s_reg2hw.pad_io_g_14_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_sdio1_data0_o_arbiter (
     .in_i(port_mux_sel_sdio1_data0_o_req),
     .cnt_o(port_mux_sel_sdio1_data0_o_arbitrated),
     .empty_o(port_mux_sel_sdio1_data0_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_sdio1_data0_o_no_connection) begin
        port_signals_pad2soc_o.sdio1.data0_o = 1'b1;
     end else begin
        unique case (port_mux_sel_sdio1_data0_o_arbitrated)
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14: begin
            port_signals_pad2soc_o.sdio1.data0_o = pads_to_mux_i.pad_io_g_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.sdio1.data0_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data1_o
  logic [14:0] port_mux_sel_sdio1_data1_o_req;
  logic [PORT_MUX_GROUP_MX_G_SEL_WIDTH-1:0] port_mux_sel_sdio1_data1_o_arbitrated;
  logic port_mux_sel_sdio1_data1_o_no_connection;

   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00] = s_reg2hw.pad_io_g_00_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01] = s_reg2hw.pad_io_g_01_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02] = s_reg2hw.pad_io_g_02_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03] = s_reg2hw.pad_io_g_03_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04] = s_reg2hw.pad_io_g_04_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05] = s_reg2hw.pad_io_g_05_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06] = s_reg2hw.pad_io_g_06_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07] = s_reg2hw.pad_io_g_07_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08] = s_reg2hw.pad_io_g_08_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09] = s_reg2hw.pad_io_g_09_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10] = s_reg2hw.pad_io_g_10_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11] = s_reg2hw.pad_io_g_11_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12] = s_reg2hw.pad_io_g_12_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13] = s_reg2hw.pad_io_g_13_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data1_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14] = s_reg2hw.pad_io_g_14_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_sdio1_data1_o_arbiter (
     .in_i(port_mux_sel_sdio1_data1_o_req),
     .cnt_o(port_mux_sel_sdio1_data1_o_arbitrated),
     .empty_o(port_mux_sel_sdio1_data1_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_sdio1_data1_o_no_connection) begin
        port_signals_pad2soc_o.sdio1.data1_o = 1'b1;
     end else begin
        unique case (port_mux_sel_sdio1_data1_o_arbitrated)
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14: begin
            port_signals_pad2soc_o.sdio1.data1_o = pads_to_mux_i.pad_io_g_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.sdio1.data1_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data2_o
  logic [14:0] port_mux_sel_sdio1_data2_o_req;
  logic [PORT_MUX_GROUP_MX_G_SEL_WIDTH-1:0] port_mux_sel_sdio1_data2_o_arbitrated;
  logic port_mux_sel_sdio1_data2_o_no_connection;

   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00] = s_reg2hw.pad_io_g_00_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01] = s_reg2hw.pad_io_g_01_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02] = s_reg2hw.pad_io_g_02_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03] = s_reg2hw.pad_io_g_03_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04] = s_reg2hw.pad_io_g_04_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05] = s_reg2hw.pad_io_g_05_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06] = s_reg2hw.pad_io_g_06_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07] = s_reg2hw.pad_io_g_07_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08] = s_reg2hw.pad_io_g_08_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09] = s_reg2hw.pad_io_g_09_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10] = s_reg2hw.pad_io_g_10_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11] = s_reg2hw.pad_io_g_11_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12] = s_reg2hw.pad_io_g_12_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13] = s_reg2hw.pad_io_g_13_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data2_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14] = s_reg2hw.pad_io_g_14_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_sdio1_data2_o_arbiter (
     .in_i(port_mux_sel_sdio1_data2_o_req),
     .cnt_o(port_mux_sel_sdio1_data2_o_arbitrated),
     .empty_o(port_mux_sel_sdio1_data2_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_sdio1_data2_o_no_connection) begin
        port_signals_pad2soc_o.sdio1.data2_o = 1'b1;
     end else begin
        unique case (port_mux_sel_sdio1_data2_o_arbitrated)
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14: begin
            port_signals_pad2soc_o.sdio1.data2_o = pads_to_mux_i.pad_io_g_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.sdio1.data2_o = 1'b1;
          end
       endcase
     end
   end


  // Port Signal data3_o
  logic [14:0] port_mux_sel_sdio1_data3_o_req;
  logic [PORT_MUX_GROUP_MX_G_SEL_WIDTH-1:0] port_mux_sel_sdio1_data3_o_arbitrated;
  logic port_mux_sel_sdio1_data3_o_no_connection;

   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00] = s_reg2hw.pad_io_g_00_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01] = s_reg2hw.pad_io_g_01_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02] = s_reg2hw.pad_io_g_02_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03] = s_reg2hw.pad_io_g_03_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04] = s_reg2hw.pad_io_g_04_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05] = s_reg2hw.pad_io_g_05_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06] = s_reg2hw.pad_io_g_06_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07] = s_reg2hw.pad_io_g_07_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08] = s_reg2hw.pad_io_g_08_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09] = s_reg2hw.pad_io_g_09_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10] = s_reg2hw.pad_io_g_10_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11] = s_reg2hw.pad_io_g_11_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12] = s_reg2hw.pad_io_g_12_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13] = s_reg2hw.pad_io_g_13_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;
   assign port_mux_sel_sdio1_data3_o_req[PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14] = s_reg2hw.pad_io_g_14_mux_sel.q == PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 ? 1'b1 : 1'b0;

   lzc #(
     .WIDTH(15),
     .MODE(1'b0)
   ) i_port_muxsel_sdio1_data3_o_arbiter (
     .in_i(port_mux_sel_sdio1_data3_o_req),
     .cnt_o(port_mux_sel_sdio1_data3_o_arbitrated),
     .empty_o(port_mux_sel_sdio1_data3_o_no_connection)
   );

   always_comb begin
     if (port_mux_sel_sdio1_data3_o_no_connection) begin
        port_signals_pad2soc_o.sdio1.data3_o = 1'b1;
     end else begin
        unique case (port_mux_sel_sdio1_data3_o_arbitrated)
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_00.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_01.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_02.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_03.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_04.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_05.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_06.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_07.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_08.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_09.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_10.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_11.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_12.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_13.pad2chip;
          end
          PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14: begin
            port_signals_pad2soc_o.sdio1.data3_o = pads_to_mux_i.pad_io_g_14.pad2chip;
          end
          default: begin
            port_signals_pad2soc_o.sdio1.data3_o = 1'b1;
          end
       endcase
     end
   end

endmodule : alsaqr_periph_padframe_periphs_muxer
