// File auto-generated by Padrick 0.1.0.post0.dev39+g0a36a20
package pkg_internal_alsaqr_periph_padframe_periphs;
  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_00_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_01_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_02_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_03_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_04_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_05_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_06_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_07_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_08_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_08_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_09_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_09_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_10_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_10_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_11_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_11_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_12_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_12_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_13_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_13_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_a_14_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_a_14_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_00_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_01_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_02_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_03_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_04_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_05_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_06_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_07_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_08_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_08_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_09_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_09_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_10_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_10_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_11_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_11_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_12_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_12_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_13_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_13_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_14_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_14_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_15_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_15_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_16_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_16_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_17_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_17_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_18_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_18_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_b_19_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_b_19_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_c_00_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_c_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_c_01_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_c_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_c_02_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_c_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_c_03_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_c_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_c_04_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_c_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_c_05_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_c_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_c_06_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_c_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_c_07_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_c_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_c_08_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_c_08_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_c_09_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_c_09_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_c_10_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_c_10_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_c_11_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_c_11_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_c_12_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_c_12_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_c_13_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_c_13_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_00_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_01_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_02_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_03_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_04_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_05_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_06_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_07_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_08_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_08_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_09_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_09_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_10_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_10_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_11_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_11_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_12_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_12_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_13_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_13_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_14_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_14_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_d_15_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_d_15_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_00_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_01_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_02_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_03_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_04_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_05_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_06_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_07_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_08_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_08_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_09_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_09_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_10_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_10_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_11_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_11_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_12_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_12_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_13_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_13_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_e_14_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_e_14_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_f_00_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_f_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_f_01_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_f_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_f_02_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_f_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_f_03_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_f_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_f_04_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_f_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_f_05_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_f_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_f_06_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_f_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_f_07_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_f_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_f_08_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_f_08_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_f_09_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_f_09_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_f_10_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_f_10_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_00_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_01_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_02_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_03_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_04_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_05_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_06_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_07_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_08_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_08_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_09_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_09_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_10_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_10_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_11_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_11_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_12_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_12_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_13_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_13_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_io_g_14_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_g_14_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_pwm0_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_pwm0_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_pwm1_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_pwm1_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_pwm2_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_pwm2_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_pwm3_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_pwm3_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_pwm4_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_pwm4_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_pwm5_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_pwm5_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_pwm6_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_pwm6_t;

  typedef struct packed{
    logic  chip2pad;
    logic  oen;
  } mux_to_pad_pad_pwm7_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_pwm7_t;

  typedef struct packed{
    mux_to_pad_pad_io_a_00_t pad_io_a_00;
    mux_to_pad_pad_io_a_01_t pad_io_a_01;
    mux_to_pad_pad_io_a_02_t pad_io_a_02;
    mux_to_pad_pad_io_a_03_t pad_io_a_03;
    mux_to_pad_pad_io_a_04_t pad_io_a_04;
    mux_to_pad_pad_io_a_05_t pad_io_a_05;
    mux_to_pad_pad_io_a_06_t pad_io_a_06;
    mux_to_pad_pad_io_a_07_t pad_io_a_07;
    mux_to_pad_pad_io_a_08_t pad_io_a_08;
    mux_to_pad_pad_io_a_09_t pad_io_a_09;
    mux_to_pad_pad_io_a_10_t pad_io_a_10;
    mux_to_pad_pad_io_a_11_t pad_io_a_11;
    mux_to_pad_pad_io_a_12_t pad_io_a_12;
    mux_to_pad_pad_io_a_13_t pad_io_a_13;
    mux_to_pad_pad_io_a_14_t pad_io_a_14;
    mux_to_pad_pad_io_b_00_t pad_io_b_00;
    mux_to_pad_pad_io_b_01_t pad_io_b_01;
    mux_to_pad_pad_io_b_02_t pad_io_b_02;
    mux_to_pad_pad_io_b_03_t pad_io_b_03;
    mux_to_pad_pad_io_b_04_t pad_io_b_04;
    mux_to_pad_pad_io_b_05_t pad_io_b_05;
    mux_to_pad_pad_io_b_06_t pad_io_b_06;
    mux_to_pad_pad_io_b_07_t pad_io_b_07;
    mux_to_pad_pad_io_b_08_t pad_io_b_08;
    mux_to_pad_pad_io_b_09_t pad_io_b_09;
    mux_to_pad_pad_io_b_10_t pad_io_b_10;
    mux_to_pad_pad_io_b_11_t pad_io_b_11;
    mux_to_pad_pad_io_b_12_t pad_io_b_12;
    mux_to_pad_pad_io_b_13_t pad_io_b_13;
    mux_to_pad_pad_io_b_14_t pad_io_b_14;
    mux_to_pad_pad_io_b_15_t pad_io_b_15;
    mux_to_pad_pad_io_b_16_t pad_io_b_16;
    mux_to_pad_pad_io_b_17_t pad_io_b_17;
    mux_to_pad_pad_io_b_18_t pad_io_b_18;
    mux_to_pad_pad_io_b_19_t pad_io_b_19;
    mux_to_pad_pad_io_c_00_t pad_io_c_00;
    mux_to_pad_pad_io_c_01_t pad_io_c_01;
    mux_to_pad_pad_io_c_02_t pad_io_c_02;
    mux_to_pad_pad_io_c_03_t pad_io_c_03;
    mux_to_pad_pad_io_c_04_t pad_io_c_04;
    mux_to_pad_pad_io_c_05_t pad_io_c_05;
    mux_to_pad_pad_io_c_06_t pad_io_c_06;
    mux_to_pad_pad_io_c_07_t pad_io_c_07;
    mux_to_pad_pad_io_c_08_t pad_io_c_08;
    mux_to_pad_pad_io_c_09_t pad_io_c_09;
    mux_to_pad_pad_io_c_10_t pad_io_c_10;
    mux_to_pad_pad_io_c_11_t pad_io_c_11;
    mux_to_pad_pad_io_c_12_t pad_io_c_12;
    mux_to_pad_pad_io_c_13_t pad_io_c_13;
    mux_to_pad_pad_io_d_00_t pad_io_d_00;
    mux_to_pad_pad_io_d_01_t pad_io_d_01;
    mux_to_pad_pad_io_d_02_t pad_io_d_02;
    mux_to_pad_pad_io_d_03_t pad_io_d_03;
    mux_to_pad_pad_io_d_04_t pad_io_d_04;
    mux_to_pad_pad_io_d_05_t pad_io_d_05;
    mux_to_pad_pad_io_d_06_t pad_io_d_06;
    mux_to_pad_pad_io_d_07_t pad_io_d_07;
    mux_to_pad_pad_io_d_08_t pad_io_d_08;
    mux_to_pad_pad_io_d_09_t pad_io_d_09;
    mux_to_pad_pad_io_d_10_t pad_io_d_10;
    mux_to_pad_pad_io_d_11_t pad_io_d_11;
    mux_to_pad_pad_io_d_12_t pad_io_d_12;
    mux_to_pad_pad_io_d_13_t pad_io_d_13;
    mux_to_pad_pad_io_d_14_t pad_io_d_14;
    mux_to_pad_pad_io_d_15_t pad_io_d_15;
    mux_to_pad_pad_io_e_00_t pad_io_e_00;
    mux_to_pad_pad_io_e_01_t pad_io_e_01;
    mux_to_pad_pad_io_e_02_t pad_io_e_02;
    mux_to_pad_pad_io_e_03_t pad_io_e_03;
    mux_to_pad_pad_io_e_04_t pad_io_e_04;
    mux_to_pad_pad_io_e_05_t pad_io_e_05;
    mux_to_pad_pad_io_e_06_t pad_io_e_06;
    mux_to_pad_pad_io_e_07_t pad_io_e_07;
    mux_to_pad_pad_io_e_08_t pad_io_e_08;
    mux_to_pad_pad_io_e_09_t pad_io_e_09;
    mux_to_pad_pad_io_e_10_t pad_io_e_10;
    mux_to_pad_pad_io_e_11_t pad_io_e_11;
    mux_to_pad_pad_io_e_12_t pad_io_e_12;
    mux_to_pad_pad_io_e_13_t pad_io_e_13;
    mux_to_pad_pad_io_e_14_t pad_io_e_14;
    mux_to_pad_pad_io_f_00_t pad_io_f_00;
    mux_to_pad_pad_io_f_01_t pad_io_f_01;
    mux_to_pad_pad_io_f_02_t pad_io_f_02;
    mux_to_pad_pad_io_f_03_t pad_io_f_03;
    mux_to_pad_pad_io_f_04_t pad_io_f_04;
    mux_to_pad_pad_io_f_05_t pad_io_f_05;
    mux_to_pad_pad_io_f_06_t pad_io_f_06;
    mux_to_pad_pad_io_f_07_t pad_io_f_07;
    mux_to_pad_pad_io_f_08_t pad_io_f_08;
    mux_to_pad_pad_io_f_09_t pad_io_f_09;
    mux_to_pad_pad_io_f_10_t pad_io_f_10;
    mux_to_pad_pad_io_g_00_t pad_io_g_00;
    mux_to_pad_pad_io_g_01_t pad_io_g_01;
    mux_to_pad_pad_io_g_02_t pad_io_g_02;
    mux_to_pad_pad_io_g_03_t pad_io_g_03;
    mux_to_pad_pad_io_g_04_t pad_io_g_04;
    mux_to_pad_pad_io_g_05_t pad_io_g_05;
    mux_to_pad_pad_io_g_06_t pad_io_g_06;
    mux_to_pad_pad_io_g_07_t pad_io_g_07;
    mux_to_pad_pad_io_g_08_t pad_io_g_08;
    mux_to_pad_pad_io_g_09_t pad_io_g_09;
    mux_to_pad_pad_io_g_10_t pad_io_g_10;
    mux_to_pad_pad_io_g_11_t pad_io_g_11;
    mux_to_pad_pad_io_g_12_t pad_io_g_12;
    mux_to_pad_pad_io_g_13_t pad_io_g_13;
    mux_to_pad_pad_io_g_14_t pad_io_g_14;
    mux_to_pad_pad_pwm0_t pad_pwm0;
    mux_to_pad_pad_pwm1_t pad_pwm1;
    mux_to_pad_pad_pwm2_t pad_pwm2;
    mux_to_pad_pad_pwm3_t pad_pwm3;
    mux_to_pad_pad_pwm4_t pad_pwm4;
    mux_to_pad_pad_pwm5_t pad_pwm5;
    mux_to_pad_pad_pwm6_t pad_pwm6;
    mux_to_pad_pad_pwm7_t pad_pwm7;
  } mux_to_pads_t;

  typedef struct packed{
    pad_to_mux_pad_io_a_00_t pad_io_a_00;
    pad_to_mux_pad_io_a_01_t pad_io_a_01;
    pad_to_mux_pad_io_a_02_t pad_io_a_02;
    pad_to_mux_pad_io_a_03_t pad_io_a_03;
    pad_to_mux_pad_io_a_04_t pad_io_a_04;
    pad_to_mux_pad_io_a_05_t pad_io_a_05;
    pad_to_mux_pad_io_a_06_t pad_io_a_06;
    pad_to_mux_pad_io_a_07_t pad_io_a_07;
    pad_to_mux_pad_io_a_08_t pad_io_a_08;
    pad_to_mux_pad_io_a_09_t pad_io_a_09;
    pad_to_mux_pad_io_a_10_t pad_io_a_10;
    pad_to_mux_pad_io_a_11_t pad_io_a_11;
    pad_to_mux_pad_io_a_12_t pad_io_a_12;
    pad_to_mux_pad_io_a_13_t pad_io_a_13;
    pad_to_mux_pad_io_a_14_t pad_io_a_14;
    pad_to_mux_pad_io_b_00_t pad_io_b_00;
    pad_to_mux_pad_io_b_01_t pad_io_b_01;
    pad_to_mux_pad_io_b_02_t pad_io_b_02;
    pad_to_mux_pad_io_b_03_t pad_io_b_03;
    pad_to_mux_pad_io_b_04_t pad_io_b_04;
    pad_to_mux_pad_io_b_05_t pad_io_b_05;
    pad_to_mux_pad_io_b_06_t pad_io_b_06;
    pad_to_mux_pad_io_b_07_t pad_io_b_07;
    pad_to_mux_pad_io_b_08_t pad_io_b_08;
    pad_to_mux_pad_io_b_09_t pad_io_b_09;
    pad_to_mux_pad_io_b_10_t pad_io_b_10;
    pad_to_mux_pad_io_b_11_t pad_io_b_11;
    pad_to_mux_pad_io_b_12_t pad_io_b_12;
    pad_to_mux_pad_io_b_13_t pad_io_b_13;
    pad_to_mux_pad_io_b_14_t pad_io_b_14;
    pad_to_mux_pad_io_b_15_t pad_io_b_15;
    pad_to_mux_pad_io_b_16_t pad_io_b_16;
    pad_to_mux_pad_io_b_17_t pad_io_b_17;
    pad_to_mux_pad_io_b_18_t pad_io_b_18;
    pad_to_mux_pad_io_b_19_t pad_io_b_19;
    pad_to_mux_pad_io_c_00_t pad_io_c_00;
    pad_to_mux_pad_io_c_01_t pad_io_c_01;
    pad_to_mux_pad_io_c_02_t pad_io_c_02;
    pad_to_mux_pad_io_c_03_t pad_io_c_03;
    pad_to_mux_pad_io_c_04_t pad_io_c_04;
    pad_to_mux_pad_io_c_05_t pad_io_c_05;
    pad_to_mux_pad_io_c_06_t pad_io_c_06;
    pad_to_mux_pad_io_c_07_t pad_io_c_07;
    pad_to_mux_pad_io_c_08_t pad_io_c_08;
    pad_to_mux_pad_io_c_09_t pad_io_c_09;
    pad_to_mux_pad_io_c_10_t pad_io_c_10;
    pad_to_mux_pad_io_c_11_t pad_io_c_11;
    pad_to_mux_pad_io_c_12_t pad_io_c_12;
    pad_to_mux_pad_io_c_13_t pad_io_c_13;
    pad_to_mux_pad_io_d_00_t pad_io_d_00;
    pad_to_mux_pad_io_d_01_t pad_io_d_01;
    pad_to_mux_pad_io_d_02_t pad_io_d_02;
    pad_to_mux_pad_io_d_03_t pad_io_d_03;
    pad_to_mux_pad_io_d_04_t pad_io_d_04;
    pad_to_mux_pad_io_d_05_t pad_io_d_05;
    pad_to_mux_pad_io_d_06_t pad_io_d_06;
    pad_to_mux_pad_io_d_07_t pad_io_d_07;
    pad_to_mux_pad_io_d_08_t pad_io_d_08;
    pad_to_mux_pad_io_d_09_t pad_io_d_09;
    pad_to_mux_pad_io_d_10_t pad_io_d_10;
    pad_to_mux_pad_io_d_11_t pad_io_d_11;
    pad_to_mux_pad_io_d_12_t pad_io_d_12;
    pad_to_mux_pad_io_d_13_t pad_io_d_13;
    pad_to_mux_pad_io_d_14_t pad_io_d_14;
    pad_to_mux_pad_io_d_15_t pad_io_d_15;
    pad_to_mux_pad_io_e_00_t pad_io_e_00;
    pad_to_mux_pad_io_e_01_t pad_io_e_01;
    pad_to_mux_pad_io_e_02_t pad_io_e_02;
    pad_to_mux_pad_io_e_03_t pad_io_e_03;
    pad_to_mux_pad_io_e_04_t pad_io_e_04;
    pad_to_mux_pad_io_e_05_t pad_io_e_05;
    pad_to_mux_pad_io_e_06_t pad_io_e_06;
    pad_to_mux_pad_io_e_07_t pad_io_e_07;
    pad_to_mux_pad_io_e_08_t pad_io_e_08;
    pad_to_mux_pad_io_e_09_t pad_io_e_09;
    pad_to_mux_pad_io_e_10_t pad_io_e_10;
    pad_to_mux_pad_io_e_11_t pad_io_e_11;
    pad_to_mux_pad_io_e_12_t pad_io_e_12;
    pad_to_mux_pad_io_e_13_t pad_io_e_13;
    pad_to_mux_pad_io_e_14_t pad_io_e_14;
    pad_to_mux_pad_io_f_00_t pad_io_f_00;
    pad_to_mux_pad_io_f_01_t pad_io_f_01;
    pad_to_mux_pad_io_f_02_t pad_io_f_02;
    pad_to_mux_pad_io_f_03_t pad_io_f_03;
    pad_to_mux_pad_io_f_04_t pad_io_f_04;
    pad_to_mux_pad_io_f_05_t pad_io_f_05;
    pad_to_mux_pad_io_f_06_t pad_io_f_06;
    pad_to_mux_pad_io_f_07_t pad_io_f_07;
    pad_to_mux_pad_io_f_08_t pad_io_f_08;
    pad_to_mux_pad_io_f_09_t pad_io_f_09;
    pad_to_mux_pad_io_f_10_t pad_io_f_10;
    pad_to_mux_pad_io_g_00_t pad_io_g_00;
    pad_to_mux_pad_io_g_01_t pad_io_g_01;
    pad_to_mux_pad_io_g_02_t pad_io_g_02;
    pad_to_mux_pad_io_g_03_t pad_io_g_03;
    pad_to_mux_pad_io_g_04_t pad_io_g_04;
    pad_to_mux_pad_io_g_05_t pad_io_g_05;
    pad_to_mux_pad_io_g_06_t pad_io_g_06;
    pad_to_mux_pad_io_g_07_t pad_io_g_07;
    pad_to_mux_pad_io_g_08_t pad_io_g_08;
    pad_to_mux_pad_io_g_09_t pad_io_g_09;
    pad_to_mux_pad_io_g_10_t pad_io_g_10;
    pad_to_mux_pad_io_g_11_t pad_io_g_11;
    pad_to_mux_pad_io_g_12_t pad_io_g_12;
    pad_to_mux_pad_io_g_13_t pad_io_g_13;
    pad_to_mux_pad_io_g_14_t pad_io_g_14;
    pad_to_mux_pad_pwm0_t pad_pwm0;
    pad_to_mux_pad_pwm1_t pad_pwm1;
    pad_to_mux_pad_pwm2_t pad_pwm2;
    pad_to_mux_pad_pwm3_t pad_pwm3;
    pad_to_mux_pad_pwm4_t pad_pwm4;
    pad_to_mux_pad_pwm5_t pad_pwm5;
    pad_to_mux_pad_pwm6_t pad_pwm6;
    pad_to_mux_pad_pwm7_t pad_pwm7;
  } pads_to_mux_t;



  // Indices definitions

  parameter PAD_MUX_GROUP_MX_A_SEL_WIDTH = 4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_DEFAULT = 4'd0;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SCL = 4'd1;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_I2C0_I2C_SDA = 4'd2;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SCL = 4'd3;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_I2C1_I2C_SDA = 4'd4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SCL = 4'd5;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_I2C2_I2C_SDA = 4'd6;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_CS = 4'd7;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MISO = 4'd8;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_MOSI = 4'd9;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_SPI0_SPI_SCK = 4'd10;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_CS = 4'd11;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MISO = 4'd12;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_MOSI = 4'd13;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_SPI1_SPI_SCK = 4'd14;
  parameter logic[3:0] PAD_MUX_GROUP_MX_A_SEL_SPI1_CS1_SPI1_CS1 = 4'd15;

  parameter PAD_MUX_GROUP_MX_B_SEL_WIDTH = 5;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_DEFAULT = 5'd0;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_CS = 5'd1;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MISO = 5'd2;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_MOSI = 5'd3;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI2_SPI_SCK = 5'd4;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_CS = 5'd5;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MISO = 5'd6;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_MOSI = 5'd7;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI3_SPI_SCK = 5'd8;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_CS = 5'd9;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MISO = 5'd10;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_MOSI = 5'd11;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI4_SPI_SCK = 5'd12;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_CS = 5'd13;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MISO = 5'd14;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_MOSI = 5'd15;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI5_SPI_SCK = 5'd16;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_CS = 5'd17;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MISO = 5'd18;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_MOSI = 5'd19;
  parameter logic[4:0] PAD_MUX_GROUP_MX_B_SEL_SPI6_SPI_SCK = 5'd20;

  parameter PAD_MUX_GROUP_MX_C_SEL_WIDTH = 4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_C_SEL_DEFAULT = 4'd0;
  parameter logic[3:0] PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_CSN = 4'd1;
  parameter logic[3:0] PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SCK = 4'd2;
  parameter logic[3:0] PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD0 = 4'd3;
  parameter logic[3:0] PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD1 = 4'd4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD2 = 4'd5;
  parameter logic[3:0] PAD_MUX_GROUP_MX_C_SEL_QSPI_QSPI_SD3 = 4'd6;
  parameter logic[3:0] PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CLK = 4'd7;
  parameter logic[3:0] PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_CMD = 4'd8;
  parameter logic[3:0] PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA0 = 4'd9;
  parameter logic[3:0] PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA1 = 4'd10;
  parameter logic[3:0] PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA2 = 4'd11;
  parameter logic[3:0] PAD_MUX_GROUP_MX_C_SEL_SDIO0_SDIO_DATA3 = 4'd12;

  parameter PAD_MUX_GROUP_MX_D_SEL_WIDTH = 5;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_DEFAULT = 5'd0;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART0_UART_RX = 5'd1;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART0_UART_TX = 5'd2;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART1_UART_RX = 5'd3;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART1_UART_TX = 5'd4;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_CTS = 5'd5;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RTS = 5'd6;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_RX = 5'd7;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART_CF0_UART_TX = 5'd8;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_CTS = 5'd9;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RTS = 5'd10;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_RX = 5'd11;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART_CF1_UART_TX = 5'd12;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_CTS = 5'd13;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RTS = 5'd14;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_RX = 5'd15;
  parameter logic[4:0] PAD_MUX_GROUP_MX_D_SEL_UART_CF2_UART_TX = 5'd16;

  parameter PAD_MUX_GROUP_MX_E_SEL_WIDTH = 5;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_DEFAULT = 5'd0;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_RX = 5'd1;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN1_TX = 5'd2;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_RX = 5'd3;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAN2_CAN_CAN2_TX = 5'd4;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA0_I = 5'd5;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA1_I = 5'd6;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA2_I = 5'd7;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA3_I = 5'd8;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA4_I = 5'd9;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA5_I = 5'd10;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA6_I = 5'd11;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_DATA7_I = 5'd12;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_HSYNC = 5'd13;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_PCLK = 5'd14;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_CAM0_CAM_VSYNC = 5'd15;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SCL = 5'd16;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_I2C3_I2C_SDA = 5'd17;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_CS = 5'd18;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MISO = 5'd19;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_MOSI = 5'd20;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_SPI7_SPI_SCK = 5'd21;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_CS = 5'd22;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MISO = 5'd23;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_MOSI = 5'd24;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_SPI8_SPI_SCK = 5'd25;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_CS = 5'd26;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MISO = 5'd27;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_MOSI = 5'd28;
  parameter logic[4:0] PAD_MUX_GROUP_MX_E_SEL_SPI9_SPI_SCK = 5'd29;

  parameter PAD_MUX_GROUP_MX_F_SEL_WIDTH = 5;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_DEFAULT = 5'd0;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA0_I = 5'd1;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA1_I = 5'd2;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA2_I = 5'd3;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA3_I = 5'd4;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA4_I = 5'd5;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA5_I = 5'd6;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA6_I = 5'd7;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_DATA7_I = 5'd8;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_HSYNC = 5'd9;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_PCLK = 5'd10;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_CAM1_CAM_VSYNC = 5'd11;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SCL = 5'd12;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_I2C4_I2C_SDA = 5'd13;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_CS = 5'd14;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MISO = 5'd15;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_MOSI = 5'd16;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_SPI10_SPI_SCK = 5'd17;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_UART2_UART_RX = 5'd18;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_UART2_UART_TX = 5'd19;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_UART3_UART_RX = 5'd20;
  parameter logic[4:0] PAD_MUX_GROUP_MX_F_SEL_UART3_UART_TX = 5'd21;

  parameter PAD_MUX_GROUP_MX_G_SEL_WIDTH = 5;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_DEFAULT = 5'd0;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RST = 5'd1;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCK = 5'd2;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXCTL = 5'd3;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD0 = 5'd4;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD1 = 5'd5;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD2 = 5'd6;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_RXD3 = 5'd7;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCK = 5'd8;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXCTL = 5'd9;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD0 = 5'd10;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD1 = 5'd11;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD2 = 5'd12;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_ETH0_ETH_TXD3 = 5'd13;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CLK = 5'd14;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_CMD = 5'd15;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA0 = 5'd16;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA1 = 5'd17;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA2 = 5'd18;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_SDIO1_SDIO_DATA3 = 5'd19;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_CTS = 5'd20;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RTS = 5'd21;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_RX = 5'd22;
  parameter logic[4:0] PAD_MUX_GROUP_MX_G_SEL_UART_CF3_UART_TX = 5'd23;

  parameter PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_WIDTH = 4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_DEFAULT = 4'd0;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM0 = 4'd1;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM1 = 4'd2;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM2 = 4'd3;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM3 = 4'd4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM4 = 4'd5;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM5 = 4'd6;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM6 = 4'd7;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM0_SEL_PWM_PWM7 = 4'd8;

  parameter PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_WIDTH = 4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_DEFAULT = 4'd0;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM0 = 4'd1;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM1 = 4'd2;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM2 = 4'd3;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM3 = 4'd4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM4 = 4'd5;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM5 = 4'd6;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM6 = 4'd7;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM1_SEL_PWM_PWM7 = 4'd8;

  parameter PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_WIDTH = 4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_DEFAULT = 4'd0;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM0 = 4'd1;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM1 = 4'd2;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM2 = 4'd3;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM3 = 4'd4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM4 = 4'd5;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM5 = 4'd6;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM6 = 4'd7;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM2_SEL_PWM_PWM7 = 4'd8;

  parameter PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_WIDTH = 4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_DEFAULT = 4'd0;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM0 = 4'd1;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM1 = 4'd2;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM2 = 4'd3;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM3 = 4'd4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM4 = 4'd5;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM5 = 4'd6;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM6 = 4'd7;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM3_SEL_PWM_PWM7 = 4'd8;

  parameter PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_WIDTH = 4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_DEFAULT = 4'd0;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM0 = 4'd1;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM1 = 4'd2;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM2 = 4'd3;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM3 = 4'd4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM4 = 4'd5;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM5 = 4'd6;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM6 = 4'd7;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM4_SEL_PWM_PWM7 = 4'd8;

  parameter PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_WIDTH = 4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_DEFAULT = 4'd0;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM0 = 4'd1;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM1 = 4'd2;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM2 = 4'd3;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM3 = 4'd4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM4 = 4'd5;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM5 = 4'd6;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM6 = 4'd7;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM5_SEL_PWM_PWM7 = 4'd8;

  parameter PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_WIDTH = 4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_DEFAULT = 4'd0;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM0 = 4'd1;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM1 = 4'd2;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM2 = 4'd3;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM3 = 4'd4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM4 = 4'd5;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM5 = 4'd6;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM6 = 4'd7;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM6_SEL_PWM_PWM7 = 4'd8;

  parameter PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_WIDTH = 4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_DEFAULT = 4'd0;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM0 = 4'd1;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM1 = 4'd2;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM2 = 4'd3;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM3 = 4'd4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM4 = 4'd5;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM5 = 4'd6;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM6 = 4'd7;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_PAD_PWM7_SEL_PWM_PWM7 = 4'd8;

  // Dynamic Pad  instance index

  parameter PORT_MUX_GROUP_MX_A_SEL_WIDTH = 4;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_00 = 4'd0;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_01 = 4'd1;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_02 = 4'd2;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_03 = 4'd3;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_04 = 4'd4;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_05 = 4'd5;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_06 = 4'd6;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_07 = 4'd7;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_08 = 4'd8;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_09 = 4'd9;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_10 = 4'd10;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_11 = 4'd11;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_12 = 4'd12;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_13 = 4'd13;
  parameter logic[3:0] PORT_MUX_GROUP_MX_A_SEL_PAD_IO_A_14 = 4'd14;

  parameter PORT_MUX_GROUP_MX_B_SEL_WIDTH = 5;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_00 = 5'd0;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_01 = 5'd1;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_02 = 5'd2;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_03 = 5'd3;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_04 = 5'd4;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_05 = 5'd5;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_06 = 5'd6;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_07 = 5'd7;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_08 = 5'd8;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_09 = 5'd9;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_10 = 5'd10;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_11 = 5'd11;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_12 = 5'd12;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_13 = 5'd13;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_14 = 5'd14;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_15 = 5'd15;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_16 = 5'd16;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_17 = 5'd17;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_18 = 5'd18;
  parameter logic[4:0] PORT_MUX_GROUP_MX_B_SEL_PAD_IO_B_19 = 5'd19;

  parameter PORT_MUX_GROUP_MX_C_SEL_WIDTH = 4;
  parameter logic[3:0] PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_00 = 4'd0;
  parameter logic[3:0] PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_01 = 4'd1;
  parameter logic[3:0] PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_02 = 4'd2;
  parameter logic[3:0] PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_03 = 4'd3;
  parameter logic[3:0] PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_04 = 4'd4;
  parameter logic[3:0] PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_05 = 4'd5;
  parameter logic[3:0] PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_06 = 4'd6;
  parameter logic[3:0] PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_07 = 4'd7;
  parameter logic[3:0] PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_08 = 4'd8;
  parameter logic[3:0] PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_09 = 4'd9;
  parameter logic[3:0] PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_10 = 4'd10;
  parameter logic[3:0] PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_11 = 4'd11;
  parameter logic[3:0] PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_12 = 4'd12;
  parameter logic[3:0] PORT_MUX_GROUP_MX_C_SEL_PAD_IO_C_13 = 4'd13;

  parameter PORT_MUX_GROUP_MX_D_SEL_WIDTH = 4;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_00 = 4'd0;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_01 = 4'd1;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_02 = 4'd2;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_03 = 4'd3;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_04 = 4'd4;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_05 = 4'd5;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_06 = 4'd6;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_07 = 4'd7;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_08 = 4'd8;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_09 = 4'd9;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_10 = 4'd10;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_11 = 4'd11;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_12 = 4'd12;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_13 = 4'd13;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_14 = 4'd14;
  parameter logic[3:0] PORT_MUX_GROUP_MX_D_SEL_PAD_IO_D_15 = 4'd15;

  parameter PORT_MUX_GROUP_MX_E_SEL_WIDTH = 4;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_00 = 4'd0;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_01 = 4'd1;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_02 = 4'd2;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_03 = 4'd3;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_04 = 4'd4;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_05 = 4'd5;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_06 = 4'd6;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_07 = 4'd7;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_08 = 4'd8;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_09 = 4'd9;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_10 = 4'd10;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_11 = 4'd11;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_12 = 4'd12;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_13 = 4'd13;
  parameter logic[3:0] PORT_MUX_GROUP_MX_E_SEL_PAD_IO_E_14 = 4'd14;

  parameter PORT_MUX_GROUP_MX_F_SEL_WIDTH = 4;
  parameter logic[3:0] PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_00 = 4'd0;
  parameter logic[3:0] PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_01 = 4'd1;
  parameter logic[3:0] PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_02 = 4'd2;
  parameter logic[3:0] PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_03 = 4'd3;
  parameter logic[3:0] PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_04 = 4'd4;
  parameter logic[3:0] PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_05 = 4'd5;
  parameter logic[3:0] PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_06 = 4'd6;
  parameter logic[3:0] PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_07 = 4'd7;
  parameter logic[3:0] PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_08 = 4'd8;
  parameter logic[3:0] PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_09 = 4'd9;
  parameter logic[3:0] PORT_MUX_GROUP_MX_F_SEL_PAD_IO_F_10 = 4'd10;

  parameter PORT_MUX_GROUP_MX_G_SEL_WIDTH = 4;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_00 = 4'd0;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_01 = 4'd1;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_02 = 4'd2;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_03 = 4'd3;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_04 = 4'd4;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_05 = 4'd5;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_06 = 4'd6;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_07 = 4'd7;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_08 = 4'd8;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_09 = 4'd9;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_10 = 4'd10;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_11 = 4'd11;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_12 = 4'd12;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_13 = 4'd13;
  parameter logic[3:0] PORT_MUX_GROUP_MX_G_SEL_PAD_IO_G_14 = 4'd14;

  parameter PORT_MUX_GROUP_MX_PWM_SEL_WIDTH = 3;
  parameter logic[2:0] PORT_MUX_GROUP_MX_PWM_SEL_PAD_PWM0 = 3'd0;
  parameter logic[2:0] PORT_MUX_GROUP_MX_PWM_SEL_PAD_PWM1 = 3'd1;
  parameter logic[2:0] PORT_MUX_GROUP_MX_PWM_SEL_PAD_PWM2 = 3'd2;
  parameter logic[2:0] PORT_MUX_GROUP_MX_PWM_SEL_PAD_PWM3 = 3'd3;
  parameter logic[2:0] PORT_MUX_GROUP_MX_PWM_SEL_PAD_PWM4 = 3'd4;
  parameter logic[2:0] PORT_MUX_GROUP_MX_PWM_SEL_PAD_PWM5 = 3'd5;
  parameter logic[2:0] PORT_MUX_GROUP_MX_PWM_SEL_PAD_PWM6 = 3'd6;
  parameter logic[2:0] PORT_MUX_GROUP_MX_PWM_SEL_PAD_PWM7 = 3'd7;
endpackage : pkg_internal_alsaqr_periph_padframe_periphs
