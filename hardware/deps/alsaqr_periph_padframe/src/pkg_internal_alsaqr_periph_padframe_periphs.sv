// File auto-generated by Padrick 0.1.0.post0.dev51+g806b078.dirty
package pkg_internal_alsaqr_periph_padframe_periphs;
  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_00_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_01_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_02_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_03_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_04_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_05_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_06_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_07_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_08_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_08_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_09_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_09_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_10_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_10_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_11_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_11_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_12_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_12_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_13_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_13_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_14_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_14_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_15_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_15_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_16_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_16_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_17_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_17_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_18_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_18_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_19_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_19_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_20_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_20_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_21_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_21_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_22_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_22_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_23_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_23_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_24_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_24_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_25_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_25_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_26_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_26_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_27_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_27_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_28_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_28_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_29_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_29_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_00_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_01_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_02_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_03_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_04_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_05_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_06_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_07_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_08_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_08_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_09_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_09_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_10_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_10_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_11_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_11_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_12_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_12_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_13_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_13_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_14_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_14_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_15_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_15_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_16_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_16_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_17_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_17_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_18_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_18_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_19_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_19_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_20_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_20_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_21_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_21_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_22_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_22_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_23_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_23_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_24_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_24_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_25_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_25_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_26_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_26_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_27_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_27_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_28_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_28_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_29_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_29_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_30_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_30_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_31_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_31_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_32_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_32_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_33_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_33_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_34_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_34_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_35_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_35_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_36_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_36_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_37_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_37_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_38_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_38_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_39_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_39_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_40_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_40_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_41_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_41_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_42_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_42_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_43_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_43_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_44_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_44_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_45_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_45_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_46_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_46_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_47_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_47_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_ot_spi_00_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_ot_spi_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_ot_spi_01_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_ot_spi_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_ot_spi_02_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_ot_spi_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_ot_spi_03_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_ot_spi_03_t;

  typedef struct packed{
    mux_to_pad_a_00_t a_00;
    mux_to_pad_a_01_t a_01;
    mux_to_pad_a_02_t a_02;
    mux_to_pad_a_03_t a_03;
    mux_to_pad_a_04_t a_04;
    mux_to_pad_a_05_t a_05;
    mux_to_pad_a_06_t a_06;
    mux_to_pad_a_07_t a_07;
    mux_to_pad_a_08_t a_08;
    mux_to_pad_a_09_t a_09;
    mux_to_pad_a_10_t a_10;
    mux_to_pad_a_11_t a_11;
    mux_to_pad_a_12_t a_12;
    mux_to_pad_a_13_t a_13;
    mux_to_pad_a_14_t a_14;
    mux_to_pad_a_15_t a_15;
    mux_to_pad_a_16_t a_16;
    mux_to_pad_a_17_t a_17;
    mux_to_pad_a_18_t a_18;
    mux_to_pad_a_19_t a_19;
    mux_to_pad_a_20_t a_20;
    mux_to_pad_a_21_t a_21;
    mux_to_pad_a_22_t a_22;
    mux_to_pad_a_23_t a_23;
    mux_to_pad_a_24_t a_24;
    mux_to_pad_a_25_t a_25;
    mux_to_pad_a_26_t a_26;
    mux_to_pad_a_27_t a_27;
    mux_to_pad_a_28_t a_28;
    mux_to_pad_a_29_t a_29;
    mux_to_pad_b_00_t b_00;
    mux_to_pad_b_01_t b_01;
    mux_to_pad_b_02_t b_02;
    mux_to_pad_b_03_t b_03;
    mux_to_pad_b_04_t b_04;
    mux_to_pad_b_05_t b_05;
    mux_to_pad_b_06_t b_06;
    mux_to_pad_b_07_t b_07;
    mux_to_pad_b_08_t b_08;
    mux_to_pad_b_09_t b_09;
    mux_to_pad_b_10_t b_10;
    mux_to_pad_b_11_t b_11;
    mux_to_pad_b_12_t b_12;
    mux_to_pad_b_13_t b_13;
    mux_to_pad_b_14_t b_14;
    mux_to_pad_b_15_t b_15;
    mux_to_pad_b_16_t b_16;
    mux_to_pad_b_17_t b_17;
    mux_to_pad_b_18_t b_18;
    mux_to_pad_b_19_t b_19;
    mux_to_pad_b_20_t b_20;
    mux_to_pad_b_21_t b_21;
    mux_to_pad_b_22_t b_22;
    mux_to_pad_b_23_t b_23;
    mux_to_pad_b_24_t b_24;
    mux_to_pad_b_25_t b_25;
    mux_to_pad_b_26_t b_26;
    mux_to_pad_b_27_t b_27;
    mux_to_pad_b_28_t b_28;
    mux_to_pad_b_29_t b_29;
    mux_to_pad_b_30_t b_30;
    mux_to_pad_b_31_t b_31;
    mux_to_pad_b_32_t b_32;
    mux_to_pad_b_33_t b_33;
    mux_to_pad_b_34_t b_34;
    mux_to_pad_b_35_t b_35;
    mux_to_pad_b_36_t b_36;
    mux_to_pad_b_37_t b_37;
    mux_to_pad_b_38_t b_38;
    mux_to_pad_b_39_t b_39;
    mux_to_pad_b_40_t b_40;
    mux_to_pad_b_41_t b_41;
    mux_to_pad_b_42_t b_42;
    mux_to_pad_b_43_t b_43;
    mux_to_pad_b_44_t b_44;
    mux_to_pad_b_45_t b_45;
    mux_to_pad_b_46_t b_46;
    mux_to_pad_b_47_t b_47;
    mux_to_pad_ot_spi_00_t ot_spi_00;
    mux_to_pad_ot_spi_01_t ot_spi_01;
    mux_to_pad_ot_spi_02_t ot_spi_02;
    mux_to_pad_ot_spi_03_t ot_spi_03;
  } mux_to_pads_t;

  typedef struct packed{
    pad_to_mux_a_00_t a_00;
    pad_to_mux_a_01_t a_01;
    pad_to_mux_a_02_t a_02;
    pad_to_mux_a_03_t a_03;
    pad_to_mux_a_04_t a_04;
    pad_to_mux_a_05_t a_05;
    pad_to_mux_a_06_t a_06;
    pad_to_mux_a_07_t a_07;
    pad_to_mux_a_08_t a_08;
    pad_to_mux_a_09_t a_09;
    pad_to_mux_a_10_t a_10;
    pad_to_mux_a_11_t a_11;
    pad_to_mux_a_12_t a_12;
    pad_to_mux_a_13_t a_13;
    pad_to_mux_a_14_t a_14;
    pad_to_mux_a_15_t a_15;
    pad_to_mux_a_16_t a_16;
    pad_to_mux_a_17_t a_17;
    pad_to_mux_a_18_t a_18;
    pad_to_mux_a_19_t a_19;
    pad_to_mux_a_20_t a_20;
    pad_to_mux_a_21_t a_21;
    pad_to_mux_a_22_t a_22;
    pad_to_mux_a_23_t a_23;
    pad_to_mux_a_24_t a_24;
    pad_to_mux_a_25_t a_25;
    pad_to_mux_a_26_t a_26;
    pad_to_mux_a_27_t a_27;
    pad_to_mux_a_28_t a_28;
    pad_to_mux_a_29_t a_29;
    pad_to_mux_b_00_t b_00;
    pad_to_mux_b_01_t b_01;
    pad_to_mux_b_02_t b_02;
    pad_to_mux_b_03_t b_03;
    pad_to_mux_b_04_t b_04;
    pad_to_mux_b_05_t b_05;
    pad_to_mux_b_06_t b_06;
    pad_to_mux_b_07_t b_07;
    pad_to_mux_b_08_t b_08;
    pad_to_mux_b_09_t b_09;
    pad_to_mux_b_10_t b_10;
    pad_to_mux_b_11_t b_11;
    pad_to_mux_b_12_t b_12;
    pad_to_mux_b_13_t b_13;
    pad_to_mux_b_14_t b_14;
    pad_to_mux_b_15_t b_15;
    pad_to_mux_b_16_t b_16;
    pad_to_mux_b_17_t b_17;
    pad_to_mux_b_18_t b_18;
    pad_to_mux_b_19_t b_19;
    pad_to_mux_b_20_t b_20;
    pad_to_mux_b_21_t b_21;
    pad_to_mux_b_22_t b_22;
    pad_to_mux_b_23_t b_23;
    pad_to_mux_b_24_t b_24;
    pad_to_mux_b_25_t b_25;
    pad_to_mux_b_26_t b_26;
    pad_to_mux_b_27_t b_27;
    pad_to_mux_b_28_t b_28;
    pad_to_mux_b_29_t b_29;
    pad_to_mux_b_30_t b_30;
    pad_to_mux_b_31_t b_31;
    pad_to_mux_b_32_t b_32;
    pad_to_mux_b_33_t b_33;
    pad_to_mux_b_34_t b_34;
    pad_to_mux_b_35_t b_35;
    pad_to_mux_b_36_t b_36;
    pad_to_mux_b_37_t b_37;
    pad_to_mux_b_38_t b_38;
    pad_to_mux_b_39_t b_39;
    pad_to_mux_b_40_t b_40;
    pad_to_mux_b_41_t b_41;
    pad_to_mux_b_42_t b_42;
    pad_to_mux_b_43_t b_43;
    pad_to_mux_b_44_t b_44;
    pad_to_mux_b_45_t b_45;
    pad_to_mux_b_46_t b_46;
    pad_to_mux_b_47_t b_47;
    pad_to_mux_ot_spi_00_t ot_spi_00;
    pad_to_mux_ot_spi_01_t ot_spi_01;
    pad_to_mux_ot_spi_02_t ot_spi_02;
    pad_to_mux_ot_spi_03_t ot_spi_03;
  } pads_to_mux_t;



  // Indices definitions

  parameter PAD_MUX_GROUP_A_00_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_00_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_00_SEL_CAN0_CAN_TX = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_00_SEL_GPIO_A_GPIO0 = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_A_00_SEL_UART_CORE_UART_TX = 2'd3;

  parameter PAD_MUX_GROUP_A_01_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_01_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_01_SEL_CAN0_CAN_RX = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_01_SEL_GPIO_A_GPIO1 = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_A_01_SEL_UART_CORE_UART_RX = 2'd3;

  parameter PAD_MUX_GROUP_A_02_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_02_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_02_SEL_CAN1_CAN_TX = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_02_SEL_GPIO_A_GPIO2 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_02_SEL_QSPI_LINUX_QSPI_SCK = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_02_SEL_SDIO0_SDIO_DATA0 = 3'd4;

  parameter PAD_MUX_GROUP_A_03_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_03_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_03_SEL_CAN1_CAN_RX = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_03_SEL_GPIO_A_GPIO3 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_03_SEL_QSPI_LINUX_QSPI_CSN = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_03_SEL_SDIO0_SDIO_DATA1 = 3'd4;

  parameter PAD_MUX_GROUP_A_04_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_04_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_04_SEL_FLL_SOC_0_SOC_CLK_0 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_04_SEL_GPIO_A_GPIO4 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_04_SEL_QSPI_LINUX_QSPI_SD0 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_04_SEL_SDIO0_SDIO_DATA2 = 3'd4;

  parameter PAD_MUX_GROUP_A_05_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_05_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_05_SEL_GPIO_A_GPIO5 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_05_SEL_QSPI_LINUX_QSPI_SD1 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_05_SEL_SDIO0_SDIO_DATA3 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_05_SEL_USART1_UART_TX = 3'd4;

  parameter PAD_MUX_GROUP_A_06_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_06_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_06_SEL_GPIO_A_GPIO6 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_06_SEL_QSPI_LINUX_QSPI_SD2 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_06_SEL_SDIO0_SDIO_CLK = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_06_SEL_USART1_UART_RX = 3'd4;

  parameter PAD_MUX_GROUP_A_07_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_07_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_07_SEL_GPIO_A_GPIO7 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_07_SEL_QSPI_LINUX_QSPI_SD3 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_07_SEL_SDIO0_SDIO_CMD = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_07_SEL_USART1_UART_RTS = 3'd4;

  parameter PAD_MUX_GROUP_A_08_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_08_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_08_SEL_GPIO_A_GPIO8 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_08_SEL_I2C0_I2C_SCL = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_08_SEL_PWM0_PWM0 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_08_SEL_USART1_UART_CTS = 3'd4;

  parameter PAD_MUX_GROUP_A_09_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_09_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_09_SEL_GPIO_A_GPIO9 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_09_SEL_I2C0_I2C_SDA = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_09_SEL_PWM0_PWM1 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_09_SEL_SDIO1_SDIO_DATA0 = 3'd4;

  parameter PAD_MUX_GROUP_A_10_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_10_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_10_SEL_GPIO_A_GPIO10 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_10_SEL_PWM0_PWM2 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_10_SEL_PWM1_PWM0 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_10_SEL_SDIO1_SDIO_DATA1 = 3'd4;

  parameter PAD_MUX_GROUP_A_11_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_11_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_11_SEL_GPIO_A_GPIO11 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_11_SEL_PWM0_PWM3 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_11_SEL_PWM1_PWM1 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_11_SEL_SDIO1_SDIO_DATA2 = 3'd4;

  parameter PAD_MUX_GROUP_A_12_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_12_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_12_SEL_GPIO_A_GPIO12 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_12_SEL_I2C0_I2C_SCL = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_12_SEL_PWM1_PWM2 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_12_SEL_SDIO1_SDIO_DATA3 = 3'd4;

  parameter PAD_MUX_GROUP_A_13_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_13_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_13_SEL_GPIO_A_GPIO13 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_13_SEL_I2C0_I2C_SDA = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_13_SEL_PWM1_PWM3 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_13_SEL_SDIO1_SDIO_CLK = 3'd4;

  parameter PAD_MUX_GROUP_A_14_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_14_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_14_SEL_GPIO_A_GPIO14 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_14_SEL_SDIO1_SDIO_CMD = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_14_SEL_SPI0_SPI_SCK = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_14_SEL_UART0_UART_TX = 3'd4;

  parameter PAD_MUX_GROUP_A_15_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_15_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_15_SEL_ETH_ETH_RST = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_15_SEL_GPIO_A_GPIO15 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_15_SEL_SPI0_SPI_CS0 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_15_SEL_UART0_UART_RX = 3'd4;

  parameter PAD_MUX_GROUP_A_16_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_16_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_16_SEL_ETH_ETH_RXCK = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_16_SEL_GPIO_A_GPIO16 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_16_SEL_I2C1_I2C_SCL = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_16_SEL_SPI0_SPI_MISO = 3'd4;

  parameter PAD_MUX_GROUP_A_17_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_17_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_17_SEL_ETH_ETH_RXCTL = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_17_SEL_GPIO_A_GPIO17 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_17_SEL_I2C1_I2C_SDA = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_17_SEL_SPI0_SPI_MOSI = 3'd4;

  parameter PAD_MUX_GROUP_A_18_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_18_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_18_SEL_CAM0_CAM_PCLK = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_18_SEL_ETH_ETH_RXD0 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_18_SEL_GPIO_A_GPIO18 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_18_SEL_SPI2_SPI_SCK = 3'd4;

  parameter PAD_MUX_GROUP_A_19_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_19_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_19_SEL_CAM0_CAM_VSYNC = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_19_SEL_ETH_ETH_RXD1 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_19_SEL_GPIO_A_GPIO19 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_19_SEL_SPI2_SPI_CS0 = 3'd4;

  parameter PAD_MUX_GROUP_A_20_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_20_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_20_SEL_CAM0_CAM_HSYNC = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_20_SEL_ETH_ETH_RXD2 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_20_SEL_GPIO_A_GPIO20 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_20_SEL_SPI2_SPI_MISO = 3'd4;

  parameter PAD_MUX_GROUP_A_21_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_21_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_21_SEL_CAM0_CAM_DATA0_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_21_SEL_ETH_ETH_RXD3 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_21_SEL_GPIO_A_GPIO21 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_21_SEL_SPI2_SPI_MOSI = 3'd4;

  parameter PAD_MUX_GROUP_A_22_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_22_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_22_SEL_CAM0_CAM_DATA1_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_22_SEL_ETH_ETH_TXCK = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_22_SEL_GPIO_A_GPIO22 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_22_SEL_SPI3_SPI_SCK = 3'd4;

  parameter PAD_MUX_GROUP_A_23_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_23_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_23_SEL_CAM0_CAM_DATA2_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_23_SEL_ETH_ETH_TXCTL = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_23_SEL_GPIO_A_GPIO23 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_23_SEL_SPI3_SPI_CS0 = 3'd4;

  parameter PAD_MUX_GROUP_A_24_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_24_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_24_SEL_CAM0_CAM_DATA3_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_24_SEL_ETH_ETH_TXD0 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_24_SEL_GPIO_A_GPIO24 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_24_SEL_SPI3_SPI_MISO = 3'd4;

  parameter PAD_MUX_GROUP_A_25_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_25_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_25_SEL_CAM0_CAM_DATA4_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_25_SEL_ETH_ETH_TXD1 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_25_SEL_GPIO_A_GPIO25 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_25_SEL_SPI3_SPI_MOSI = 3'd4;

  parameter PAD_MUX_GROUP_A_26_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_26_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_26_SEL_CAM0_CAM_DATA5_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_26_SEL_ETH_ETH_TXD2 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_26_SEL_GPIO_A_GPIO26 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_26_SEL_UART0_UART_TX = 3'd4;

  parameter PAD_MUX_GROUP_A_27_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_27_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_27_SEL_CAM0_CAM_DATA6_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_27_SEL_ETH_ETH_TXD3 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_27_SEL_GPIO_A_GPIO27 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_27_SEL_UART0_UART_RX = 3'd4;

  parameter PAD_MUX_GROUP_A_28_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_28_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_28_SEL_CAM0_CAM_DATA7_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_28_SEL_ETH_ETH_MDIO = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_28_SEL_GPIO_A_GPIO28 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_28_SEL_I2C1_I2C_SCL = 3'd4;

  parameter PAD_MUX_GROUP_A_29_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_A_29_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_A_29_SEL_ETH_ETH_MDC = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_A_29_SEL_FLL_SOC_0_SOC_CLK_0 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_A_29_SEL_GPIO_A_GPIO29 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_A_29_SEL_I2C1_I2C_SDA = 3'd4;

  parameter PAD_MUX_GROUP_B_00_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_00_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_00_SEL_GPIO_B_GPIO0 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_00_SEL_SDIO1_SDIO_DATA0 = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_00_SEL_USART0_UART_TX = 2'd3;

  parameter PAD_MUX_GROUP_B_01_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_01_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_01_SEL_GPIO_B_GPIO1 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_01_SEL_SDIO1_SDIO_DATA1 = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_01_SEL_USART0_UART_RX = 2'd3;

  parameter PAD_MUX_GROUP_B_02_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_02_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_02_SEL_GPIO_B_GPIO2 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_02_SEL_SDIO1_SDIO_DATA2 = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_02_SEL_USART0_UART_RTS = 2'd3;

  parameter PAD_MUX_GROUP_B_03_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_03_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_03_SEL_GPIO_B_GPIO3 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_03_SEL_SDIO1_SDIO_DATA3 = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_03_SEL_USART0_UART_CTS = 2'd3;

  parameter PAD_MUX_GROUP_B_04_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_04_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_04_SEL_GPIO_B_GPIO4 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_04_SEL_SDIO1_SDIO_CLK = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_04_SEL_SPI4_SPI_SCK = 2'd3;

  parameter PAD_MUX_GROUP_B_05_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_05_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_05_SEL_GPIO_B_GPIO5 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_05_SEL_SDIO1_SDIO_CMD = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_05_SEL_SPI4_SPI_CS0 = 2'd3;

  parameter PAD_MUX_GROUP_B_06_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_06_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_06_SEL_GPIO_B_GPIO6 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_06_SEL_SPI0_SPI_SCK = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_06_SEL_SPI4_SPI_MISO = 2'd3;

  parameter PAD_MUX_GROUP_B_07_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_07_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_07_SEL_GPIO_B_GPIO7 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_07_SEL_SPI0_SPI_CS0 = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_07_SEL_SPI4_SPI_MOSI = 2'd3;

  parameter PAD_MUX_GROUP_B_08_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_08_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_08_SEL_GPIO_B_GPIO8 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_08_SEL_I2C2_I2C_SCL = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_08_SEL_SPI0_SPI_MISO = 2'd3;

  parameter PAD_MUX_GROUP_B_09_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_09_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_09_SEL_GPIO_B_GPIO9 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_09_SEL_I2C2_I2C_SDA = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_09_SEL_SPI0_SPI_MOSI = 2'd3;

  parameter PAD_MUX_GROUP_B_10_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_10_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_10_SEL_GPIO_B_GPIO10 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_10_SEL_SPI7_SPI_SCK = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_10_SEL_USART0_UART_TX = 2'd3;

  parameter PAD_MUX_GROUP_B_11_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_11_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_11_SEL_GPIO_B_GPIO11 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_11_SEL_SPI7_SPI_MISO = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_11_SEL_USART0_UART_RX = 2'd3;

  parameter PAD_MUX_GROUP_B_12_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_12_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_12_SEL_GPIO_B_GPIO12 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_12_SEL_SPI7_SPI_MOSI = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_12_SEL_USART0_UART_RTS = 2'd3;

  parameter PAD_MUX_GROUP_B_13_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_13_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_13_SEL_GPIO_B_GPIO13 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_13_SEL_SPI7_SPI_CS0 = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_13_SEL_USART0_UART_CTS = 2'd3;

  parameter PAD_MUX_GROUP_B_14_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_14_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_14_SEL_GPIO_B_GPIO14 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_14_SEL_SPI4_SPI_SCK = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_14_SEL_SPI7_SPI_CS1 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_14_SEL_UART0_UART_TX = 3'd4;

  parameter PAD_MUX_GROUP_B_15_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_15_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_15_SEL_GPIO_B_GPIO15 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_15_SEL_I2C4_I2C_SCL = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_15_SEL_SPI4_SPI_CS0 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_15_SEL_UART0_UART_RX = 3'd4;

  parameter PAD_MUX_GROUP_B_16_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_16_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_16_SEL_GPIO_B_GPIO16 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_16_SEL_I2C1_I2C_SCL = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_16_SEL_I2C4_I2C_SDA = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_16_SEL_SPI4_SPI_MISO = 3'd4;

  parameter PAD_MUX_GROUP_B_17_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_17_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_17_SEL_GPIO_B_GPIO17 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_17_SEL_I2C1_I2C_SDA = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_17_SEL_SPI4_SPI_MOSI = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_17_SEL_UART1_UART_TX = 3'd4;

  parameter PAD_MUX_GROUP_B_18_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_18_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_18_SEL_GPIO_B_GPIO18 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_18_SEL_SPI2_SPI_SCK = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_18_SEL_SPI5_SPI_SCK = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_18_SEL_UART1_UART_RX = 3'd4;

  parameter PAD_MUX_GROUP_B_19_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_19_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_19_SEL_GPIO_B_GPIO19 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_19_SEL_SPI2_SPI_CS0 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_19_SEL_SPI5_SPI_CS0 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_19_SEL_USART1_UART_TX = 3'd4;

  parameter PAD_MUX_GROUP_B_20_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_20_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_20_SEL_GPIO_B_GPIO20 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_20_SEL_SPI2_SPI_MISO = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_20_SEL_SPI5_SPI_MISO = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_20_SEL_USART1_UART_RX = 3'd4;

  parameter PAD_MUX_GROUP_B_21_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_21_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_21_SEL_GPIO_B_GPIO21 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_21_SEL_SPI2_SPI_MOSI = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_21_SEL_SPI5_SPI_MOSI = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_21_SEL_USART1_UART_RTS = 3'd4;

  parameter PAD_MUX_GROUP_B_22_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_22_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_22_SEL_GPIO_B_GPIO22 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_22_SEL_I2C3_I2C_SCL = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_22_SEL_SPI3_SPI_SCK = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_22_SEL_USART1_UART_CTS = 3'd4;

  parameter PAD_MUX_GROUP_B_23_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_23_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_23_SEL_ETH_ETH_RST = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_23_SEL_GPIO_B_GPIO23 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_23_SEL_I2C3_I2C_SDA = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_23_SEL_SPI3_SPI_CS0 = 3'd4;

  parameter PAD_MUX_GROUP_B_24_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_24_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_24_SEL_ETH_ETH_RXCK = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_24_SEL_GPIO_B_GPIO24 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_24_SEL_SPI3_SPI_MISO = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_24_SEL_SPI6_SPI_SCK = 3'd4;

  parameter PAD_MUX_GROUP_B_25_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_25_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_25_SEL_ETH_ETH_RXCTL = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_25_SEL_GPIO_B_GPIO25 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_25_SEL_SPI3_SPI_MOSI = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_25_SEL_SPI6_SPI_CS0 = 3'd4;

  parameter PAD_MUX_GROUP_B_26_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_26_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_26_SEL_ETH_ETH_RXD0 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_26_SEL_GPIO_B_GPIO26 = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_26_SEL_SPI6_SPI_MISO = 2'd3;

  parameter PAD_MUX_GROUP_B_27_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_27_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_27_SEL_ETH_ETH_RXD1 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_27_SEL_GPIO_B_GPIO27 = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_27_SEL_SPI6_SPI_MOSI = 2'd3;

  parameter PAD_MUX_GROUP_B_28_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_28_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_28_SEL_ETH_ETH_RXD2 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_28_SEL_GPIO_B_GPIO28 = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_28_SEL_USART2_UART_TX = 2'd3;

  parameter PAD_MUX_GROUP_B_29_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_29_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_29_SEL_ETH_ETH_RXD3 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_29_SEL_GPIO_B_GPIO29 = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_B_29_SEL_USART2_UART_RX = 2'd3;

  parameter PAD_MUX_GROUP_B_30_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_30_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_30_SEL_CAN1_CAN_TX = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_30_SEL_ETH_ETH_TXCK = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_30_SEL_GPIO_B_GPIO30 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_30_SEL_USART2_UART_RTS = 3'd4;

  parameter PAD_MUX_GROUP_B_31_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_31_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_31_SEL_CAN1_CAN_RX = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_31_SEL_ETH_ETH_TXCTL = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_31_SEL_GPIO_B_GPIO31 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_31_SEL_USART2_UART_CTS = 3'd4;

  parameter PAD_MUX_GROUP_B_32_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_32_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_32_SEL_ETH_ETH_TXD0 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_32_SEL_GPIO_B_GPIO32 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_32_SEL_PWM1_PWM0 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_32_SEL_USART3_UART_TX = 3'd4;

  parameter PAD_MUX_GROUP_B_33_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_33_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_33_SEL_ETH_ETH_TXD1 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_33_SEL_GPIO_B_GPIO33 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_33_SEL_PWM1_PWM1 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_33_SEL_USART3_UART_RX = 3'd4;

  parameter PAD_MUX_GROUP_B_34_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_34_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_34_SEL_ETH_ETH_TXD2 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_34_SEL_GPIO_B_GPIO34 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_34_SEL_PWM1_PWM2 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_34_SEL_USART3_UART_RTS = 3'd4;

  parameter PAD_MUX_GROUP_B_35_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_35_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_35_SEL_ETH_ETH_TXD3 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_35_SEL_GPIO_B_GPIO35 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_35_SEL_PWM1_PWM3 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_35_SEL_USART3_UART_CTS = 3'd4;

  parameter PAD_MUX_GROUP_B_36_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_36_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_36_SEL_CAM1_CAM_PCLK = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_36_SEL_ETH_ETH_MDIO = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_36_SEL_GPIO_B_GPIO36 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_36_SEL_SPI8_SPI_SCK = 3'd4;

  parameter PAD_MUX_GROUP_B_37_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_37_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_37_SEL_CAM1_CAM_VSYNC = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_37_SEL_ETH_ETH_MDC = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_37_SEL_GPIO_B_GPIO37 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_37_SEL_SPI8_SPI_CS0 = 3'd4;

  parameter PAD_MUX_GROUP_B_38_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_38_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_38_SEL_CAM1_CAM_HSYNC = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_38_SEL_GPIO_B_GPIO38 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_38_SEL_SPI8_SPI_MISO = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_38_SEL_SPI10_SPI_SCK = 3'd4;

  parameter PAD_MUX_GROUP_B_39_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_39_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_39_SEL_CAM1_CAM_DATA0_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_39_SEL_GPIO_B_GPIO39 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_39_SEL_SPI8_SPI_MOSI = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_39_SEL_SPI10_SPI_CS0 = 3'd4;

  parameter PAD_MUX_GROUP_B_40_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_40_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_40_SEL_CAM1_CAM_DATA1_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_40_SEL_GPIO_B_GPIO40 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_40_SEL_SPI9_SPI_SCK = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_40_SEL_SPI10_SPI_MISO = 3'd4;

  parameter PAD_MUX_GROUP_B_41_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_41_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_41_SEL_CAM1_CAM_DATA2_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_41_SEL_GPIO_B_GPIO41 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_41_SEL_SPI9_SPI_CS0 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_41_SEL_SPI10_SPI_MOSI = 3'd4;

  parameter PAD_MUX_GROUP_B_42_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_42_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_42_SEL_CAM1_CAM_DATA3_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_42_SEL_CAN0_CAN_TX = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_42_SEL_GPIO_B_GPIO42 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_42_SEL_SPI9_SPI_MISO = 3'd4;

  parameter PAD_MUX_GROUP_B_43_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_43_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_43_SEL_CAM1_CAM_DATA4_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_43_SEL_CAN0_CAN_RX = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_43_SEL_GPIO_B_GPIO43 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_43_SEL_SPI9_SPI_MOSI = 3'd4;

  parameter PAD_MUX_GROUP_B_44_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_44_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_44_SEL_CAM1_CAM_DATA5_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_44_SEL_GPIO_B_GPIO44 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_44_SEL_PWM1_PWM0 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_44_SEL_SPI10_SPI_SCK = 3'd4;

  parameter PAD_MUX_GROUP_B_45_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_45_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_45_SEL_CAM1_CAM_DATA6_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_45_SEL_GPIO_B_GPIO45 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_45_SEL_PWM1_PWM1 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_45_SEL_SPI10_SPI_CS0 = 3'd4;

  parameter PAD_MUX_GROUP_B_46_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_46_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_46_SEL_CAM1_CAM_DATA7_I = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_46_SEL_GPIO_B_GPIO46 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_46_SEL_PWM1_PWM2 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_46_SEL_SPI10_SPI_MISO = 3'd4;

  parameter PAD_MUX_GROUP_B_47_SEL_WIDTH = 3;
  parameter logic[2:0] PAD_MUX_GROUP_B_47_SEL_DEFAULT = 3'd0;
  parameter logic[2:0] PAD_MUX_GROUP_B_47_SEL_FLL_SOC_1_SOC_CLK_1 = 3'd1;
  parameter logic[2:0] PAD_MUX_GROUP_B_47_SEL_GPIO_B_GPIO47 = 3'd2;
  parameter logic[2:0] PAD_MUX_GROUP_B_47_SEL_PWM1_PWM3 = 3'd3;
  parameter logic[2:0] PAD_MUX_GROUP_B_47_SEL_SPI10_SPI_MOSI = 3'd4;

  parameter PAD_MUX_GROUP_OT_SPI_00_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_OT_SPI_00_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_OT_SPI_00_SEL_SPI_OT_SPI_SCK = 1'd1;

  parameter PAD_MUX_GROUP_OT_SPI_01_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_OT_SPI_01_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_OT_SPI_01_SEL_SPI_OT_SPI_CSN = 1'd1;

  parameter PAD_MUX_GROUP_OT_SPI_02_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_OT_SPI_02_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_OT_SPI_02_SEL_SPI_OT_SPI_SD0 = 1'd1;

  parameter PAD_MUX_GROUP_OT_SPI_03_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_OT_SPI_03_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_OT_SPI_03_SEL_SPI_OT_SPI_SD1 = 1'd1;

  // Dynamic Pad  instance index

  parameter PORT_MUX_GROUP_A_00_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_00_SEL_A_00 = 1'd0;

  parameter PORT_MUX_GROUP_A_00_B_42_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_00_B_42_SEL_A_00 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_00_B_42_SEL_B_42 = 1'd1;

  parameter PORT_MUX_GROUP_A_01_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_01_SEL_A_01 = 1'd0;

  parameter PORT_MUX_GROUP_A_01_B_43_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_01_B_43_SEL_A_01 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_01_B_43_SEL_B_43 = 1'd1;

  parameter PORT_MUX_GROUP_A_02_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_02_SEL_A_02 = 1'd0;

  parameter PORT_MUX_GROUP_A_02_B_30_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_02_B_30_SEL_A_02 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_02_B_30_SEL_B_30 = 1'd1;

  parameter PORT_MUX_GROUP_A_03_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_03_SEL_A_03 = 1'd0;

  parameter PORT_MUX_GROUP_A_03_B_31_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_03_B_31_SEL_A_03 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_03_B_31_SEL_B_31 = 1'd1;

  parameter PORT_MUX_GROUP_A_04_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_04_SEL_A_04 = 1'd0;

  parameter PORT_MUX_GROUP_A_04_A_29_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_04_A_29_SEL_A_04 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_04_A_29_SEL_A_29 = 1'd1;

  parameter PORT_MUX_GROUP_A_05_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_05_SEL_A_05 = 1'd0;

  parameter PORT_MUX_GROUP_A_05_B_19_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_05_B_19_SEL_A_05 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_05_B_19_SEL_B_19 = 1'd1;

  parameter PORT_MUX_GROUP_A_06_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_06_SEL_A_06 = 1'd0;

  parameter PORT_MUX_GROUP_A_06_B_20_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_06_B_20_SEL_A_06 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_06_B_20_SEL_B_20 = 1'd1;

  parameter PORT_MUX_GROUP_A_07_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_07_SEL_A_07 = 1'd0;

  parameter PORT_MUX_GROUP_A_07_B_21_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_07_B_21_SEL_A_07 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_07_B_21_SEL_B_21 = 1'd1;

  parameter PORT_MUX_GROUP_A_08_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_08_SEL_A_08 = 1'd0;

  parameter PORT_MUX_GROUP_A_08_A_12_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_08_A_12_SEL_A_08 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_08_A_12_SEL_A_12 = 1'd1;

  parameter PORT_MUX_GROUP_A_08_B_22_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_08_B_22_SEL_A_08 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_08_B_22_SEL_B_22 = 1'd1;

  parameter PORT_MUX_GROUP_A_09_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_09_SEL_A_09 = 1'd0;

  parameter PORT_MUX_GROUP_A_09_A_13_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_09_A_13_SEL_A_09 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_09_A_13_SEL_A_13 = 1'd1;

  parameter PORT_MUX_GROUP_A_09_B_00_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_09_B_00_SEL_A_09 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_09_B_00_SEL_B_00 = 1'd1;

  parameter PORT_MUX_GROUP_A_10_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_10_SEL_A_10 = 1'd0;

  parameter PORT_MUX_GROUP_A_10_B_01_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_10_B_01_SEL_A_10 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_10_B_01_SEL_B_01 = 1'd1;

  parameter PORT_MUX_GROUP_A_10_B_32_B_44_SEL_WIDTH = 2;
  parameter logic[1:0] PORT_MUX_GROUP_A_10_B_32_B_44_SEL_A_10 = 2'd0;
  parameter logic[1:0] PORT_MUX_GROUP_A_10_B_32_B_44_SEL_B_32 = 2'd1;
  parameter logic[1:0] PORT_MUX_GROUP_A_10_B_32_B_44_SEL_B_44 = 2'd2;

  parameter PORT_MUX_GROUP_A_11_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_11_SEL_A_11 = 1'd0;

  parameter PORT_MUX_GROUP_A_11_B_02_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_11_B_02_SEL_A_11 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_11_B_02_SEL_B_02 = 1'd1;

  parameter PORT_MUX_GROUP_A_11_B_33_B_45_SEL_WIDTH = 2;
  parameter logic[1:0] PORT_MUX_GROUP_A_11_B_33_B_45_SEL_A_11 = 2'd0;
  parameter logic[1:0] PORT_MUX_GROUP_A_11_B_33_B_45_SEL_B_33 = 2'd1;
  parameter logic[1:0] PORT_MUX_GROUP_A_11_B_33_B_45_SEL_B_45 = 2'd2;

  parameter PORT_MUX_GROUP_A_12_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_12_SEL_A_12 = 1'd0;

  parameter PORT_MUX_GROUP_A_12_B_03_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_12_B_03_SEL_A_12 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_12_B_03_SEL_B_03 = 1'd1;

  parameter PORT_MUX_GROUP_A_12_B_34_B_46_SEL_WIDTH = 2;
  parameter logic[1:0] PORT_MUX_GROUP_A_12_B_34_B_46_SEL_A_12 = 2'd0;
  parameter logic[1:0] PORT_MUX_GROUP_A_12_B_34_B_46_SEL_B_34 = 2'd1;
  parameter logic[1:0] PORT_MUX_GROUP_A_12_B_34_B_46_SEL_B_46 = 2'd2;

  parameter PORT_MUX_GROUP_A_13_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_13_SEL_A_13 = 1'd0;

  parameter PORT_MUX_GROUP_A_13_B_04_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_13_B_04_SEL_A_13 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_13_B_04_SEL_B_04 = 1'd1;

  parameter PORT_MUX_GROUP_A_13_B_35_B_47_SEL_WIDTH = 2;
  parameter logic[1:0] PORT_MUX_GROUP_A_13_B_35_B_47_SEL_A_13 = 2'd0;
  parameter logic[1:0] PORT_MUX_GROUP_A_13_B_35_B_47_SEL_B_35 = 2'd1;
  parameter logic[1:0] PORT_MUX_GROUP_A_13_B_35_B_47_SEL_B_47 = 2'd2;

  parameter PORT_MUX_GROUP_A_14_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_14_SEL_A_14 = 1'd0;

  parameter PORT_MUX_GROUP_A_14_A_26_B_14_SEL_WIDTH = 2;
  parameter logic[1:0] PORT_MUX_GROUP_A_14_A_26_B_14_SEL_A_14 = 2'd0;
  parameter logic[1:0] PORT_MUX_GROUP_A_14_A_26_B_14_SEL_A_26 = 2'd1;
  parameter logic[1:0] PORT_MUX_GROUP_A_14_A_26_B_14_SEL_B_14 = 2'd2;

  parameter PORT_MUX_GROUP_A_14_B_05_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_14_B_05_SEL_A_14 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_14_B_05_SEL_B_05 = 1'd1;

  parameter PORT_MUX_GROUP_A_14_B_06_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_14_B_06_SEL_A_14 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_14_B_06_SEL_B_06 = 1'd1;

  parameter PORT_MUX_GROUP_A_15_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_15_SEL_A_15 = 1'd0;

  parameter PORT_MUX_GROUP_A_15_A_27_B_15_SEL_WIDTH = 2;
  parameter logic[1:0] PORT_MUX_GROUP_A_15_A_27_B_15_SEL_A_15 = 2'd0;
  parameter logic[1:0] PORT_MUX_GROUP_A_15_A_27_B_15_SEL_A_27 = 2'd1;
  parameter logic[1:0] PORT_MUX_GROUP_A_15_A_27_B_15_SEL_B_15 = 2'd2;

  parameter PORT_MUX_GROUP_A_15_B_07_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_15_B_07_SEL_A_15 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_15_B_07_SEL_B_07 = 1'd1;

  parameter PORT_MUX_GROUP_A_15_B_23_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_15_B_23_SEL_A_15 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_15_B_23_SEL_B_23 = 1'd1;

  parameter PORT_MUX_GROUP_A_16_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_16_SEL_A_16 = 1'd0;

  parameter PORT_MUX_GROUP_A_16_A_28_B_16_SEL_WIDTH = 2;
  parameter logic[1:0] PORT_MUX_GROUP_A_16_A_28_B_16_SEL_A_16 = 2'd0;
  parameter logic[1:0] PORT_MUX_GROUP_A_16_A_28_B_16_SEL_A_28 = 2'd1;
  parameter logic[1:0] PORT_MUX_GROUP_A_16_A_28_B_16_SEL_B_16 = 2'd2;

  parameter PORT_MUX_GROUP_A_16_B_08_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_16_B_08_SEL_A_16 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_16_B_08_SEL_B_08 = 1'd1;

  parameter PORT_MUX_GROUP_A_16_B_24_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_16_B_24_SEL_A_16 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_16_B_24_SEL_B_24 = 1'd1;

  parameter PORT_MUX_GROUP_A_17_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_17_SEL_A_17 = 1'd0;

  parameter PORT_MUX_GROUP_A_17_A_29_B_17_SEL_WIDTH = 2;
  parameter logic[1:0] PORT_MUX_GROUP_A_17_A_29_B_17_SEL_A_17 = 2'd0;
  parameter logic[1:0] PORT_MUX_GROUP_A_17_A_29_B_17_SEL_A_29 = 2'd1;
  parameter logic[1:0] PORT_MUX_GROUP_A_17_A_29_B_17_SEL_B_17 = 2'd2;

  parameter PORT_MUX_GROUP_A_17_B_09_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_17_B_09_SEL_A_17 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_17_B_09_SEL_B_09 = 1'd1;

  parameter PORT_MUX_GROUP_A_17_B_25_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_17_B_25_SEL_A_17 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_17_B_25_SEL_B_25 = 1'd1;

  parameter PORT_MUX_GROUP_A_18_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_18_SEL_A_18 = 1'd0;

  parameter PORT_MUX_GROUP_A_18_B_18_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_18_B_18_SEL_A_18 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_18_B_18_SEL_B_18 = 1'd1;

  parameter PORT_MUX_GROUP_A_18_B_26_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_18_B_26_SEL_A_18 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_18_B_26_SEL_B_26 = 1'd1;

  parameter PORT_MUX_GROUP_A_19_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_19_SEL_A_19 = 1'd0;

  parameter PORT_MUX_GROUP_A_19_B_19_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_19_B_19_SEL_A_19 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_19_B_19_SEL_B_19 = 1'd1;

  parameter PORT_MUX_GROUP_A_19_B_27_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_19_B_27_SEL_A_19 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_19_B_27_SEL_B_27 = 1'd1;

  parameter PORT_MUX_GROUP_A_20_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_20_SEL_A_20 = 1'd0;

  parameter PORT_MUX_GROUP_A_20_B_20_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_20_B_20_SEL_A_20 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_20_B_20_SEL_B_20 = 1'd1;

  parameter PORT_MUX_GROUP_A_20_B_28_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_20_B_28_SEL_A_20 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_20_B_28_SEL_B_28 = 1'd1;

  parameter PORT_MUX_GROUP_A_21_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_21_SEL_A_21 = 1'd0;

  parameter PORT_MUX_GROUP_A_21_B_21_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_21_B_21_SEL_A_21 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_21_B_21_SEL_B_21 = 1'd1;

  parameter PORT_MUX_GROUP_A_21_B_29_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_21_B_29_SEL_A_21 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_21_B_29_SEL_B_29 = 1'd1;

  parameter PORT_MUX_GROUP_A_22_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_22_SEL_A_22 = 1'd0;

  parameter PORT_MUX_GROUP_A_22_B_22_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_22_B_22_SEL_A_22 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_22_B_22_SEL_B_22 = 1'd1;

  parameter PORT_MUX_GROUP_A_22_B_30_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_22_B_30_SEL_A_22 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_22_B_30_SEL_B_30 = 1'd1;

  parameter PORT_MUX_GROUP_A_23_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_23_SEL_A_23 = 1'd0;

  parameter PORT_MUX_GROUP_A_23_B_23_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_23_B_23_SEL_A_23 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_23_B_23_SEL_B_23 = 1'd1;

  parameter PORT_MUX_GROUP_A_23_B_31_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_23_B_31_SEL_A_23 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_23_B_31_SEL_B_31 = 1'd1;

  parameter PORT_MUX_GROUP_A_24_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_24_SEL_A_24 = 1'd0;

  parameter PORT_MUX_GROUP_A_24_B_24_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_24_B_24_SEL_A_24 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_24_B_24_SEL_B_24 = 1'd1;

  parameter PORT_MUX_GROUP_A_24_B_32_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_24_B_32_SEL_A_24 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_24_B_32_SEL_B_32 = 1'd1;

  parameter PORT_MUX_GROUP_A_25_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_25_SEL_A_25 = 1'd0;

  parameter PORT_MUX_GROUP_A_25_B_25_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_25_B_25_SEL_A_25 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_25_B_25_SEL_B_25 = 1'd1;

  parameter PORT_MUX_GROUP_A_25_B_33_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_25_B_33_SEL_A_25 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_25_B_33_SEL_B_33 = 1'd1;

  parameter PORT_MUX_GROUP_A_26_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_26_SEL_A_26 = 1'd0;

  parameter PORT_MUX_GROUP_A_26_B_34_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_26_B_34_SEL_A_26 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_26_B_34_SEL_B_34 = 1'd1;

  parameter PORT_MUX_GROUP_A_27_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_27_SEL_A_27 = 1'd0;

  parameter PORT_MUX_GROUP_A_27_B_35_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_27_B_35_SEL_A_27 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_27_B_35_SEL_B_35 = 1'd1;

  parameter PORT_MUX_GROUP_A_28_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_28_SEL_A_28 = 1'd0;

  parameter PORT_MUX_GROUP_A_28_B_36_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_28_B_36_SEL_A_28 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_28_B_36_SEL_B_36 = 1'd1;

  parameter PORT_MUX_GROUP_A_29_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_29_SEL_A_29 = 1'd0;

  parameter PORT_MUX_GROUP_A_29_B_37_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_29_B_37_SEL_A_29 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_A_29_B_37_SEL_B_37 = 1'd1;

  parameter PORT_MUX_GROUP_B_00_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_00_SEL_B_00 = 1'd0;

  parameter PORT_MUX_GROUP_B_00_B_10_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_00_B_10_SEL_B_00 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_B_00_B_10_SEL_B_10 = 1'd1;

  parameter PORT_MUX_GROUP_B_01_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_01_SEL_B_01 = 1'd0;

  parameter PORT_MUX_GROUP_B_01_B_11_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_01_B_11_SEL_B_01 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_B_01_B_11_SEL_B_11 = 1'd1;

  parameter PORT_MUX_GROUP_B_02_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_02_SEL_B_02 = 1'd0;

  parameter PORT_MUX_GROUP_B_02_B_12_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_02_B_12_SEL_B_02 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_B_02_B_12_SEL_B_12 = 1'd1;

  parameter PORT_MUX_GROUP_B_03_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_03_SEL_B_03 = 1'd0;

  parameter PORT_MUX_GROUP_B_03_B_13_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_03_B_13_SEL_B_03 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_B_03_B_13_SEL_B_13 = 1'd1;

  parameter PORT_MUX_GROUP_B_04_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_04_SEL_B_04 = 1'd0;

  parameter PORT_MUX_GROUP_B_04_B_14_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_04_B_14_SEL_B_04 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_B_04_B_14_SEL_B_14 = 1'd1;

  parameter PORT_MUX_GROUP_B_05_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_05_SEL_B_05 = 1'd0;

  parameter PORT_MUX_GROUP_B_05_B_15_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_05_B_15_SEL_B_05 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_B_05_B_15_SEL_B_15 = 1'd1;

  parameter PORT_MUX_GROUP_B_06_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_06_SEL_B_06 = 1'd0;

  parameter PORT_MUX_GROUP_B_06_B_16_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_06_B_16_SEL_B_06 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_B_06_B_16_SEL_B_16 = 1'd1;

  parameter PORT_MUX_GROUP_B_07_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_07_SEL_B_07 = 1'd0;

  parameter PORT_MUX_GROUP_B_07_B_17_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_07_B_17_SEL_B_07 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_B_07_B_17_SEL_B_17 = 1'd1;

  parameter PORT_MUX_GROUP_B_08_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_08_SEL_B_08 = 1'd0;

  parameter PORT_MUX_GROUP_B_09_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_09_SEL_B_09 = 1'd0;

  parameter PORT_MUX_GROUP_B_10_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_10_SEL_B_10 = 1'd0;

  parameter PORT_MUX_GROUP_B_11_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_11_SEL_B_11 = 1'd0;

  parameter PORT_MUX_GROUP_B_12_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_12_SEL_B_12 = 1'd0;

  parameter PORT_MUX_GROUP_B_13_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_13_SEL_B_13 = 1'd0;

  parameter PORT_MUX_GROUP_B_14_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_14_SEL_B_14 = 1'd0;

  parameter PORT_MUX_GROUP_B_15_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_15_SEL_B_15 = 1'd0;

  parameter PORT_MUX_GROUP_B_16_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_16_SEL_B_16 = 1'd0;

  parameter PORT_MUX_GROUP_B_17_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_17_SEL_B_17 = 1'd0;

  parameter PORT_MUX_GROUP_B_18_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_18_SEL_B_18 = 1'd0;

  parameter PORT_MUX_GROUP_B_19_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_19_SEL_B_19 = 1'd0;

  parameter PORT_MUX_GROUP_B_20_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_20_SEL_B_20 = 1'd0;

  parameter PORT_MUX_GROUP_B_21_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_21_SEL_B_21 = 1'd0;

  parameter PORT_MUX_GROUP_B_22_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_22_SEL_B_22 = 1'd0;

  parameter PORT_MUX_GROUP_B_23_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_23_SEL_B_23 = 1'd0;

  parameter PORT_MUX_GROUP_B_24_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_24_SEL_B_24 = 1'd0;

  parameter PORT_MUX_GROUP_B_25_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_25_SEL_B_25 = 1'd0;

  parameter PORT_MUX_GROUP_B_26_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_26_SEL_B_26 = 1'd0;

  parameter PORT_MUX_GROUP_B_27_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_27_SEL_B_27 = 1'd0;

  parameter PORT_MUX_GROUP_B_28_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_28_SEL_B_28 = 1'd0;

  parameter PORT_MUX_GROUP_B_29_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_29_SEL_B_29 = 1'd0;

  parameter PORT_MUX_GROUP_B_30_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_30_SEL_B_30 = 1'd0;

  parameter PORT_MUX_GROUP_B_31_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_31_SEL_B_31 = 1'd0;

  parameter PORT_MUX_GROUP_B_32_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_32_SEL_B_32 = 1'd0;

  parameter PORT_MUX_GROUP_B_33_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_33_SEL_B_33 = 1'd0;

  parameter PORT_MUX_GROUP_B_34_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_34_SEL_B_34 = 1'd0;

  parameter PORT_MUX_GROUP_B_35_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_35_SEL_B_35 = 1'd0;

  parameter PORT_MUX_GROUP_B_36_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_36_SEL_B_36 = 1'd0;

  parameter PORT_MUX_GROUP_B_37_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_37_SEL_B_37 = 1'd0;

  parameter PORT_MUX_GROUP_B_38_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_38_SEL_B_38 = 1'd0;

  parameter PORT_MUX_GROUP_B_38_B_44_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_38_B_44_SEL_B_38 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_B_38_B_44_SEL_B_44 = 1'd1;

  parameter PORT_MUX_GROUP_B_39_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_39_SEL_B_39 = 1'd0;

  parameter PORT_MUX_GROUP_B_39_B_45_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_39_B_45_SEL_B_39 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_B_39_B_45_SEL_B_45 = 1'd1;

  parameter PORT_MUX_GROUP_B_40_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_40_SEL_B_40 = 1'd0;

  parameter PORT_MUX_GROUP_B_40_B_46_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_40_B_46_SEL_B_40 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_B_40_B_46_SEL_B_46 = 1'd1;

  parameter PORT_MUX_GROUP_B_41_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_41_SEL_B_41 = 1'd0;

  parameter PORT_MUX_GROUP_B_41_B_47_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_41_B_47_SEL_B_41 = 1'd0;
  parameter logic[0:0] PORT_MUX_GROUP_B_41_B_47_SEL_B_47 = 1'd1;

  parameter PORT_MUX_GROUP_B_42_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_42_SEL_B_42 = 1'd0;

  parameter PORT_MUX_GROUP_B_43_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_43_SEL_B_43 = 1'd0;

  parameter PORT_MUX_GROUP_B_44_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_44_SEL_B_44 = 1'd0;

  parameter PORT_MUX_GROUP_B_45_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_45_SEL_B_45 = 1'd0;

  parameter PORT_MUX_GROUP_B_46_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_46_SEL_B_46 = 1'd0;

  parameter PORT_MUX_GROUP_B_47_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_47_SEL_B_47 = 1'd0;

  parameter PORT_MUX_GROUP_OT_SPI_00_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_OT_SPI_00_SEL_OT_SPI_00 = 1'd0;

  parameter PORT_MUX_GROUP_OT_SPI_01_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_OT_SPI_01_SEL_OT_SPI_01 = 1'd0;

  parameter PORT_MUX_GROUP_OT_SPI_02_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_OT_SPI_02_SEL_OT_SPI_02 = 1'd0;

  parameter PORT_MUX_GROUP_OT_SPI_03_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_OT_SPI_03_SEL_OT_SPI_03 = 1'd0;
endpackage : pkg_internal_alsaqr_periph_padframe_periphs
