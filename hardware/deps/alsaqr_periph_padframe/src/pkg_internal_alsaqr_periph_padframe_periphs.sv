<<<<<<< HEAD
<<<<<<< HEAD
// File auto-generated by Padrick 0.1.0.post0.dev51+g806b078.dirty
=======
// File auto-generated by Padrick unknown
>>>>>>> d61477d7 (Updated padframe with QSPI OT signals and bootselet signals)
=======
// File auto-generated by Padrick 0.1.0.post0.dev51+g806b078
>>>>>>> 2f33e148 (Updated padframe with qspi linux, now compliant with specs)
package pkg_internal_alsaqr_periph_padframe_periphs;
  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_00_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_01_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_02_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_03_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_04_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_05_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_06_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_07_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_08_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_08_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_09_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_09_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_10_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_10_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_11_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_11_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_12_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_12_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_13_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_13_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_14_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_14_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_15_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_15_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_16_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_16_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_17_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_17_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_18_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_18_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_19_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_19_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_20_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_20_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_21_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_21_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_22_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_22_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_23_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_23_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_24_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_24_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_25_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_25_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_26_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_26_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_27_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_27_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_28_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_28_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_29_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_29_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_30_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_30_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_31_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_31_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_32_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_32_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_33_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_33_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_34_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_34_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_35_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_35_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_36_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_36_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_37_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_37_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_38_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_38_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_39_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_39_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_40_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_40_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_41_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_41_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_42_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_42_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_43_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_43_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_44_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_44_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_45_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_45_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_46_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_46_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_47_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_47_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_48_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_48_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_49_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_49_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_50_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_50_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_51_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_51_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_52_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_52_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_53_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_53_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_54_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_54_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_55_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_55_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_56_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_56_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_57_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_57_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_58_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_58_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_59_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_59_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_60_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_60_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_61_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_61_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_62_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_62_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_63_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_63_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_64_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_64_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_65_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_65_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_66_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_66_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_67_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_67_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_68_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_68_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_69_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_69_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_70_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_70_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_71_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_71_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_72_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_72_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_73_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_73_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_74_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_74_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_75_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_75_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_76_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_76_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_77_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_77_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_78_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_78_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_79_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_79_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_80_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_80_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_81_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_81_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_82_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_82_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_83_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_83_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_84_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_84_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_85_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_85_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_86_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_86_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_87_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_87_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_88_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_88_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_89_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_89_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_90_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_90_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_91_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_91_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_a_92_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_a_92_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_00_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_01_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_02_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_03_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_04_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_05_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_06_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_07_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_08_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_08_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_09_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_09_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
<<<<<<< HEAD
  } mux_to_pad_b_10_t;
=======
  } mux_to_pad_pad_gpio_f_17_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_gpio_f_17_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_pad_gpio_f_18_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_gpio_f_18_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_pad_gpio_f_19_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_gpio_f_19_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_pad_gpio_f_20_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_gpio_f_20_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_pad_gpio_f_21_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_gpio_f_21_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_pad_gpio_f_22_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_gpio_f_22_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_pad_gpio_f_23_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_gpio_f_23_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_pad_gpio_f_24_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_gpio_f_24_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_pad_gpio_f_25_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_gpio_f_25_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_pad_gpio_f_26_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_gpio_f_26_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_pad_gpio_f_27_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_gpio_f_27_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_pad_gpio_f_28_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_gpio_f_28_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_pad_gpio_pwm0_t;
>>>>>>> d61477d7 (Updated padframe with QSPI OT signals and bootselet signals)

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_10_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_11_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_11_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_12_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_12_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_13_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_13_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_14_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_14_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_15_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_15_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_16_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_16_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_17_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_17_t;

  typedef struct packed{
<<<<<<< HEAD
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_18_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_18_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_19_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_19_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_20_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_20_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_21_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_21_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_22_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_22_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_23_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_23_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_24_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_24_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_25_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_25_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_26_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_26_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_27_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_27_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_28_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_28_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_29_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_29_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_30_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_30_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_31_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_31_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_32_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_32_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_33_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_33_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_34_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_34_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_35_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_35_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_36_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_36_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_37_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_37_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_38_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_38_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_39_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_39_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_40_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_40_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_41_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_41_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_42_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_42_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_43_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_43_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_44_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_44_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_45_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_45_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_46_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_46_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_47_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_47_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_48_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_48_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_49_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_49_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_50_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_50_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_51_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_51_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_52_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_52_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_53_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_53_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_54_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_54_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_55_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_55_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_56_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_56_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_57_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_57_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_58_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_58_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_59_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_59_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_60_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_60_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_61_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_61_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_62_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_62_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_63_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_63_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_b_64_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_b_64_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_ot_qspi_00_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_ot_qspi_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_ot_qspi_01_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_ot_qspi_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_ot_qspi_02_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_ot_qspi_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_ot_qspi_03_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_ot_qspi_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_ot_qspi_04_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_ot_qspi_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_ot_qspi_05_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_ot_qspi_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_linux_qspi_00_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_linux_qspi_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_linux_qspi_01_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_linux_qspi_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_linux_qspi_02_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_linux_qspi_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_linux_qspi_03_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_linux_qspi_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_linux_qspi_04_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_linux_qspi_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic [1:0] drv;
    logic  oen;
    logic  puen;
    logic  slw;
    logic  smt;
  } mux_to_pad_linux_qspi_05_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_linux_qspi_05_t;

  typedef struct packed{
    mux_to_pad_a_00_t a_00;
    mux_to_pad_a_01_t a_01;
    mux_to_pad_a_02_t a_02;
    mux_to_pad_a_03_t a_03;
    mux_to_pad_a_04_t a_04;
    mux_to_pad_a_05_t a_05;
    mux_to_pad_a_06_t a_06;
    mux_to_pad_a_07_t a_07;
    mux_to_pad_a_08_t a_08;
    mux_to_pad_a_09_t a_09;
    mux_to_pad_a_10_t a_10;
    mux_to_pad_a_11_t a_11;
    mux_to_pad_a_12_t a_12;
    mux_to_pad_a_13_t a_13;
    mux_to_pad_a_14_t a_14;
    mux_to_pad_a_15_t a_15;
    mux_to_pad_a_16_t a_16;
    mux_to_pad_a_17_t a_17;
    mux_to_pad_a_18_t a_18;
    mux_to_pad_a_19_t a_19;
    mux_to_pad_a_20_t a_20;
    mux_to_pad_a_21_t a_21;
    mux_to_pad_a_22_t a_22;
    mux_to_pad_a_23_t a_23;
    mux_to_pad_a_24_t a_24;
    mux_to_pad_a_25_t a_25;
    mux_to_pad_a_26_t a_26;
    mux_to_pad_a_27_t a_27;
    mux_to_pad_a_28_t a_28;
    mux_to_pad_a_29_t a_29;
    mux_to_pad_a_30_t a_30;
    mux_to_pad_a_31_t a_31;
    mux_to_pad_a_32_t a_32;
    mux_to_pad_a_33_t a_33;
    mux_to_pad_a_34_t a_34;
    mux_to_pad_a_35_t a_35;
    mux_to_pad_a_36_t a_36;
    mux_to_pad_a_37_t a_37;
    mux_to_pad_a_38_t a_38;
    mux_to_pad_a_39_t a_39;
    mux_to_pad_a_40_t a_40;
    mux_to_pad_a_41_t a_41;
    mux_to_pad_a_42_t a_42;
    mux_to_pad_a_43_t a_43;
    mux_to_pad_a_44_t a_44;
    mux_to_pad_a_45_t a_45;
    mux_to_pad_a_46_t a_46;
    mux_to_pad_a_47_t a_47;
    mux_to_pad_a_48_t a_48;
    mux_to_pad_a_49_t a_49;
    mux_to_pad_a_50_t a_50;
    mux_to_pad_a_51_t a_51;
    mux_to_pad_a_52_t a_52;
    mux_to_pad_a_53_t a_53;
    mux_to_pad_a_54_t a_54;
    mux_to_pad_a_55_t a_55;
    mux_to_pad_a_56_t a_56;
    mux_to_pad_a_57_t a_57;
    mux_to_pad_a_58_t a_58;
    mux_to_pad_a_59_t a_59;
    mux_to_pad_a_60_t a_60;
    mux_to_pad_a_61_t a_61;
    mux_to_pad_a_62_t a_62;
    mux_to_pad_a_63_t a_63;
    mux_to_pad_a_64_t a_64;
    mux_to_pad_a_65_t a_65;
    mux_to_pad_a_66_t a_66;
    mux_to_pad_a_67_t a_67;
    mux_to_pad_a_68_t a_68;
    mux_to_pad_a_69_t a_69;
    mux_to_pad_a_70_t a_70;
    mux_to_pad_a_71_t a_71;
    mux_to_pad_a_72_t a_72;
    mux_to_pad_a_73_t a_73;
    mux_to_pad_a_74_t a_74;
    mux_to_pad_a_75_t a_75;
    mux_to_pad_a_76_t a_76;
    mux_to_pad_a_77_t a_77;
    mux_to_pad_a_78_t a_78;
    mux_to_pad_a_79_t a_79;
    mux_to_pad_a_80_t a_80;
    mux_to_pad_a_81_t a_81;
    mux_to_pad_a_82_t a_82;
    mux_to_pad_a_83_t a_83;
    mux_to_pad_a_84_t a_84;
    mux_to_pad_a_85_t a_85;
    mux_to_pad_a_86_t a_86;
    mux_to_pad_a_87_t a_87;
    mux_to_pad_a_88_t a_88;
    mux_to_pad_a_89_t a_89;
    mux_to_pad_a_90_t a_90;
    mux_to_pad_a_91_t a_91;
    mux_to_pad_a_92_t a_92;
    mux_to_pad_b_00_t b_00;
    mux_to_pad_b_01_t b_01;
    mux_to_pad_b_02_t b_02;
    mux_to_pad_b_03_t b_03;
    mux_to_pad_b_04_t b_04;
    mux_to_pad_b_05_t b_05;
    mux_to_pad_b_06_t b_06;
    mux_to_pad_b_07_t b_07;
    mux_to_pad_b_08_t b_08;
    mux_to_pad_b_09_t b_09;
    mux_to_pad_b_10_t b_10;
    mux_to_pad_b_11_t b_11;
    mux_to_pad_b_12_t b_12;
    mux_to_pad_b_13_t b_13;
    mux_to_pad_b_14_t b_14;
    mux_to_pad_b_15_t b_15;
    mux_to_pad_b_16_t b_16;
    mux_to_pad_b_17_t b_17;
    mux_to_pad_b_18_t b_18;
    mux_to_pad_b_19_t b_19;
    mux_to_pad_b_20_t b_20;
    mux_to_pad_b_21_t b_21;
    mux_to_pad_b_22_t b_22;
    mux_to_pad_b_23_t b_23;
    mux_to_pad_b_24_t b_24;
    mux_to_pad_b_25_t b_25;
    mux_to_pad_b_26_t b_26;
    mux_to_pad_b_27_t b_27;
    mux_to_pad_b_28_t b_28;
    mux_to_pad_b_29_t b_29;
    mux_to_pad_b_30_t b_30;
    mux_to_pad_b_31_t b_31;
    mux_to_pad_b_32_t b_32;
    mux_to_pad_b_33_t b_33;
    mux_to_pad_b_34_t b_34;
    mux_to_pad_b_35_t b_35;
    mux_to_pad_b_36_t b_36;
    mux_to_pad_b_37_t b_37;
    mux_to_pad_b_38_t b_38;
    mux_to_pad_b_39_t b_39;
    mux_to_pad_b_40_t b_40;
    mux_to_pad_b_41_t b_41;
    mux_to_pad_b_42_t b_42;
    mux_to_pad_b_43_t b_43;
    mux_to_pad_b_44_t b_44;
    mux_to_pad_b_45_t b_45;
    mux_to_pad_b_46_t b_46;
    mux_to_pad_b_47_t b_47;
    mux_to_pad_b_48_t b_48;
    mux_to_pad_b_49_t b_49;
    mux_to_pad_b_50_t b_50;
    mux_to_pad_b_51_t b_51;
    mux_to_pad_b_52_t b_52;
    mux_to_pad_b_53_t b_53;
    mux_to_pad_b_54_t b_54;
    mux_to_pad_b_55_t b_55;
    mux_to_pad_b_56_t b_56;
    mux_to_pad_b_57_t b_57;
    mux_to_pad_b_58_t b_58;
    mux_to_pad_b_59_t b_59;
    mux_to_pad_b_60_t b_60;
    mux_to_pad_b_61_t b_61;
    mux_to_pad_b_62_t b_62;
    mux_to_pad_b_63_t b_63;
    mux_to_pad_b_64_t b_64;
    mux_to_pad_ot_qspi_00_t ot_qspi_00;
    mux_to_pad_ot_qspi_01_t ot_qspi_01;
    mux_to_pad_ot_qspi_02_t ot_qspi_02;
    mux_to_pad_ot_qspi_03_t ot_qspi_03;
    mux_to_pad_ot_qspi_04_t ot_qspi_04;
    mux_to_pad_ot_qspi_05_t ot_qspi_05;
    mux_to_pad_linux_qspi_00_t linux_qspi_00;
    mux_to_pad_linux_qspi_01_t linux_qspi_01;
    mux_to_pad_linux_qspi_02_t linux_qspi_02;
    mux_to_pad_linux_qspi_03_t linux_qspi_03;
    mux_to_pad_linux_qspi_04_t linux_qspi_04;
    mux_to_pad_linux_qspi_05_t linux_qspi_05;
  } mux_to_pads_t;

  typedef struct packed{
    pad_to_mux_a_00_t a_00;
    pad_to_mux_a_01_t a_01;
    pad_to_mux_a_02_t a_02;
    pad_to_mux_a_03_t a_03;
    pad_to_mux_a_04_t a_04;
    pad_to_mux_a_05_t a_05;
    pad_to_mux_a_06_t a_06;
    pad_to_mux_a_07_t a_07;
    pad_to_mux_a_08_t a_08;
    pad_to_mux_a_09_t a_09;
    pad_to_mux_a_10_t a_10;
    pad_to_mux_a_11_t a_11;
    pad_to_mux_a_12_t a_12;
    pad_to_mux_a_13_t a_13;
    pad_to_mux_a_14_t a_14;
    pad_to_mux_a_15_t a_15;
    pad_to_mux_a_16_t a_16;
    pad_to_mux_a_17_t a_17;
    pad_to_mux_a_18_t a_18;
    pad_to_mux_a_19_t a_19;
    pad_to_mux_a_20_t a_20;
    pad_to_mux_a_21_t a_21;
    pad_to_mux_a_22_t a_22;
    pad_to_mux_a_23_t a_23;
    pad_to_mux_a_24_t a_24;
    pad_to_mux_a_25_t a_25;
    pad_to_mux_a_26_t a_26;
    pad_to_mux_a_27_t a_27;
    pad_to_mux_a_28_t a_28;
    pad_to_mux_a_29_t a_29;
    pad_to_mux_a_30_t a_30;
    pad_to_mux_a_31_t a_31;
    pad_to_mux_a_32_t a_32;
    pad_to_mux_a_33_t a_33;
    pad_to_mux_a_34_t a_34;
    pad_to_mux_a_35_t a_35;
    pad_to_mux_a_36_t a_36;
    pad_to_mux_a_37_t a_37;
    pad_to_mux_a_38_t a_38;
    pad_to_mux_a_39_t a_39;
    pad_to_mux_a_40_t a_40;
    pad_to_mux_a_41_t a_41;
    pad_to_mux_a_42_t a_42;
    pad_to_mux_a_43_t a_43;
    pad_to_mux_a_44_t a_44;
    pad_to_mux_a_45_t a_45;
    pad_to_mux_a_46_t a_46;
    pad_to_mux_a_47_t a_47;
    pad_to_mux_a_48_t a_48;
    pad_to_mux_a_49_t a_49;
    pad_to_mux_a_50_t a_50;
    pad_to_mux_a_51_t a_51;
    pad_to_mux_a_52_t a_52;
    pad_to_mux_a_53_t a_53;
    pad_to_mux_a_54_t a_54;
    pad_to_mux_a_55_t a_55;
    pad_to_mux_a_56_t a_56;
    pad_to_mux_a_57_t a_57;
    pad_to_mux_a_58_t a_58;
    pad_to_mux_a_59_t a_59;
    pad_to_mux_a_60_t a_60;
    pad_to_mux_a_61_t a_61;
    pad_to_mux_a_62_t a_62;
    pad_to_mux_a_63_t a_63;
    pad_to_mux_a_64_t a_64;
    pad_to_mux_a_65_t a_65;
    pad_to_mux_a_66_t a_66;
    pad_to_mux_a_67_t a_67;
    pad_to_mux_a_68_t a_68;
    pad_to_mux_a_69_t a_69;
    pad_to_mux_a_70_t a_70;
    pad_to_mux_a_71_t a_71;
    pad_to_mux_a_72_t a_72;
    pad_to_mux_a_73_t a_73;
    pad_to_mux_a_74_t a_74;
    pad_to_mux_a_75_t a_75;
    pad_to_mux_a_76_t a_76;
    pad_to_mux_a_77_t a_77;
    pad_to_mux_a_78_t a_78;
    pad_to_mux_a_79_t a_79;
    pad_to_mux_a_80_t a_80;
    pad_to_mux_a_81_t a_81;
    pad_to_mux_a_82_t a_82;
    pad_to_mux_a_83_t a_83;
    pad_to_mux_a_84_t a_84;
    pad_to_mux_a_85_t a_85;
    pad_to_mux_a_86_t a_86;
    pad_to_mux_a_87_t a_87;
    pad_to_mux_a_88_t a_88;
    pad_to_mux_a_89_t a_89;
    pad_to_mux_a_90_t a_90;
    pad_to_mux_a_91_t a_91;
    pad_to_mux_a_92_t a_92;
    pad_to_mux_b_00_t b_00;
    pad_to_mux_b_01_t b_01;
    pad_to_mux_b_02_t b_02;
    pad_to_mux_b_03_t b_03;
    pad_to_mux_b_04_t b_04;
    pad_to_mux_b_05_t b_05;
    pad_to_mux_b_06_t b_06;
    pad_to_mux_b_07_t b_07;
    pad_to_mux_b_08_t b_08;
    pad_to_mux_b_09_t b_09;
    pad_to_mux_b_10_t b_10;
    pad_to_mux_b_11_t b_11;
    pad_to_mux_b_12_t b_12;
    pad_to_mux_b_13_t b_13;
    pad_to_mux_b_14_t b_14;
    pad_to_mux_b_15_t b_15;
    pad_to_mux_b_16_t b_16;
    pad_to_mux_b_17_t b_17;
    pad_to_mux_b_18_t b_18;
    pad_to_mux_b_19_t b_19;
    pad_to_mux_b_20_t b_20;
    pad_to_mux_b_21_t b_21;
    pad_to_mux_b_22_t b_22;
    pad_to_mux_b_23_t b_23;
    pad_to_mux_b_24_t b_24;
    pad_to_mux_b_25_t b_25;
    pad_to_mux_b_26_t b_26;
    pad_to_mux_b_27_t b_27;
    pad_to_mux_b_28_t b_28;
    pad_to_mux_b_29_t b_29;
    pad_to_mux_b_30_t b_30;
    pad_to_mux_b_31_t b_31;
    pad_to_mux_b_32_t b_32;
    pad_to_mux_b_33_t b_33;
    pad_to_mux_b_34_t b_34;
    pad_to_mux_b_35_t b_35;
    pad_to_mux_b_36_t b_36;
    pad_to_mux_b_37_t b_37;
    pad_to_mux_b_38_t b_38;
    pad_to_mux_b_39_t b_39;
    pad_to_mux_b_40_t b_40;
    pad_to_mux_b_41_t b_41;
    pad_to_mux_b_42_t b_42;
    pad_to_mux_b_43_t b_43;
    pad_to_mux_b_44_t b_44;
    pad_to_mux_b_45_t b_45;
    pad_to_mux_b_46_t b_46;
    pad_to_mux_b_47_t b_47;
    pad_to_mux_b_48_t b_48;
    pad_to_mux_b_49_t b_49;
    pad_to_mux_b_50_t b_50;
    pad_to_mux_b_51_t b_51;
    pad_to_mux_b_52_t b_52;
    pad_to_mux_b_53_t b_53;
    pad_to_mux_b_54_t b_54;
    pad_to_mux_b_55_t b_55;
    pad_to_mux_b_56_t b_56;
    pad_to_mux_b_57_t b_57;
    pad_to_mux_b_58_t b_58;
    pad_to_mux_b_59_t b_59;
    pad_to_mux_b_60_t b_60;
    pad_to_mux_b_61_t b_61;
    pad_to_mux_b_62_t b_62;
    pad_to_mux_b_63_t b_63;
    pad_to_mux_b_64_t b_64;
    pad_to_mux_ot_qspi_00_t ot_qspi_00;
    pad_to_mux_ot_qspi_01_t ot_qspi_01;
    pad_to_mux_ot_qspi_02_t ot_qspi_02;
    pad_to_mux_ot_qspi_03_t ot_qspi_03;
    pad_to_mux_ot_qspi_04_t ot_qspi_04;
    pad_to_mux_ot_qspi_05_t ot_qspi_05;
    pad_to_mux_linux_qspi_00_t linux_qspi_00;
    pad_to_mux_linux_qspi_01_t linux_qspi_01;
    pad_to_mux_linux_qspi_02_t linux_qspi_02;
    pad_to_mux_linux_qspi_03_t linux_qspi_03;
    pad_to_mux_linux_qspi_04_t linux_qspi_04;
    pad_to_mux_linux_qspi_05_t linux_qspi_05;
=======
    mux_to_pad_pad_gpio_b_00_t pad_gpio_b_00;
    mux_to_pad_pad_gpio_b_01_t pad_gpio_b_01;
    mux_to_pad_pad_gpio_b_02_t pad_gpio_b_02;
    mux_to_pad_pad_gpio_b_03_t pad_gpio_b_03;
    mux_to_pad_pad_gpio_b_04_t pad_gpio_b_04;
    mux_to_pad_pad_gpio_b_05_t pad_gpio_b_05;
    mux_to_pad_pad_gpio_b_06_t pad_gpio_b_06;
    mux_to_pad_pad_gpio_b_07_t pad_gpio_b_07;
    mux_to_pad_pad_gpio_b_08_t pad_gpio_b_08;
    mux_to_pad_pad_gpio_b_09_t pad_gpio_b_09;
    mux_to_pad_pad_gpio_b_10_t pad_gpio_b_10;
    mux_to_pad_pad_gpio_b_11_t pad_gpio_b_11;
    mux_to_pad_pad_gpio_b_12_t pad_gpio_b_12;
    mux_to_pad_pad_gpio_b_13_t pad_gpio_b_13;
    mux_to_pad_pad_gpio_b_14_t pad_gpio_b_14;
    mux_to_pad_pad_gpio_b_15_t pad_gpio_b_15;
    mux_to_pad_pad_gpio_b_16_t pad_gpio_b_16;
    mux_to_pad_pad_gpio_b_17_t pad_gpio_b_17;
    mux_to_pad_pad_gpio_b_18_t pad_gpio_b_18;
    mux_to_pad_pad_gpio_b_19_t pad_gpio_b_19;
    mux_to_pad_pad_gpio_b_20_t pad_gpio_b_20;
    mux_to_pad_pad_gpio_b_21_t pad_gpio_b_21;
    mux_to_pad_pad_gpio_b_22_t pad_gpio_b_22;
    mux_to_pad_pad_gpio_b_23_t pad_gpio_b_23;
    mux_to_pad_pad_gpio_b_24_t pad_gpio_b_24;
    mux_to_pad_pad_gpio_b_25_t pad_gpio_b_25;
    mux_to_pad_pad_gpio_b_26_t pad_gpio_b_26;
    mux_to_pad_pad_gpio_b_27_t pad_gpio_b_27;
    mux_to_pad_pad_gpio_b_28_t pad_gpio_b_28;
    mux_to_pad_pad_gpio_b_29_t pad_gpio_b_29;
    mux_to_pad_pad_gpio_b_30_t pad_gpio_b_30;
    mux_to_pad_pad_gpio_b_31_t pad_gpio_b_31;
    mux_to_pad_pad_gpio_b_32_t pad_gpio_b_32;
    mux_to_pad_pad_gpio_b_33_t pad_gpio_b_33;
    mux_to_pad_pad_gpio_b_34_t pad_gpio_b_34;
    mux_to_pad_pad_gpio_b_35_t pad_gpio_b_35;
    mux_to_pad_pad_gpio_b_36_t pad_gpio_b_36;
    mux_to_pad_pad_gpio_b_37_t pad_gpio_b_37;
    mux_to_pad_pad_gpio_b_38_t pad_gpio_b_38;
    mux_to_pad_pad_gpio_b_39_t pad_gpio_b_39;
    mux_to_pad_pad_gpio_b_40_t pad_gpio_b_40;
    mux_to_pad_pad_gpio_b_41_t pad_gpio_b_41;
    mux_to_pad_pad_gpio_b_42_t pad_gpio_b_42;
    mux_to_pad_pad_gpio_b_43_t pad_gpio_b_43;
    mux_to_pad_pad_gpio_b_44_t pad_gpio_b_44;
    mux_to_pad_pad_gpio_b_45_t pad_gpio_b_45;
    mux_to_pad_pad_gpio_b_46_t pad_gpio_b_46;
    mux_to_pad_pad_gpio_b_47_t pad_gpio_b_47;
    mux_to_pad_pad_gpio_b_48_t pad_gpio_b_48;
    mux_to_pad_pad_gpio_b_49_t pad_gpio_b_49;
    mux_to_pad_pad_gpio_b_50_t pad_gpio_b_50;
    mux_to_pad_pad_gpio_b_51_t pad_gpio_b_51;
    mux_to_pad_pad_gpio_b_52_t pad_gpio_b_52;
    mux_to_pad_pad_gpio_b_53_t pad_gpio_b_53;
    mux_to_pad_pad_gpio_b_54_t pad_gpio_b_54;
    mux_to_pad_pad_gpio_b_55_t pad_gpio_b_55;
    mux_to_pad_pad_gpio_b_56_t pad_gpio_b_56;
    mux_to_pad_pad_gpio_b_57_t pad_gpio_b_57;
    mux_to_pad_pad_gpio_c_00_t pad_gpio_c_00;
    mux_to_pad_pad_gpio_c_01_t pad_gpio_c_01;
    mux_to_pad_pad_gpio_c_02_t pad_gpio_c_02;
    mux_to_pad_pad_gpio_c_03_t pad_gpio_c_03;
    mux_to_pad_pad_gpio_d_00_t pad_gpio_d_00;
    mux_to_pad_pad_gpio_d_01_t pad_gpio_d_01;
    mux_to_pad_pad_gpio_d_02_t pad_gpio_d_02;
    mux_to_pad_pad_gpio_d_03_t pad_gpio_d_03;
    mux_to_pad_pad_gpio_d_04_t pad_gpio_d_04;
    mux_to_pad_pad_gpio_d_05_t pad_gpio_d_05;
    mux_to_pad_pad_gpio_d_06_t pad_gpio_d_06;
    mux_to_pad_pad_gpio_d_07_t pad_gpio_d_07;
    mux_to_pad_pad_gpio_d_08_t pad_gpio_d_08;
    mux_to_pad_pad_gpio_d_09_t pad_gpio_d_09;
    mux_to_pad_pad_gpio_d_10_t pad_gpio_d_10;
    mux_to_pad_pad_gpio_e_00_t pad_gpio_e_00;
    mux_to_pad_pad_gpio_e_01_t pad_gpio_e_01;
    mux_to_pad_pad_gpio_e_02_t pad_gpio_e_02;
    mux_to_pad_pad_gpio_e_03_t pad_gpio_e_03;
    mux_to_pad_pad_gpio_e_04_t pad_gpio_e_04;
    mux_to_pad_pad_gpio_e_05_t pad_gpio_e_05;
    mux_to_pad_pad_gpio_e_06_t pad_gpio_e_06;
    mux_to_pad_pad_gpio_e_07_t pad_gpio_e_07;
    mux_to_pad_pad_gpio_e_08_t pad_gpio_e_08;
    mux_to_pad_pad_gpio_e_09_t pad_gpio_e_09;
    mux_to_pad_pad_gpio_e_10_t pad_gpio_e_10;
    mux_to_pad_pad_gpio_e_11_t pad_gpio_e_11;
    mux_to_pad_pad_gpio_e_12_t pad_gpio_e_12;
    mux_to_pad_pad_gpio_f_00_t pad_gpio_f_00;
    mux_to_pad_pad_gpio_f_01_t pad_gpio_f_01;
    mux_to_pad_pad_gpio_f_02_t pad_gpio_f_02;
    mux_to_pad_pad_gpio_f_03_t pad_gpio_f_03;
    mux_to_pad_pad_gpio_f_04_t pad_gpio_f_04;
    mux_to_pad_pad_gpio_f_05_t pad_gpio_f_05;
    mux_to_pad_pad_gpio_f_06_t pad_gpio_f_06;
    mux_to_pad_pad_gpio_f_07_t pad_gpio_f_07;
    mux_to_pad_pad_gpio_f_08_t pad_gpio_f_08;
    mux_to_pad_pad_gpio_f_09_t pad_gpio_f_09;
    mux_to_pad_pad_gpio_f_10_t pad_gpio_f_10;
    mux_to_pad_pad_gpio_f_11_t pad_gpio_f_11;
    mux_to_pad_pad_gpio_f_12_t pad_gpio_f_12;
    mux_to_pad_pad_gpio_f_13_t pad_gpio_f_13;
    mux_to_pad_pad_gpio_f_14_t pad_gpio_f_14;
    mux_to_pad_pad_gpio_f_15_t pad_gpio_f_15;
    mux_to_pad_pad_gpio_f_16_t pad_gpio_f_16;
    mux_to_pad_pad_gpio_f_17_t pad_gpio_f_17;
    mux_to_pad_pad_gpio_f_18_t pad_gpio_f_18;
    mux_to_pad_pad_gpio_f_19_t pad_gpio_f_19;
    mux_to_pad_pad_gpio_f_20_t pad_gpio_f_20;
    mux_to_pad_pad_gpio_f_21_t pad_gpio_f_21;
    mux_to_pad_pad_gpio_f_22_t pad_gpio_f_22;
    mux_to_pad_pad_gpio_f_23_t pad_gpio_f_23;
    mux_to_pad_pad_gpio_f_24_t pad_gpio_f_24;
    mux_to_pad_pad_gpio_f_25_t pad_gpio_f_25;
    mux_to_pad_pad_gpio_f_26_t pad_gpio_f_26;
    mux_to_pad_pad_gpio_f_27_t pad_gpio_f_27;
    mux_to_pad_pad_gpio_f_28_t pad_gpio_f_28;
    mux_to_pad_pad_gpio_pwm0_t pad_gpio_pwm0;
    mux_to_pad_pad_gpio_pwm1_t pad_gpio_pwm1;
    mux_to_pad_pad_gpio_pwm2_t pad_gpio_pwm2;
    mux_to_pad_pad_gpio_pwm3_t pad_gpio_pwm3;
    mux_to_pad_pad_gpio_pwm4_t pad_gpio_pwm4;
    mux_to_pad_pad_gpio_pwm5_t pad_gpio_pwm5;
    mux_to_pad_pad_gpio_pwm6_t pad_gpio_pwm6;
    mux_to_pad_pad_gpio_pwm7_t pad_gpio_pwm7;
  } mux_to_pads_t;

  typedef struct packed{
    pad_to_mux_pad_gpio_b_00_t pad_gpio_b_00;
    pad_to_mux_pad_gpio_b_01_t pad_gpio_b_01;
    pad_to_mux_pad_gpio_b_02_t pad_gpio_b_02;
    pad_to_mux_pad_gpio_b_03_t pad_gpio_b_03;
    pad_to_mux_pad_gpio_b_04_t pad_gpio_b_04;
    pad_to_mux_pad_gpio_b_05_t pad_gpio_b_05;
    pad_to_mux_pad_gpio_b_06_t pad_gpio_b_06;
    pad_to_mux_pad_gpio_b_07_t pad_gpio_b_07;
    pad_to_mux_pad_gpio_b_08_t pad_gpio_b_08;
    pad_to_mux_pad_gpio_b_09_t pad_gpio_b_09;
    pad_to_mux_pad_gpio_b_10_t pad_gpio_b_10;
    pad_to_mux_pad_gpio_b_11_t pad_gpio_b_11;
    pad_to_mux_pad_gpio_b_12_t pad_gpio_b_12;
    pad_to_mux_pad_gpio_b_13_t pad_gpio_b_13;
    pad_to_mux_pad_gpio_b_14_t pad_gpio_b_14;
    pad_to_mux_pad_gpio_b_15_t pad_gpio_b_15;
    pad_to_mux_pad_gpio_b_16_t pad_gpio_b_16;
    pad_to_mux_pad_gpio_b_17_t pad_gpio_b_17;
    pad_to_mux_pad_gpio_b_18_t pad_gpio_b_18;
    pad_to_mux_pad_gpio_b_19_t pad_gpio_b_19;
    pad_to_mux_pad_gpio_b_20_t pad_gpio_b_20;
    pad_to_mux_pad_gpio_b_21_t pad_gpio_b_21;
    pad_to_mux_pad_gpio_b_22_t pad_gpio_b_22;
    pad_to_mux_pad_gpio_b_23_t pad_gpio_b_23;
    pad_to_mux_pad_gpio_b_24_t pad_gpio_b_24;
    pad_to_mux_pad_gpio_b_25_t pad_gpio_b_25;
    pad_to_mux_pad_gpio_b_26_t pad_gpio_b_26;
    pad_to_mux_pad_gpio_b_27_t pad_gpio_b_27;
    pad_to_mux_pad_gpio_b_28_t pad_gpio_b_28;
    pad_to_mux_pad_gpio_b_29_t pad_gpio_b_29;
    pad_to_mux_pad_gpio_b_30_t pad_gpio_b_30;
    pad_to_mux_pad_gpio_b_31_t pad_gpio_b_31;
    pad_to_mux_pad_gpio_b_32_t pad_gpio_b_32;
    pad_to_mux_pad_gpio_b_33_t pad_gpio_b_33;
    pad_to_mux_pad_gpio_b_34_t pad_gpio_b_34;
    pad_to_mux_pad_gpio_b_35_t pad_gpio_b_35;
    pad_to_mux_pad_gpio_b_36_t pad_gpio_b_36;
    pad_to_mux_pad_gpio_b_37_t pad_gpio_b_37;
    pad_to_mux_pad_gpio_b_38_t pad_gpio_b_38;
    pad_to_mux_pad_gpio_b_39_t pad_gpio_b_39;
    pad_to_mux_pad_gpio_b_40_t pad_gpio_b_40;
    pad_to_mux_pad_gpio_b_41_t pad_gpio_b_41;
    pad_to_mux_pad_gpio_b_42_t pad_gpio_b_42;
    pad_to_mux_pad_gpio_b_43_t pad_gpio_b_43;
    pad_to_mux_pad_gpio_b_44_t pad_gpio_b_44;
    pad_to_mux_pad_gpio_b_45_t pad_gpio_b_45;
    pad_to_mux_pad_gpio_b_46_t pad_gpio_b_46;
    pad_to_mux_pad_gpio_b_47_t pad_gpio_b_47;
    pad_to_mux_pad_gpio_b_48_t pad_gpio_b_48;
    pad_to_mux_pad_gpio_b_49_t pad_gpio_b_49;
    pad_to_mux_pad_gpio_b_50_t pad_gpio_b_50;
    pad_to_mux_pad_gpio_b_51_t pad_gpio_b_51;
    pad_to_mux_pad_gpio_b_52_t pad_gpio_b_52;
    pad_to_mux_pad_gpio_b_53_t pad_gpio_b_53;
    pad_to_mux_pad_gpio_b_54_t pad_gpio_b_54;
    pad_to_mux_pad_gpio_b_55_t pad_gpio_b_55;
    pad_to_mux_pad_gpio_b_56_t pad_gpio_b_56;
    pad_to_mux_pad_gpio_b_57_t pad_gpio_b_57;
    pad_to_mux_pad_gpio_c_00_t pad_gpio_c_00;
    pad_to_mux_pad_gpio_c_01_t pad_gpio_c_01;
    pad_to_mux_pad_gpio_c_02_t pad_gpio_c_02;
    pad_to_mux_pad_gpio_c_03_t pad_gpio_c_03;
    pad_to_mux_pad_gpio_d_00_t pad_gpio_d_00;
    pad_to_mux_pad_gpio_d_01_t pad_gpio_d_01;
    pad_to_mux_pad_gpio_d_02_t pad_gpio_d_02;
    pad_to_mux_pad_gpio_d_03_t pad_gpio_d_03;
    pad_to_mux_pad_gpio_d_04_t pad_gpio_d_04;
    pad_to_mux_pad_gpio_d_05_t pad_gpio_d_05;
    pad_to_mux_pad_gpio_d_06_t pad_gpio_d_06;
    pad_to_mux_pad_gpio_d_07_t pad_gpio_d_07;
    pad_to_mux_pad_gpio_d_08_t pad_gpio_d_08;
    pad_to_mux_pad_gpio_d_09_t pad_gpio_d_09;
    pad_to_mux_pad_gpio_d_10_t pad_gpio_d_10;
    pad_to_mux_pad_gpio_e_00_t pad_gpio_e_00;
    pad_to_mux_pad_gpio_e_01_t pad_gpio_e_01;
    pad_to_mux_pad_gpio_e_02_t pad_gpio_e_02;
    pad_to_mux_pad_gpio_e_03_t pad_gpio_e_03;
    pad_to_mux_pad_gpio_e_04_t pad_gpio_e_04;
    pad_to_mux_pad_gpio_e_05_t pad_gpio_e_05;
    pad_to_mux_pad_gpio_e_06_t pad_gpio_e_06;
    pad_to_mux_pad_gpio_e_07_t pad_gpio_e_07;
    pad_to_mux_pad_gpio_e_08_t pad_gpio_e_08;
    pad_to_mux_pad_gpio_e_09_t pad_gpio_e_09;
    pad_to_mux_pad_gpio_e_10_t pad_gpio_e_10;
    pad_to_mux_pad_gpio_e_11_t pad_gpio_e_11;
    pad_to_mux_pad_gpio_e_12_t pad_gpio_e_12;
    pad_to_mux_pad_gpio_f_00_t pad_gpio_f_00;
    pad_to_mux_pad_gpio_f_01_t pad_gpio_f_01;
    pad_to_mux_pad_gpio_f_02_t pad_gpio_f_02;
    pad_to_mux_pad_gpio_f_03_t pad_gpio_f_03;
    pad_to_mux_pad_gpio_f_04_t pad_gpio_f_04;
    pad_to_mux_pad_gpio_f_05_t pad_gpio_f_05;
    pad_to_mux_pad_gpio_f_06_t pad_gpio_f_06;
    pad_to_mux_pad_gpio_f_07_t pad_gpio_f_07;
    pad_to_mux_pad_gpio_f_08_t pad_gpio_f_08;
    pad_to_mux_pad_gpio_f_09_t pad_gpio_f_09;
    pad_to_mux_pad_gpio_f_10_t pad_gpio_f_10;
    pad_to_mux_pad_gpio_f_11_t pad_gpio_f_11;
    pad_to_mux_pad_gpio_f_12_t pad_gpio_f_12;
    pad_to_mux_pad_gpio_f_13_t pad_gpio_f_13;
    pad_to_mux_pad_gpio_f_14_t pad_gpio_f_14;
    pad_to_mux_pad_gpio_f_15_t pad_gpio_f_15;
    pad_to_mux_pad_gpio_f_16_t pad_gpio_f_16;
    pad_to_mux_pad_gpio_f_17_t pad_gpio_f_17;
    pad_to_mux_pad_gpio_f_18_t pad_gpio_f_18;
    pad_to_mux_pad_gpio_f_19_t pad_gpio_f_19;
    pad_to_mux_pad_gpio_f_20_t pad_gpio_f_20;
    pad_to_mux_pad_gpio_f_21_t pad_gpio_f_21;
    pad_to_mux_pad_gpio_f_22_t pad_gpio_f_22;
    pad_to_mux_pad_gpio_f_23_t pad_gpio_f_23;
    pad_to_mux_pad_gpio_f_24_t pad_gpio_f_24;
    pad_to_mux_pad_gpio_f_25_t pad_gpio_f_25;
    pad_to_mux_pad_gpio_f_26_t pad_gpio_f_26;
    pad_to_mux_pad_gpio_f_27_t pad_gpio_f_27;
    pad_to_mux_pad_gpio_f_28_t pad_gpio_f_28;
    pad_to_mux_pad_gpio_pwm0_t pad_gpio_pwm0;
    pad_to_mux_pad_gpio_pwm1_t pad_gpio_pwm1;
    pad_to_mux_pad_gpio_pwm2_t pad_gpio_pwm2;
    pad_to_mux_pad_gpio_pwm3_t pad_gpio_pwm3;
    pad_to_mux_pad_gpio_pwm4_t pad_gpio_pwm4;
    pad_to_mux_pad_gpio_pwm5_t pad_gpio_pwm5;
    pad_to_mux_pad_gpio_pwm6_t pad_gpio_pwm6;
    pad_to_mux_pad_gpio_pwm7_t pad_gpio_pwm7;
>>>>>>> d61477d7 (Updated padframe with QSPI OT signals and bootselet signals)
  } pads_to_mux_t;



  // Indices definitions

<<<<<<< HEAD
  parameter PAD_MUX_GROUP_A_00_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_00_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_00_SEL_I2C0_I2C_SCL = 1'd1;

  parameter PAD_MUX_GROUP_A_01_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_01_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_01_SEL_I2C0_I2C_SDA = 1'd1;

  parameter PAD_MUX_GROUP_A_02_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_02_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_02_SEL_SPI0_SPI_SCK = 1'd1;

  parameter PAD_MUX_GROUP_A_03_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_03_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_03_SEL_SPI0_SPI_CS0 = 1'd1;

  parameter PAD_MUX_GROUP_A_04_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_04_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_04_SEL_SPI0_SPI_MISO = 1'd1;

  parameter PAD_MUX_GROUP_A_05_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_05_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_05_SEL_SPI0_SPI_MOSI = 1'd1;

  parameter PAD_MUX_GROUP_A_06_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_06_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_06_SEL_SPI1_SPI_SCK = 1'd1;

  parameter PAD_MUX_GROUP_A_07_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_07_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_07_SEL_SPI1_SPI_CS0 = 1'd1;

  parameter PAD_MUX_GROUP_A_08_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_08_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_08_SEL_SPI1_SPI_MISO = 1'd1;

  parameter PAD_MUX_GROUP_A_09_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_09_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_09_SEL_SPI1_SPI_MOSI = 1'd1;

  parameter PAD_MUX_GROUP_A_10_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_10_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_10_SEL_SPI2_SPI_SCK = 1'd1;

  parameter PAD_MUX_GROUP_A_11_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_11_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_11_SEL_SPI2_SPI_CS0 = 1'd1;

  parameter PAD_MUX_GROUP_A_12_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_12_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_12_SEL_SPI2_SPI_MISO = 1'd1;

  parameter PAD_MUX_GROUP_A_13_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_13_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_13_SEL_SPI2_SPI_MOSI = 1'd1;

  parameter PAD_MUX_GROUP_A_14_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_14_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_14_SEL_SPI3_SPI_SCK = 1'd1;

  parameter PAD_MUX_GROUP_A_15_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_15_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_15_SEL_SPI3_SPI_CS0 = 1'd1;

  parameter PAD_MUX_GROUP_A_16_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_16_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_16_SEL_SPI3_SPI_MISO = 1'd1;

  parameter PAD_MUX_GROUP_A_17_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_17_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_17_SEL_SPI3_SPI_MOSI = 1'd1;

  parameter PAD_MUX_GROUP_A_18_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_18_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_18_SEL_SDIO0_SDIO_DATA0 = 1'd1;

  parameter PAD_MUX_GROUP_A_19_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_19_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_19_SEL_SDIO0_SDIO_DATA1 = 1'd1;

  parameter PAD_MUX_GROUP_A_20_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_20_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_20_SEL_SDIO0_SDIO_DATA2 = 1'd1;

  parameter PAD_MUX_GROUP_A_21_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_21_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_21_SEL_SDIO0_SDIO_DATA3 = 1'd1;

  parameter PAD_MUX_GROUP_A_22_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_22_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_22_SEL_SDIO0_SDIO_CLK = 1'd1;

  parameter PAD_MUX_GROUP_A_23_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_23_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_23_SEL_SDIO0_SDIO_CMD = 1'd1;

  parameter PAD_MUX_GROUP_A_24_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_24_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_24_SEL_UART0_UART_TX = 1'd1;

  parameter PAD_MUX_GROUP_A_25_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_25_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_25_SEL_UART0_UART_RX = 1'd1;

  parameter PAD_MUX_GROUP_A_26_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_26_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_26_SEL_I2C1_I2C_SCL = 1'd1;

  parameter PAD_MUX_GROUP_A_27_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_27_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_27_SEL_I2C1_I2C_SDA = 1'd1;

  parameter PAD_MUX_GROUP_A_28_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_28_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_28_SEL_USART0_UART_TX = 1'd1;

  parameter PAD_MUX_GROUP_A_29_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_29_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_29_SEL_USART0_UART_RX = 1'd1;

  parameter PAD_MUX_GROUP_A_30_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_30_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_30_SEL_USART0_UART_RTS = 1'd1;

  parameter PAD_MUX_GROUP_A_31_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_31_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_31_SEL_USART0_UART_CTS = 1'd1;

  parameter PAD_MUX_GROUP_A_32_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_32_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_32_SEL_SPI4_SPI_SCK = 1'd1;

  parameter PAD_MUX_GROUP_A_33_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_33_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_33_SEL_SPI4_SPI_CS0 = 1'd1;

  parameter PAD_MUX_GROUP_A_34_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_34_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_34_SEL_SPI4_SPI_MISO = 1'd1;

  parameter PAD_MUX_GROUP_A_35_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_35_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_35_SEL_SPI4_SPI_MOSI = 1'd1;

  parameter PAD_MUX_GROUP_A_36_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_36_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_36_SEL_I2C2_I2C_SCL = 1'd1;

  parameter PAD_MUX_GROUP_A_37_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_37_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_37_SEL_I2C2_I2C_SDA = 1'd1;

  parameter PAD_MUX_GROUP_A_38_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_38_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_38_SEL_PWM0_PWM0 = 1'd1;

  parameter PAD_MUX_GROUP_A_39_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_39_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_39_SEL_PWM0_PWM1 = 1'd1;

  parameter PAD_MUX_GROUP_A_40_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_40_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_40_SEL_PWM0_PWM2 = 1'd1;

  parameter PAD_MUX_GROUP_A_41_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_41_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_41_SEL_PWM0_PWM3 = 1'd1;

  parameter PAD_MUX_GROUP_A_42_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_42_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_42_SEL_CAM0_CAM_PCLK = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_42_SEL_I2C3_I2C_SCL = 2'd2;

  parameter PAD_MUX_GROUP_A_43_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_43_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_43_SEL_CAM0_CAM_VSYNC = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_43_SEL_I2C3_I2C_SDA = 2'd2;

  parameter PAD_MUX_GROUP_A_44_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_44_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_44_SEL_CAM0_CAM_DATA0_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_44_SEL_SPI5_SPI_SCK = 2'd2;

  parameter PAD_MUX_GROUP_A_45_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_45_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_45_SEL_CAM0_CAM_DATA1_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_45_SEL_SPI5_SPI_CS0 = 2'd2;

  parameter PAD_MUX_GROUP_A_46_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_46_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_46_SEL_CAM0_CAM_DATA2_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_46_SEL_SPI5_SPI_MISO = 2'd2;

  parameter PAD_MUX_GROUP_A_47_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_47_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_47_SEL_CAM0_CAM_DATA3_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_47_SEL_SPI5_SPI_MOSI = 2'd2;

  parameter PAD_MUX_GROUP_A_48_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_48_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_48_SEL_CAM0_CAM_DATA5_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_48_SEL_SPI6_SPI_SCK = 2'd2;

  parameter PAD_MUX_GROUP_A_49_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_49_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_49_SEL_CAM0_CAM_DATA6_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_49_SEL_SPI6_SPI_CS0 = 2'd2;

  parameter PAD_MUX_GROUP_A_50_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_50_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_50_SEL_CAM0_CAM_DATA7_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_50_SEL_SPI6_SPI_MISO = 2'd2;

  parameter PAD_MUX_GROUP_A_51_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_51_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_51_SEL_CAM1_CAM_PCLK = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_51_SEL_SPI6_SPI_MOSI = 2'd2;

  parameter PAD_MUX_GROUP_A_52_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_52_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_52_SEL_CAM1_CAM_HSYNC = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_52_SEL_SPI7_SPI_SCK = 2'd2;

  parameter PAD_MUX_GROUP_A_53_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_53_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_53_SEL_CAM1_CAM_DATA0_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_53_SEL_SPI7_SPI_MISO = 2'd2;

  parameter PAD_MUX_GROUP_A_54_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_54_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_54_SEL_CAM1_CAM_DATA1_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_54_SEL_SPI7_SPI_MOSI = 2'd2;

  parameter PAD_MUX_GROUP_A_55_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_55_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_55_SEL_CAM1_CAM_DATA5_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_55_SEL_SPI7_SPI_CS0 = 2'd2;

  parameter PAD_MUX_GROUP_A_56_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_56_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_56_SEL_CAM1_CAM_DATA6_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_56_SEL_SPI7_SPI_CS1 = 2'd2;

  parameter PAD_MUX_GROUP_A_57_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_57_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_57_SEL_CAM1_CAM_DATA7_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_57_SEL_I2C4_I2C_SCL = 2'd2;

  parameter PAD_MUX_GROUP_A_58_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_58_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_58_SEL_I2C4_I2C_SDA = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_58_SEL_SDIO1_SDIO_DATA0 = 2'd2;

  parameter PAD_MUX_GROUP_A_59_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_59_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_59_SEL_SDIO1_SDIO_DATA2 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_59_SEL_UART1_UART_TX = 2'd2;

  parameter PAD_MUX_GROUP_A_60_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_60_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_60_SEL_SDIO1_SDIO_DATA3 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_60_SEL_UART1_UART_RX = 2'd2;

  parameter PAD_MUX_GROUP_A_61_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_61_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_61_SEL_SDIO1_SDIO_CLK = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_61_SEL_USART1_UART_TX = 2'd2;

  parameter PAD_MUX_GROUP_A_62_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_62_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_62_SEL_SDIO1_SDIO_CMD = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_62_SEL_USART1_UART_RX = 2'd2;

  parameter PAD_MUX_GROUP_A_63_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_63_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_63_SEL_USART1_UART_RTS = 1'd1;

  parameter PAD_MUX_GROUP_A_64_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_64_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_64_SEL_USART1_UART_CTS = 1'd1;

  parameter PAD_MUX_GROUP_A_65_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_65_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_65_SEL_UART2_UART_TX = 1'd1;

  parameter PAD_MUX_GROUP_A_66_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_66_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_66_SEL_UART2_UART_RX = 1'd1;

  parameter PAD_MUX_GROUP_A_67_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_67_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_67_SEL_I2C5_I2C_SCL = 1'd1;

  parameter PAD_MUX_GROUP_A_68_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_68_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_68_SEL_I2C5_I2C_SDA = 1'd1;

  parameter PAD_MUX_GROUP_A_69_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_69_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_69_SEL_USART2_UART_TX = 1'd1;

  parameter PAD_MUX_GROUP_A_70_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_70_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_70_SEL_USART2_UART_RX = 1'd1;

  parameter PAD_MUX_GROUP_A_71_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_71_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_71_SEL_USART2_UART_RTS = 1'd1;

  parameter PAD_MUX_GROUP_A_72_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_72_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_72_SEL_USART2_UART_CTS = 1'd1;

  parameter PAD_MUX_GROUP_A_73_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_73_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_73_SEL_USART3_UART_TX = 1'd1;

  parameter PAD_MUX_GROUP_A_74_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_74_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_74_SEL_USART3_UART_RX = 1'd1;

  parameter PAD_MUX_GROUP_A_75_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_75_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_75_SEL_USART3_UART_RTS = 1'd1;

  parameter PAD_MUX_GROUP_A_76_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_76_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_76_SEL_USART3_UART_CTS = 1'd1;

  parameter PAD_MUX_GROUP_A_77_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_77_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_77_SEL_PWM1_PWM0 = 1'd1;

  parameter PAD_MUX_GROUP_A_78_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_78_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_78_SEL_PWM1_PWM1 = 1'd1;

  parameter PAD_MUX_GROUP_A_79_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_79_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_79_SEL_PWM1_PWM2 = 1'd1;

  parameter PAD_MUX_GROUP_A_80_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_80_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_80_SEL_PWM1_PWM3 = 1'd1;

  parameter PAD_MUX_GROUP_A_81_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_81_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_81_SEL_CAN0_CAN_TX = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_81_SEL_SPI8_SPI_SCK = 2'd2;

  parameter PAD_MUX_GROUP_A_82_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_82_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_82_SEL_CAN0_CAN_RX = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_82_SEL_SPI8_SPI_CS0 = 2'd2;

  parameter PAD_MUX_GROUP_A_83_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_83_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_83_SEL_CAN1_CAN_TX = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_83_SEL_SPI8_SPI_MISO = 2'd2;

  parameter PAD_MUX_GROUP_A_84_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_A_84_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_A_84_SEL_CAN1_CAN_RX = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_A_84_SEL_SPI8_SPI_MOSI = 2'd2;

  parameter PAD_MUX_GROUP_A_85_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_85_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_85_SEL_SPI9_SPI_SCK = 1'd1;

  parameter PAD_MUX_GROUP_A_86_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_86_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_86_SEL_SPI9_SPI_CS0 = 1'd1;

  parameter PAD_MUX_GROUP_A_87_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_87_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_87_SEL_SPI9_SPI_MISO = 1'd1;

  parameter PAD_MUX_GROUP_A_88_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_88_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_88_SEL_SPI9_SPI_MOSI = 1'd1;

  parameter PAD_MUX_GROUP_A_89_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_89_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_89_SEL_SPI10_SPI_SCK = 1'd1;

  parameter PAD_MUX_GROUP_A_90_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_90_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_90_SEL_SPI10_SPI_CS0 = 1'd1;

  parameter PAD_MUX_GROUP_A_91_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_91_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_91_SEL_SPI10_SPI_MISO = 1'd1;

  parameter PAD_MUX_GROUP_A_92_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_A_92_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_A_92_SEL_SPI10_SPI_MOSI = 1'd1;

  parameter PAD_MUX_GROUP_B_00_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_00_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_00_SEL_GPIO_B_GPIO0 = 1'd1;

  parameter PAD_MUX_GROUP_B_01_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_01_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_01_SEL_GPIO_B_GPIO1 = 1'd1;

  parameter PAD_MUX_GROUP_B_02_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_02_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_02_SEL_GPIO_B_GPIO2 = 1'd1;

  parameter PAD_MUX_GROUP_B_03_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_03_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_03_SEL_GPIO_B_GPIO3 = 1'd1;

  parameter PAD_MUX_GROUP_B_04_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_04_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_04_SEL_GPIO_B_GPIO4 = 1'd1;

  parameter PAD_MUX_GROUP_B_05_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_05_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_05_SEL_GPIO_B_GPIO5 = 1'd1;

  parameter PAD_MUX_GROUP_B_06_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_06_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_06_SEL_GPIO_B_GPIO6 = 1'd1;

  parameter PAD_MUX_GROUP_B_07_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_07_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_07_SEL_GPIO_B_GPIO7 = 1'd1;

  parameter PAD_MUX_GROUP_B_08_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_08_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_08_SEL_GPIO_B_GPIO8 = 1'd1;

  parameter PAD_MUX_GROUP_B_09_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_09_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_09_SEL_GPIO_B_GPIO9 = 1'd1;

  parameter PAD_MUX_GROUP_B_10_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_10_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_10_SEL_GPIO_B_GPIO10 = 1'd1;

  parameter PAD_MUX_GROUP_B_11_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_11_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_11_SEL_GPIO_B_GPIO11 = 1'd1;

  parameter PAD_MUX_GROUP_B_12_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_12_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_12_SEL_GPIO_B_GPIO12 = 1'd1;

  parameter PAD_MUX_GROUP_B_13_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_13_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_13_SEL_GPIO_B_GPIO13 = 1'd1;

  parameter PAD_MUX_GROUP_B_14_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_14_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_14_SEL_GPIO_B_GPIO14 = 1'd1;

  parameter PAD_MUX_GROUP_B_15_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_15_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_15_SEL_GPIO_B_GPIO15 = 1'd1;

  parameter PAD_MUX_GROUP_B_16_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_16_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_16_SEL_GPIO_B_GPIO16 = 1'd1;

  parameter PAD_MUX_GROUP_B_17_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_17_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_17_SEL_GPIO_B_GPIO17 = 1'd1;

  parameter PAD_MUX_GROUP_B_18_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_18_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_18_SEL_GPIO_B_GPIO18 = 1'd1;

  parameter PAD_MUX_GROUP_B_19_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_19_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_19_SEL_CAM0_CAM_HSYNC = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_19_SEL_GPIO_B_GPIO19 = 2'd2;

  parameter PAD_MUX_GROUP_B_20_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_20_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_20_SEL_CAM0_CAM_DATA4_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_20_SEL_GPIO_B_GPIO20 = 2'd2;

  parameter PAD_MUX_GROUP_B_21_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_21_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_21_SEL_CAM1_CAM_VSYNC = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_21_SEL_GPIO_B_GPIO21 = 2'd2;

  parameter PAD_MUX_GROUP_B_22_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_22_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_22_SEL_CAM1_CAM_DATA2_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_22_SEL_GPIO_B_GPIO22 = 2'd2;

  parameter PAD_MUX_GROUP_B_23_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_23_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_23_SEL_CAM1_CAM_DATA3_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_23_SEL_GPIO_B_GPIO23 = 2'd2;

  parameter PAD_MUX_GROUP_B_24_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_24_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_24_SEL_CAM1_CAM_DATA4_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_24_SEL_GPIO_B_GPIO24 = 2'd2;

  parameter PAD_MUX_GROUP_B_25_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_25_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_25_SEL_GPIO_B_GPIO25 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_25_SEL_SDIO1_SDIO_DATA1 = 2'd2;

  parameter PAD_MUX_GROUP_B_26_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_26_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_26_SEL_GPIO_B_GPIO26 = 1'd1;

  parameter PAD_MUX_GROUP_B_27_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_27_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_27_SEL_GPIO_B_GPIO27 = 1'd1;

  parameter PAD_MUX_GROUP_B_28_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_28_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_28_SEL_GPIO_B_GPIO28 = 1'd1;

  parameter PAD_MUX_GROUP_B_29_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_29_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_29_SEL_GPIO_B_GPIO29 = 1'd1;

  parameter PAD_MUX_GROUP_B_30_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_30_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_30_SEL_GPIO_B_GPIO30 = 1'd1;

  parameter PAD_MUX_GROUP_B_31_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_31_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_31_SEL_GPIO_B_GPIO31 = 1'd1;

  parameter PAD_MUX_GROUP_B_32_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_32_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_32_SEL_GPIO_B_GPIO32 = 1'd1;

  parameter PAD_MUX_GROUP_B_33_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_33_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_33_SEL_GPIO_B_GPIO33 = 1'd1;

  parameter PAD_MUX_GROUP_B_34_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_34_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_34_SEL_GPIO_B_GPIO34 = 1'd1;

  parameter PAD_MUX_GROUP_B_35_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_35_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_35_SEL_GPIO_B_GPIO35 = 1'd1;

  parameter PAD_MUX_GROUP_B_36_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_36_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_36_SEL_GPIO_B_GPIO36 = 1'd1;

  parameter PAD_MUX_GROUP_B_37_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_37_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_37_SEL_GPIO_B_GPIO37 = 1'd1;

  parameter PAD_MUX_GROUP_B_38_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_38_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_38_SEL_GPIO_B_GPIO38 = 1'd1;

  parameter PAD_MUX_GROUP_B_39_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_39_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_39_SEL_GPIO_B_GPIO39 = 1'd1;

  parameter PAD_MUX_GROUP_B_40_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_40_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_40_SEL_GPIO_B_GPIO40 = 1'd1;

  parameter PAD_MUX_GROUP_B_41_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_41_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_41_SEL_GPIO_B_GPIO41 = 1'd1;

  parameter PAD_MUX_GROUP_B_42_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_42_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_42_SEL_GPIO_B_GPIO42 = 1'd1;

  parameter PAD_MUX_GROUP_B_43_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_43_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_43_SEL_GPIO_B_GPIO43 = 1'd1;

  parameter PAD_MUX_GROUP_B_44_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_44_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_44_SEL_GPIO_B_GPIO44 = 1'd1;

  parameter PAD_MUX_GROUP_B_45_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_45_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_45_SEL_GPIO_B_GPIO45 = 1'd1;

  parameter PAD_MUX_GROUP_B_46_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_46_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_46_SEL_GPIO_B_GPIO46 = 1'd1;

  parameter PAD_MUX_GROUP_B_47_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_47_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_47_SEL_ETH_ETH_RST = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_47_SEL_GPIO_B_GPIO47 = 2'd2;

  parameter PAD_MUX_GROUP_B_48_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_48_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_48_SEL_ETH_ETH_RXCK = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_48_SEL_GPIO_B_GPIO48 = 2'd2;

  parameter PAD_MUX_GROUP_B_49_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_49_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_49_SEL_ETH_ETH_RXCTL = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_49_SEL_GPIO_B_GPIO49 = 2'd2;

  parameter PAD_MUX_GROUP_B_50_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_50_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_50_SEL_ETH_ETH_RXD0 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_50_SEL_GPIO_B_GPIO50 = 2'd2;

  parameter PAD_MUX_GROUP_B_51_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_51_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_51_SEL_ETH_ETH_RXD1 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_51_SEL_GPIO_B_GPIO51 = 2'd2;

  parameter PAD_MUX_GROUP_B_52_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_52_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_52_SEL_ETH_ETH_RXD2 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_52_SEL_GPIO_B_GPIO52 = 2'd2;

  parameter PAD_MUX_GROUP_B_53_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_53_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_53_SEL_ETH_ETH_RXD3 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_53_SEL_GPIO_B_GPIO53 = 2'd2;

  parameter PAD_MUX_GROUP_B_54_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_54_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_54_SEL_ETH_ETH_TXCK = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_54_SEL_GPIO_B_GPIO54 = 2'd2;

  parameter PAD_MUX_GROUP_B_55_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_55_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_55_SEL_ETH_ETH_TXCTL = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_55_SEL_GPIO_B_GPIO55 = 2'd2;

  parameter PAD_MUX_GROUP_B_56_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_56_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_56_SEL_ETH_ETH_TXD0 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_56_SEL_GPIO_B_GPIO56 = 2'd2;

  parameter PAD_MUX_GROUP_B_57_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_57_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_57_SEL_ETH_ETH_TXD1 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_57_SEL_GPIO_B_GPIO57 = 2'd2;

  parameter PAD_MUX_GROUP_B_58_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_58_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_58_SEL_ETH_ETH_TXD2 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_58_SEL_GPIO_B_GPIO58 = 2'd2;

  parameter PAD_MUX_GROUP_B_59_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_59_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_59_SEL_ETH_ETH_TXD3 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_59_SEL_GPIO_B_GPIO59 = 2'd2;

  parameter PAD_MUX_GROUP_B_60_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_60_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_60_SEL_ETH_ETH_MDIO = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_60_SEL_GPIO_B_GPIO60 = 2'd2;

  parameter PAD_MUX_GROUP_B_61_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_61_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_61_SEL_ETH_ETH_MDC = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_61_SEL_GPIO_B_GPIO61 = 2'd2;

  parameter PAD_MUX_GROUP_B_62_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_B_62_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_B_62_SEL_ETH_ETH_INTB = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_B_62_SEL_GPIO_B_GPIO62 = 2'd2;

  parameter PAD_MUX_GROUP_B_63_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_63_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_63_SEL_GPIO_B_GPIO63 = 1'd1;

  parameter PAD_MUX_GROUP_B_64_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_B_64_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_B_64_SEL_GPIO_B_GPIO64 = 1'd1;

  parameter PAD_MUX_GROUP_LINUX_QSPI_00_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_LINUX_QSPI_00_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_LINUX_QSPI_00_SEL_QSPI_LINUX_QSPI_SCK = 1'd1;

  parameter PAD_MUX_GROUP_LINUX_QSPI_01_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_LINUX_QSPI_01_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_LINUX_QSPI_01_SEL_QSPI_LINUX_QSPI_CSN = 1'd1;

  parameter PAD_MUX_GROUP_LINUX_QSPI_02_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_LINUX_QSPI_02_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_LINUX_QSPI_02_SEL_QSPI_LINUX_QSPI_SD0 = 1'd1;

  parameter PAD_MUX_GROUP_LINUX_QSPI_03_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_LINUX_QSPI_03_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_LINUX_QSPI_03_SEL_QSPI_LINUX_QSPI_SD1 = 1'd1;

  parameter PAD_MUX_GROUP_LINUX_QSPI_04_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_LINUX_QSPI_04_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_LINUX_QSPI_04_SEL_QSPI_LINUX_QSPI_SD2 = 1'd1;

  parameter PAD_MUX_GROUP_LINUX_QSPI_05_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_LINUX_QSPI_05_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_LINUX_QSPI_05_SEL_QSPI_LINUX_QSPI_SD3 = 1'd1;

  parameter PAD_MUX_GROUP_OT_QSPI_00_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_OT_QSPI_00_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_OT_QSPI_00_SEL_QSPI_OT_QSPI_SCK = 1'd1;

  parameter PAD_MUX_GROUP_OT_QSPI_01_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_OT_QSPI_01_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_OT_QSPI_01_SEL_QSPI_OT_QSPI_CSN = 1'd1;

  parameter PAD_MUX_GROUP_OT_QSPI_02_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_OT_QSPI_02_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_OT_QSPI_02_SEL_QSPI_OT_QSPI_SD0 = 1'd1;

  parameter PAD_MUX_GROUP_OT_QSPI_03_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_OT_QSPI_03_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_OT_QSPI_03_SEL_QSPI_OT_QSPI_SD1 = 1'd1;

  parameter PAD_MUX_GROUP_OT_QSPI_04_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_OT_QSPI_04_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_OT_QSPI_04_SEL_QSPI_OT_QSPI_SD2 = 1'd1;

  parameter PAD_MUX_GROUP_OT_QSPI_05_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_OT_QSPI_05_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_OT_QSPI_05_SEL_QSPI_OT_QSPI_SD3 = 1'd1;
=======
  parameter PAD_MUX_GROUP_MX_PWM_SEL_WIDTH = 4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_SEL_DEFAULT = 4'd0;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_SEL_PWM_PWM0 = 4'd1;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_SEL_PWM_PWM1 = 4'd2;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_SEL_PWM_PWM2 = 4'd3;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_SEL_PWM_PWM3 = 4'd4;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_SEL_PWM_PWM4 = 4'd5;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_SEL_PWM_PWM5 = 4'd6;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_SEL_PWM_PWM6 = 4'd7;
  parameter logic[3:0] PAD_MUX_GROUP_MX_PWM_SEL_PWM_PWM7 = 4'd8;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_00_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_00_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_00_SEL_GPIO_B_GPIO0 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_00_SEL_SPI0_SPI_CS0 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_01_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_01_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_01_SEL_GPIO_B_GPIO1 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_01_SEL_SPI0_SPI_SCK = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_02_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_02_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_02_SEL_GPIO_B_GPIO2 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_02_SEL_SPI0_SPI_MISO = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_03_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_03_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_03_SEL_GPIO_B_GPIO3 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_03_SEL_SPI0_SPI_MOSI = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_04_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_04_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_04_SEL_GPIO_B_GPIO4 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_04_SEL_SPI1_SPI_CS0 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_05_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_05_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_05_SEL_GPIO_B_GPIO5 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_05_SEL_SPI1_SPI_SCK = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_06_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_06_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_06_SEL_GPIO_B_GPIO6 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_06_SEL_SPI1_SPI_MISO = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_07_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_07_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_07_SEL_GPIO_B_GPIO7 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_07_SEL_SPI1_SPI_MOSI = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_08_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_08_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_08_SEL_GPIO_B_GPIO8 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_08_SEL_SPI2_SPI_CS0 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_09_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_09_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_09_SEL_GPIO_B_GPIO9 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_09_SEL_SPI2_SPI_SCK = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_10_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_10_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_10_SEL_GPIO_B_GPIO10 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_10_SEL_SPI2_SPI_MISO = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_11_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_11_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_11_SEL_GPIO_B_GPIO11 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_11_SEL_SPI2_SPI_MOSI = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_12_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_12_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_12_SEL_GPIO_B_GPIO12 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_12_SEL_SPI3_SPI_CS0 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_13_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_13_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_13_SEL_GPIO_B_GPIO13 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_13_SEL_SPI3_SPI_SCK = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_14_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_14_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_14_SEL_GPIO_B_GPIO14 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_14_SEL_SPI3_SPI_MISO = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_15_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_15_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_15_SEL_GPIO_B_GPIO15 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_15_SEL_SPI3_SPI_MOSI = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_16_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_16_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_16_SEL_GPIO_B_GPIO16 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_16_SEL_SPI4_SPI_SCK = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_17_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_17_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_17_SEL_GPIO_B_GPIO17 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_17_SEL_SPI4_SPI_MISO = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_18_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_18_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_18_SEL_GPIO_B_GPIO18 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_18_SEL_SPI4_SPI_MOSI = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_19_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_19_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_19_SEL_GPIO_B_GPIO19 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_19_SEL_SPI4_SPI_CS0 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_20_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_20_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_20_SEL_GPIO_B_GPIO20 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_20_SEL_SPI5_SPI_SCK = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_21_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_21_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_21_SEL_GPIO_B_GPIO21 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_21_SEL_SPI5_SPI_MISO = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_22_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_22_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_22_SEL_GPIO_B_GPIO22 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_22_SEL_SPI5_SPI_MOSI = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_23_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_23_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_23_SEL_GPIO_B_GPIO23 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_23_SEL_SPI5_SPI_CS0 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_24_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_24_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_24_SEL_GPIO_B_GPIO24 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_24_SEL_SPI6_SPI_SCK = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_25_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_25_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_25_SEL_GPIO_B_GPIO25 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_25_SEL_SPI6_SPI_MISO = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_26_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_26_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_26_SEL_GPIO_B_GPIO26 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_26_SEL_SPI6_SPI_MOSI = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_27_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_27_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_27_SEL_GPIO_B_GPIO27 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_27_SEL_SPI6_SPI_CS0 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_28_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_28_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_28_SEL_GPIO_B_GPIO28 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_29_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_29_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_29_SEL_GPIO_B_GPIO29 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_30_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_30_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_30_SEL_GPIO_B_GPIO30 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_31_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_31_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_31_SEL_GPIO_B_GPIO31 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_32_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_32_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_32_SEL_GPIO_B_GPIO32 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_33_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_33_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_33_SEL_GPIO_B_GPIO33 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_34_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_34_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_34_SEL_GPIO_B_GPIO34 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_34_SEL_SDIO0_SDIO_DATA0 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_35_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_35_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_35_SEL_GPIO_B_GPIO35 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_35_SEL_SDIO0_SDIO_DATA1 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_36_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_36_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_36_SEL_GPIO_B_GPIO36 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_36_SEL_SDIO0_SDIO_DATA2 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_37_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_37_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_37_SEL_GPIO_B_GPIO37 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_37_SEL_SDIO0_SDIO_DATA3 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_38_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_38_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_38_SEL_GPIO_B_GPIO38 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_38_SEL_SDIO0_SDIO_CLK = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_39_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_39_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_39_SEL_GPIO_B_GPIO39 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_39_SEL_SDIO0_SDIO_CMD = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_40_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_40_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_40_SEL_GPIO_B_GPIO40 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_40_SEL_UART0_UART_TX = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_41_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_41_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_41_SEL_GPIO_B_GPIO41 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_41_SEL_UART0_UART_RX = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_42_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_42_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_42_SEL_GPIO_B_GPIO42 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_42_SEL_UART1_UART_TX = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_43_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_43_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_43_SEL_GPIO_B_GPIO43 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_43_SEL_UART1_UART_RX = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_44_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_44_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_44_SEL_GPIO_B_GPIO44 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_44_SEL_UART2_UART_TX = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_45_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_45_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_45_SEL_GPIO_B_GPIO45 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_45_SEL_UART2_UART_RX = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_46_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_46_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_46_SEL_GPIO_B_GPIO46 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_46_SEL_UART3_UART_TX = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_47_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_47_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_47_SEL_GPIO_B_GPIO47 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_47_SEL_UART3_UART_RX = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_48_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_48_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_48_SEL_GPIO_B_GPIO48 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_48_SEL_UART4_UART_TX = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_49_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_49_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_49_SEL_GPIO_B_GPIO49 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_49_SEL_UART4_UART_RX = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_50_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_50_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_50_SEL_GPIO_B_GPIO50 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_50_SEL_I2C0_I2C_SCL = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_51_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_51_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_51_SEL_GPIO_B_GPIO51 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_51_SEL_I2C0_I2C_SDA = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_52_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_52_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_52_SEL_GPIO_B_GPIO52 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_52_SEL_I2C4_I2C_SCL = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_53_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_53_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_53_SEL_GPIO_B_GPIO53 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_53_SEL_I2C4_I2C_SDA = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_54_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_54_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_54_SEL_GPIO_B_GPIO54 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_54_SEL_I2C5_I2C_SCL = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_55_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_55_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_55_SEL_GPIO_B_GPIO55 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_B_55_SEL_I2C5_I2C_SDA = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_56_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_56_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_56_SEL_GPIO_B_GPIO56 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_B_57_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_57_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_B_57_SEL_GPIO_B_GPIO57 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_C_00_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_C_00_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_C_00_SEL_CAN0_CAN_TX = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_C_00_SEL_SPI7_SPI_SCK = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_C_01_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_C_01_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_C_01_SEL_CAN0_CAN_RX = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_C_01_SEL_SPI7_SPI_MISO = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_C_02_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_C_02_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_C_02_SEL_CAN1_CAN_TX = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_C_02_SEL_SPI7_SPI_MOSI = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_C_03_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_C_03_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_C_03_SEL_CAN1_CAN_RX = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_C_03_SEL_SPI7_SPI_CS0 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_D_00_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_00_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_00_SEL_CAM0_CAM_PCLK = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_00_SEL_I2C1_I2C_SCL = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_D_01_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_01_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_01_SEL_CAM0_CAM_HSYNC = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_01_SEL_I2C1_I2C_SDA = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_D_02_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_02_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_02_SEL_CAM0_CAM_DATA0_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_02_SEL_I2C2_I2C_SCL = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_D_03_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_03_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_03_SEL_CAM0_CAM_DATA1_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_03_SEL_I2C2_I2C_SDA = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_D_04_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_04_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_04_SEL_CAM0_CAM_DATA2_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_04_SEL_I2C3_I2C_SCL = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_D_05_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_05_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_05_SEL_CAM0_CAM_DATA3_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_05_SEL_I2C3_I2C_SDA = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_D_06_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_06_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_06_SEL_CAM0_CAM_DATA4_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_06_SEL_UART7_UART_TX = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_D_07_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_07_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_07_SEL_CAM0_CAM_DATA5_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_D_07_SEL_UART7_UART_RX = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_D_08_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_D_08_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_D_08_SEL_CAM0_CAM_DATA6_I = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_D_09_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_D_09_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_D_09_SEL_CAM0_CAM_DATA7_I = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_D_10_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_D_10_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_D_10_SEL_CAM0_CAM_VSYNC = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_E_00_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_00_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_00_SEL_CAM1_CAM_PCLK = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_00_SEL_SPI8_SPI_SCK = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_00_SEL_SPI9_SPI_SCK = 2'd3;

  parameter PAD_MUX_GROUP_PAD_GPIO_E_01_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_01_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_01_SEL_CAM1_CAM_HSYNC = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_01_SEL_SPI8_SPI_CS0 = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_01_SEL_SPI9_SPI_CS0 = 2'd3;

  parameter PAD_MUX_GROUP_PAD_GPIO_E_02_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_02_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_02_SEL_CAM1_CAM_DATA0_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_02_SEL_SPI8_SPI_MISO = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_02_SEL_SPI9_SPI_MISO = 2'd3;

  parameter PAD_MUX_GROUP_PAD_GPIO_E_03_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_03_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_03_SEL_CAM1_CAM_DATA1_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_03_SEL_SPI8_SPI_MOSI = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_03_SEL_SPI9_SPI_MOSI = 2'd3;

  parameter PAD_MUX_GROUP_PAD_GPIO_E_04_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_E_04_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_E_04_SEL_CAM1_CAM_DATA2_I = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_E_05_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_E_05_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_E_05_SEL_CAM1_CAM_DATA3_I = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_E_06_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_E_06_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_E_06_SEL_CAM1_CAM_DATA4_I = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_E_07_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_E_07_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_E_07_SEL_CAM1_CAM_DATA5_I = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_E_08_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_08_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_08_SEL_CAM1_CAM_DATA6_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_08_SEL_SPI10_SPI_SCK = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_E_09_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_09_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_09_SEL_CAM1_CAM_DATA7_I = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_09_SEL_SPI10_SPI_MISO = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_E_10_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_10_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_10_SEL_CAM1_CAM_VSYNC = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_E_10_SEL_SPI10_SPI_MOSI = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_E_11_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_E_11_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_E_11_SEL_SPI10_SPI_CS0 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_E_12_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_E_12_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_E_12_SEL_SPI10_SPI_CS1 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_00_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_00_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_00_SEL_ETH_ETH_RST = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_01_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_01_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_01_SEL_ETH_ETH_TXCK = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_01_SEL_SDIO1_SDIO_DATA0 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_02_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_02_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_02_SEL_ETH_ETH_TXCTL = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_02_SEL_SDIO1_SDIO_DATA1 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_03_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_03_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_03_SEL_ETH_ETH_TXD0 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_03_SEL_SDIO1_SDIO_DATA2 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_04_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_04_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_04_SEL_ETH_ETH_TXD1 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_04_SEL_SDIO1_SDIO_DATA3 = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_05_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_05_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_05_SEL_ETH_ETH_TXD2 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_05_SEL_SDIO1_SDIO_CLK = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_06_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_06_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_06_SEL_ETH_ETH_TXD3 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_06_SEL_SDIO1_SDIO_CMD = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_07_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_07_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_07_SEL_ETH_ETH_MDC = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_07_SEL_UART6_UART_TX = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_08_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_08_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_08_SEL_ETH_ETH_MDIO = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD_GPIO_F_08_SEL_UART6_UART_RX = 2'd2;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_09_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_09_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_09_SEL_ETH_ETH_RXCK = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_10_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_10_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_10_SEL_ETH_ETH_RXCTL = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_11_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_11_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_11_SEL_ETH_ETH_RXD0 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_12_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_12_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_12_SEL_ETH_ETH_RXD1 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_13_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_13_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_13_SEL_ETH_ETH_RXD2 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_14_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_14_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_14_SEL_ETH_ETH_RXD3 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_15_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_15_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_15_SEL_UART5_UART_TX = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_16_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_16_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_16_SEL_UART5_UART_RX = 1'd1;
>>>>>>> 2f33e148 (Updated padframe with qspi linux, now compliant with specs)

  parameter PAD_MUX_GROUP_PAD_GPIO_F_17_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_17_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_17_SEL_QSPI_OT_QSPI_SCK = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_18_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_18_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_18_SEL_QSPI_OT_QSPI_CSN = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_19_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_19_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_19_SEL_QSPI_OT_QSPI_SD0 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_20_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_20_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_20_SEL_QSPI_OT_QSPI_SD1 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_21_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_21_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_21_SEL_QSPI_OT_QSPI_SD2 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_22_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_22_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_22_SEL_QSPI_OT_QSPI_SD3 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_23_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_23_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_23_SEL_QSPI_QSPI_SCK = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_24_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_24_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_24_SEL_QSPI_QSPI_CSN = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_25_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_25_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_25_SEL_QSPI_QSPI_SD0 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_26_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_26_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_26_SEL_QSPI_QSPI_SD1 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_27_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_27_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_27_SEL_QSPI_QSPI_SD2 = 1'd1;

  parameter PAD_MUX_GROUP_PAD_GPIO_F_28_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_28_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD_GPIO_F_28_SEL_QSPI_QSPI_SD3 = 1'd1;

  // Dynamic Pad  instance index

  parameter PORT_MUX_GROUP_A_00_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_00_SEL_A_00 = 1'd0;

  parameter PORT_MUX_GROUP_A_01_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_01_SEL_A_01 = 1'd0;

  parameter PORT_MUX_GROUP_A_02_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_02_SEL_A_02 = 1'd0;

  parameter PORT_MUX_GROUP_A_03_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_03_SEL_A_03 = 1'd0;

  parameter PORT_MUX_GROUP_A_04_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_04_SEL_A_04 = 1'd0;

  parameter PORT_MUX_GROUP_A_05_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_05_SEL_A_05 = 1'd0;

  parameter PORT_MUX_GROUP_A_06_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_06_SEL_A_06 = 1'd0;

  parameter PORT_MUX_GROUP_A_07_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_07_SEL_A_07 = 1'd0;

  parameter PORT_MUX_GROUP_A_08_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_08_SEL_A_08 = 1'd0;

  parameter PORT_MUX_GROUP_A_09_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_09_SEL_A_09 = 1'd0;

  parameter PORT_MUX_GROUP_A_10_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_10_SEL_A_10 = 1'd0;

  parameter PORT_MUX_GROUP_A_11_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_11_SEL_A_11 = 1'd0;

  parameter PORT_MUX_GROUP_A_12_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_12_SEL_A_12 = 1'd0;

  parameter PORT_MUX_GROUP_A_13_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_13_SEL_A_13 = 1'd0;

  parameter PORT_MUX_GROUP_A_14_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_14_SEL_A_14 = 1'd0;

  parameter PORT_MUX_GROUP_A_15_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_15_SEL_A_15 = 1'd0;

  parameter PORT_MUX_GROUP_A_16_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_16_SEL_A_16 = 1'd0;

  parameter PORT_MUX_GROUP_A_17_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_17_SEL_A_17 = 1'd0;

  parameter PORT_MUX_GROUP_A_18_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_18_SEL_A_18 = 1'd0;

  parameter PORT_MUX_GROUP_A_19_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_19_SEL_A_19 = 1'd0;

  parameter PORT_MUX_GROUP_A_20_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_20_SEL_A_20 = 1'd0;

  parameter PORT_MUX_GROUP_A_21_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_21_SEL_A_21 = 1'd0;

  parameter PORT_MUX_GROUP_A_22_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_22_SEL_A_22 = 1'd0;

  parameter PORT_MUX_GROUP_A_23_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_23_SEL_A_23 = 1'd0;

  parameter PORT_MUX_GROUP_A_24_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_24_SEL_A_24 = 1'd0;

  parameter PORT_MUX_GROUP_A_25_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_25_SEL_A_25 = 1'd0;

  parameter PORT_MUX_GROUP_A_26_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_26_SEL_A_26 = 1'd0;

  parameter PORT_MUX_GROUP_A_27_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_27_SEL_A_27 = 1'd0;

  parameter PORT_MUX_GROUP_A_28_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_28_SEL_A_28 = 1'd0;

  parameter PORT_MUX_GROUP_A_29_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_29_SEL_A_29 = 1'd0;

  parameter PORT_MUX_GROUP_A_30_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_30_SEL_A_30 = 1'd0;

  parameter PORT_MUX_GROUP_A_31_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_31_SEL_A_31 = 1'd0;

  parameter PORT_MUX_GROUP_A_32_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_32_SEL_A_32 = 1'd0;

  parameter PORT_MUX_GROUP_A_33_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_33_SEL_A_33 = 1'd0;

  parameter PORT_MUX_GROUP_A_34_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_34_SEL_A_34 = 1'd0;

  parameter PORT_MUX_GROUP_A_35_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_35_SEL_A_35 = 1'd0;

  parameter PORT_MUX_GROUP_A_36_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_36_SEL_A_36 = 1'd0;

  parameter PORT_MUX_GROUP_A_37_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_37_SEL_A_37 = 1'd0;

  parameter PORT_MUX_GROUP_A_38_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_38_SEL_A_38 = 1'd0;

  parameter PORT_MUX_GROUP_A_39_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_39_SEL_A_39 = 1'd0;

  parameter PORT_MUX_GROUP_A_40_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_40_SEL_A_40 = 1'd0;

  parameter PORT_MUX_GROUP_A_41_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_41_SEL_A_41 = 1'd0;

  parameter PORT_MUX_GROUP_A_42_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_42_SEL_A_42 = 1'd0;

  parameter PORT_MUX_GROUP_A_43_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_43_SEL_A_43 = 1'd0;

  parameter PORT_MUX_GROUP_A_44_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_44_SEL_A_44 = 1'd0;

  parameter PORT_MUX_GROUP_A_45_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_45_SEL_A_45 = 1'd0;

  parameter PORT_MUX_GROUP_A_46_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_46_SEL_A_46 = 1'd0;

  parameter PORT_MUX_GROUP_A_47_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_47_SEL_A_47 = 1'd0;

  parameter PORT_MUX_GROUP_A_48_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_48_SEL_A_48 = 1'd0;

  parameter PORT_MUX_GROUP_A_49_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_49_SEL_A_49 = 1'd0;

  parameter PORT_MUX_GROUP_A_50_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_50_SEL_A_50 = 1'd0;

  parameter PORT_MUX_GROUP_A_51_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_51_SEL_A_51 = 1'd0;

  parameter PORT_MUX_GROUP_A_52_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_52_SEL_A_52 = 1'd0;

  parameter PORT_MUX_GROUP_A_53_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_53_SEL_A_53 = 1'd0;

  parameter PORT_MUX_GROUP_A_54_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_54_SEL_A_54 = 1'd0;

  parameter PORT_MUX_GROUP_A_55_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_55_SEL_A_55 = 1'd0;

  parameter PORT_MUX_GROUP_A_56_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_56_SEL_A_56 = 1'd0;

  parameter PORT_MUX_GROUP_A_57_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_57_SEL_A_57 = 1'd0;

  parameter PORT_MUX_GROUP_A_58_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_58_SEL_A_58 = 1'd0;

  parameter PORT_MUX_GROUP_A_59_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_59_SEL_A_59 = 1'd0;

  parameter PORT_MUX_GROUP_A_60_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_60_SEL_A_60 = 1'd0;

  parameter PORT_MUX_GROUP_A_61_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_61_SEL_A_61 = 1'd0;

  parameter PORT_MUX_GROUP_A_62_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_62_SEL_A_62 = 1'd0;

  parameter PORT_MUX_GROUP_A_63_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_63_SEL_A_63 = 1'd0;

  parameter PORT_MUX_GROUP_A_64_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_64_SEL_A_64 = 1'd0;

  parameter PORT_MUX_GROUP_A_65_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_65_SEL_A_65 = 1'd0;

  parameter PORT_MUX_GROUP_A_66_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_66_SEL_A_66 = 1'd0;

  parameter PORT_MUX_GROUP_A_67_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_67_SEL_A_67 = 1'd0;

  parameter PORT_MUX_GROUP_A_68_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_68_SEL_A_68 = 1'd0;

  parameter PORT_MUX_GROUP_A_69_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_69_SEL_A_69 = 1'd0;

  parameter PORT_MUX_GROUP_A_70_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_70_SEL_A_70 = 1'd0;

  parameter PORT_MUX_GROUP_A_71_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_71_SEL_A_71 = 1'd0;

  parameter PORT_MUX_GROUP_A_72_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_72_SEL_A_72 = 1'd0;

  parameter PORT_MUX_GROUP_A_73_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_73_SEL_A_73 = 1'd0;

  parameter PORT_MUX_GROUP_A_74_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_74_SEL_A_74 = 1'd0;

  parameter PORT_MUX_GROUP_A_75_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_75_SEL_A_75 = 1'd0;

  parameter PORT_MUX_GROUP_A_76_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_76_SEL_A_76 = 1'd0;

  parameter PORT_MUX_GROUP_A_77_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_77_SEL_A_77 = 1'd0;

  parameter PORT_MUX_GROUP_A_78_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_78_SEL_A_78 = 1'd0;

  parameter PORT_MUX_GROUP_A_79_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_79_SEL_A_79 = 1'd0;

  parameter PORT_MUX_GROUP_A_80_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_80_SEL_A_80 = 1'd0;

  parameter PORT_MUX_GROUP_A_81_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_81_SEL_A_81 = 1'd0;

  parameter PORT_MUX_GROUP_A_82_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_82_SEL_A_82 = 1'd0;

  parameter PORT_MUX_GROUP_A_83_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_83_SEL_A_83 = 1'd0;

  parameter PORT_MUX_GROUP_A_84_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_84_SEL_A_84 = 1'd0;

  parameter PORT_MUX_GROUP_A_85_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_85_SEL_A_85 = 1'd0;

  parameter PORT_MUX_GROUP_A_86_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_86_SEL_A_86 = 1'd0;

  parameter PORT_MUX_GROUP_A_87_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_87_SEL_A_87 = 1'd0;

  parameter PORT_MUX_GROUP_A_88_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_88_SEL_A_88 = 1'd0;

  parameter PORT_MUX_GROUP_A_89_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_89_SEL_A_89 = 1'd0;

  parameter PORT_MUX_GROUP_A_90_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_90_SEL_A_90 = 1'd0;

  parameter PORT_MUX_GROUP_A_91_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_91_SEL_A_91 = 1'd0;

  parameter PORT_MUX_GROUP_A_92_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_A_92_SEL_A_92 = 1'd0;

  parameter PORT_MUX_GROUP_B_00_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_00_SEL_B_00 = 1'd0;

  parameter PORT_MUX_GROUP_B_01_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_01_SEL_B_01 = 1'd0;

  parameter PORT_MUX_GROUP_B_02_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_02_SEL_B_02 = 1'd0;

  parameter PORT_MUX_GROUP_B_03_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_03_SEL_B_03 = 1'd0;

  parameter PORT_MUX_GROUP_B_04_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_04_SEL_B_04 = 1'd0;

  parameter PORT_MUX_GROUP_B_05_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_05_SEL_B_05 = 1'd0;

  parameter PORT_MUX_GROUP_B_06_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_06_SEL_B_06 = 1'd0;

  parameter PORT_MUX_GROUP_B_07_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_07_SEL_B_07 = 1'd0;

  parameter PORT_MUX_GROUP_B_08_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_08_SEL_B_08 = 1'd0;

  parameter PORT_MUX_GROUP_B_09_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_09_SEL_B_09 = 1'd0;

<<<<<<< HEAD
  parameter PORT_MUX_GROUP_B_10_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_10_SEL_B_10 = 1'd0;

  parameter PORT_MUX_GROUP_B_11_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_11_SEL_B_11 = 1'd0;

  parameter PORT_MUX_GROUP_B_12_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_12_SEL_B_12 = 1'd0;

  parameter PORT_MUX_GROUP_B_13_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_13_SEL_B_13 = 1'd0;

  parameter PORT_MUX_GROUP_B_14_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_14_SEL_B_14 = 1'd0;

  parameter PORT_MUX_GROUP_B_15_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_15_SEL_B_15 = 1'd0;

  parameter PORT_MUX_GROUP_B_16_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_16_SEL_B_16 = 1'd0;

  parameter PORT_MUX_GROUP_B_17_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_17_SEL_B_17 = 1'd0;

  parameter PORT_MUX_GROUP_B_18_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_18_SEL_B_18 = 1'd0;

  parameter PORT_MUX_GROUP_B_19_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_19_SEL_B_19 = 1'd0;

  parameter PORT_MUX_GROUP_B_20_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_20_SEL_B_20 = 1'd0;

  parameter PORT_MUX_GROUP_B_21_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_21_SEL_B_21 = 1'd0;

  parameter PORT_MUX_GROUP_B_22_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_22_SEL_B_22 = 1'd0;

  parameter PORT_MUX_GROUP_B_23_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_23_SEL_B_23 = 1'd0;

  parameter PORT_MUX_GROUP_B_24_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_24_SEL_B_24 = 1'd0;

  parameter PORT_MUX_GROUP_B_25_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_25_SEL_B_25 = 1'd0;

  parameter PORT_MUX_GROUP_B_26_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_26_SEL_B_26 = 1'd0;

  parameter PORT_MUX_GROUP_B_27_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_27_SEL_B_27 = 1'd0;

  parameter PORT_MUX_GROUP_B_28_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_28_SEL_B_28 = 1'd0;

  parameter PORT_MUX_GROUP_B_29_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_29_SEL_B_29 = 1'd0;

  parameter PORT_MUX_GROUP_B_30_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_30_SEL_B_30 = 1'd0;

  parameter PORT_MUX_GROUP_B_31_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_31_SEL_B_31 = 1'd0;

  parameter PORT_MUX_GROUP_B_32_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_32_SEL_B_32 = 1'd0;

  parameter PORT_MUX_GROUP_B_33_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_33_SEL_B_33 = 1'd0;

  parameter PORT_MUX_GROUP_B_34_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_34_SEL_B_34 = 1'd0;

  parameter PORT_MUX_GROUP_B_35_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_35_SEL_B_35 = 1'd0;

  parameter PORT_MUX_GROUP_B_36_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_36_SEL_B_36 = 1'd0;

  parameter PORT_MUX_GROUP_B_37_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_37_SEL_B_37 = 1'd0;

  parameter PORT_MUX_GROUP_B_38_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_38_SEL_B_38 = 1'd0;

  parameter PORT_MUX_GROUP_B_39_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_39_SEL_B_39 = 1'd0;

  parameter PORT_MUX_GROUP_B_40_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_40_SEL_B_40 = 1'd0;

  parameter PORT_MUX_GROUP_B_41_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_41_SEL_B_41 = 1'd0;

  parameter PORT_MUX_GROUP_B_42_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_42_SEL_B_42 = 1'd0;

  parameter PORT_MUX_GROUP_B_43_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_43_SEL_B_43 = 1'd0;

  parameter PORT_MUX_GROUP_B_44_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_44_SEL_B_44 = 1'd0;

  parameter PORT_MUX_GROUP_B_45_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_45_SEL_B_45 = 1'd0;

  parameter PORT_MUX_GROUP_B_46_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_46_SEL_B_46 = 1'd0;

  parameter PORT_MUX_GROUP_B_47_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_47_SEL_B_47 = 1'd0;

  parameter PORT_MUX_GROUP_B_48_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_48_SEL_B_48 = 1'd0;

  parameter PORT_MUX_GROUP_B_49_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_49_SEL_B_49 = 1'd0;

  parameter PORT_MUX_GROUP_B_50_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_50_SEL_B_50 = 1'd0;

  parameter PORT_MUX_GROUP_B_51_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_51_SEL_B_51 = 1'd0;

  parameter PORT_MUX_GROUP_B_52_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_52_SEL_B_52 = 1'd0;

  parameter PORT_MUX_GROUP_B_53_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_53_SEL_B_53 = 1'd0;

  parameter PORT_MUX_GROUP_B_54_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_54_SEL_B_54 = 1'd0;

  parameter PORT_MUX_GROUP_B_55_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_55_SEL_B_55 = 1'd0;

  parameter PORT_MUX_GROUP_B_56_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_56_SEL_B_56 = 1'd0;

  parameter PORT_MUX_GROUP_B_57_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_57_SEL_B_57 = 1'd0;

  parameter PORT_MUX_GROUP_B_58_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_58_SEL_B_58 = 1'd0;

  parameter PORT_MUX_GROUP_B_59_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_59_SEL_B_59 = 1'd0;

  parameter PORT_MUX_GROUP_B_60_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_60_SEL_B_60 = 1'd0;

  parameter PORT_MUX_GROUP_B_61_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_61_SEL_B_61 = 1'd0;

  parameter PORT_MUX_GROUP_B_62_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_62_SEL_B_62 = 1'd0;

  parameter PORT_MUX_GROUP_B_63_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_63_SEL_B_63 = 1'd0;

  parameter PORT_MUX_GROUP_B_64_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_B_64_SEL_B_64 = 1'd0;

  parameter PORT_MUX_GROUP_LINUX_QSPI_00_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_LINUX_QSPI_00_SEL_LINUX_QSPI_00 = 1'd0;

  parameter PORT_MUX_GROUP_LINUX_QSPI_01_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_LINUX_QSPI_01_SEL_LINUX_QSPI_01 = 1'd0;

  parameter PORT_MUX_GROUP_LINUX_QSPI_02_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_LINUX_QSPI_02_SEL_LINUX_QSPI_02 = 1'd0;

  parameter PORT_MUX_GROUP_LINUX_QSPI_03_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_LINUX_QSPI_03_SEL_LINUX_QSPI_03 = 1'd0;

  parameter PORT_MUX_GROUP_LINUX_QSPI_04_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_LINUX_QSPI_04_SEL_LINUX_QSPI_04 = 1'd0;

  parameter PORT_MUX_GROUP_LINUX_QSPI_05_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_LINUX_QSPI_05_SEL_LINUX_QSPI_05 = 1'd0;

  parameter PORT_MUX_GROUP_OT_QSPI_00_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_OT_QSPI_00_SEL_OT_QSPI_00 = 1'd0;

  parameter PORT_MUX_GROUP_OT_QSPI_01_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_OT_QSPI_01_SEL_OT_QSPI_01 = 1'd0;

  parameter PORT_MUX_GROUP_OT_QSPI_02_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_OT_QSPI_02_SEL_OT_QSPI_02 = 1'd0;

  parameter PORT_MUX_GROUP_OT_QSPI_03_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_OT_QSPI_03_SEL_OT_QSPI_03 = 1'd0;

  parameter PORT_MUX_GROUP_OT_QSPI_04_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_OT_QSPI_04_SEL_OT_QSPI_04 = 1'd0;

  parameter PORT_MUX_GROUP_OT_QSPI_05_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_OT_QSPI_05_SEL_OT_QSPI_05 = 1'd0;
=======
  parameter PORT_MUX_GROUP_PAD_GPIO_F_16_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD_GPIO_F_16_SEL_PAD_GPIO_F_16 = 1'd0;

  parameter PORT_MUX_GROUP_PAD_GPIO_F_17_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD_GPIO_F_17_SEL_PAD_GPIO_F_17 = 1'd0;

  parameter PORT_MUX_GROUP_PAD_GPIO_F_18_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD_GPIO_F_18_SEL_PAD_GPIO_F_18 = 1'd0;

  parameter PORT_MUX_GROUP_PAD_GPIO_F_19_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD_GPIO_F_19_SEL_PAD_GPIO_F_19 = 1'd0;

  parameter PORT_MUX_GROUP_PAD_GPIO_F_20_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD_GPIO_F_20_SEL_PAD_GPIO_F_20 = 1'd0;

  parameter PORT_MUX_GROUP_PAD_GPIO_F_21_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD_GPIO_F_21_SEL_PAD_GPIO_F_21 = 1'd0;

  parameter PORT_MUX_GROUP_PAD_GPIO_F_22_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD_GPIO_F_22_SEL_PAD_GPIO_F_22 = 1'd0;
<<<<<<< HEAD
>>>>>>> d61477d7 (Updated padframe with QSPI OT signals and bootselet signals)
=======

  parameter PORT_MUX_GROUP_PAD_GPIO_F_23_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD_GPIO_F_23_SEL_PAD_GPIO_F_23 = 1'd0;

  parameter PORT_MUX_GROUP_PAD_GPIO_F_24_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD_GPIO_F_24_SEL_PAD_GPIO_F_24 = 1'd0;

  parameter PORT_MUX_GROUP_PAD_GPIO_F_25_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD_GPIO_F_25_SEL_PAD_GPIO_F_25 = 1'd0;

  parameter PORT_MUX_GROUP_PAD_GPIO_F_26_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD_GPIO_F_26_SEL_PAD_GPIO_F_26 = 1'd0;

  parameter PORT_MUX_GROUP_PAD_GPIO_F_27_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD_GPIO_F_27_SEL_PAD_GPIO_F_27 = 1'd0;

  parameter PORT_MUX_GROUP_PAD_GPIO_F_28_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD_GPIO_F_28_SEL_PAD_GPIO_F_28 = 1'd0;
>>>>>>> 2f33e148 (Updated padframe with qspi linux, now compliant with specs)
endpackage : pkg_internal_alsaqr_periph_padframe_periphs
