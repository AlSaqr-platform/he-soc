## This file has been generated
adapter_khz     1000

# Olimex ARM-USB-OCD-H
interface ftdi
ftdi_device_desc "Olimex OpenOCD JTAG ARM-USB-OCD-H"
ftdi_vid_pid 0x15ba 0x002b

ftdi_layout_init 0x0908 0x0b1b
ftdi_layout_signal nSRST -oe 0x0200
ftdi_layout_signal nTRST -data 0x0100
ftdi_layout_signal LED -data 0x0800


set _CHIPNAME riscv
jtag newtap $_CHIPNAME cpu -irlen 5

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME riscv -chain-position $_TARGETNAME -coreid 0

gdb_report_data_abort enable
gdb_report_register_access_error enable

riscv set_reset_timeout_sec 120
riscv set_command_timeout_sec 120

# prefer to use sba for system bus access
riscv set_prefer_sba off

# Try enabling address translation (only works for newer versions)
if { [catch {riscv set_enable_virtual on} ] } {
    echo "Warning: This version of OpenOCD does not support address translation. To debug on virtual addresses, please update to the latest version." }

init
reset halt

halt
echo "Loading keys"

mww 0x1A106000 0x00000001

echo "Writing the keys"
mww 0x1A106004 0x0000EEBA
mww 0x1A106008 0x00000000
mww 0x1A10600C 0xFFFF327F
mww 0x1A106010 0xFFFFFFFF
               
mww 0x1A106014 0x000212FF
mww 0x1A106018 0x00000000
mww 0x1A10601C 0xFFFEEE6E
mww 0x1A106020 0xFFFFFFFF

echo "Set up registers to 25MHz, DCO locked"
mww 0x1A100004  0x01ff0000
mww 0x1A10000C  0x2801ff71
mww 0x1A100014  0x2801ff71
mww 0x1A10001C  0x2801ff71
mww 0x1A100024  0x2801ff71


# M REG 600MHz
#mww 0x1a100010  0x00008f0a

# M REG 100MHz
mww 0x1a100010  0x000017d7

# M REG/2 50MHz
#mww 0x1a100010  0x00000beb

# 30MHz
#mww 0x1a100010  0x00000726

# 15MHz
#mww 0x1a100010  0x00000393


mww 0x1a100018  0x000017d7
mww 0x1a100020  0x000017d7
mww 0x1a100028  0x000017d7
mww 0x1A100030  0x00001111
mww 0x1A10000C  0x2801ff73
mww 0x1A100014  0x2801ff73
mww 0x1A10001C  0x2801ff73
mww 0x1A100024  0x2801ff73
mww 0x1A100030  0x00001111


# D REG
#mww 0x1A10002C  0x02020202

####################################################
#          Fout[i]= 2^14 *(Mreg/Dreg)              #
#                                                  #
#             xx   | xx  | xx| xx                  #               
#           Cluster|Hyper|SoC|Host                 #
#                                                  #                        
# NB: Hyper has additional divider by 2 internally #
####################################################

#hyper to 300Mhz and SoC 300Mhz (from 600Mhz)
#mww 0x1A10002C  0x02010202

#hyper to 150Mhz and SoC 300Mhz (from 600Mhz)
#mww 0x1A10002C  0x02020202

#hyper to 75Mhz and SoC 300Mhz (from 600Mhz) 
#mww 0x1A10002C  0x02040202

#hyper to 37.5Mhz and SoC 300Mhz (from 600Mhz)
#mww 0x1A10002C  0x02080202

#hyper to 37.5Mhz and SoC 150Mhz (from 600Mhz)
#mww 0x1A10002C  0x04080404

#hyper to 15Mhz and SoC 30Mhz (from 30Mhz)
#mww 0x1A10002C  0x01010101

#hyper to 50Mhz and SoC 100Mhz (from 100Mhz)
#mww 0x1A10002C  0x01010101

#hyper to 25Mhz and SoC 100Mhz (from 100Mhz)
#mww 0x1A10002C  0x01020101

#hyper to 12.5Mhz and SoC 100Mhz (from 100Mhz)
#mww 0x1A10002C  0x01040101

#hyper to 25Mhz and SoC 50Mhz (from 100Mhz)
mww 0x1A10002C  0x02020202

#hyper to 6.25Mhz and SoC 100Mhz (from 100Mhz)
#mww 0x1A10002C  0x01080101

#hyper to 12.5Mhz and SoC 50Mhz (from 50Mhz)
#mww 0x1A10002C  0x01020101